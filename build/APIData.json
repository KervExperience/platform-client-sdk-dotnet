{
  "deletealertinginteractionstatsalert": {
    "operationId": "deletealertinginteractionstatsalert",
    "functionName": "DeleteAlertingInteractionstatsAlert",
    "signature": "DeleteAlertingInteractionstatsAlert(alertId)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAlertingInteractionstatsAlertExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var alertId = \"alertId_example\";  // string | Alert ID\n\n            try\n            { \n                // Delete an interaction stats alert\n                apiInstance.DeleteAlertingInteractionstatsAlert(alertId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.DeleteAlertingInteractionstatsAlert: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletealertinginteractionstatsrule": {
    "operationId": "deletealertinginteractionstatsrule",
    "functionName": "DeleteAlertingInteractionstatsRule",
    "signature": "DeleteAlertingInteractionstatsRule(ruleId)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAlertingInteractionstatsRuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var ruleId = \"ruleId_example\";  // string | Rule ID\n\n            try\n            { \n                // Delete an interaction stats rule.\n                apiInstance.DeleteAlertingInteractionstatsRule(ruleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.DeleteAlertingInteractionstatsRule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertingalertsactive": {
    "operationId": "getalertingalertsactive",
    "functionName": "GetAlertingAlertsActive",
    "signature": "GetAlertingAlertsActive()",
    "return": "ActiveAlertCount",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingAlertsActiveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n\n            try\n            { \n                // Gets active alert count for a user.\n                ActiveAlertCount result = apiInstance.GetAlertingAlertsActive();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingAlertsActive: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertinginteractionstatsalert": {
    "operationId": "getalertinginteractionstatsalert",
    "functionName": "GetAlertingInteractionstatsAlert",
    "signature": "GetAlertingInteractionstatsAlert(alertId, expand)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsAlert",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingInteractionstatsAlertExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var alertId = \"alertId_example\";  // string | Alert ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get an interaction stats alert\n                InteractionStatsAlert result = apiInstance.GetAlertingInteractionstatsAlert(alertId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingInteractionstatsAlert: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertinginteractionstatsalerts": {
    "operationId": "getalertinginteractionstatsalerts",
    "functionName": "GetAlertingInteractionstatsAlerts",
    "signature": "GetAlertingInteractionstatsAlerts(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsAlertContainer",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingInteractionstatsAlertsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get interaction stats alert list.\n                InteractionStatsAlertContainer result = apiInstance.GetAlertingInteractionstatsAlerts(expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingInteractionstatsAlerts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertinginteractionstatsalertsunread": {
    "operationId": "getalertinginteractionstatsalertsunread",
    "functionName": "GetAlertingInteractionstatsAlertsUnread",
    "signature": "GetAlertingInteractionstatsAlertsUnread()",
    "return": "UnreadMetric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingInteractionstatsAlertsUnreadExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n\n            try\n            { \n                // Gets user unread count of interaction stats alerts.\n                UnreadMetric result = apiInstance.GetAlertingInteractionstatsAlertsUnread();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingInteractionstatsAlertsUnread: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertinginteractionstatsrule": {
    "operationId": "getalertinginteractionstatsrule",
    "functionName": "GetAlertingInteractionstatsRule",
    "signature": "GetAlertingInteractionstatsRule(ruleId, expand)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingInteractionstatsRuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var ruleId = \"ruleId_example\";  // string | Rule ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get an interaction stats rule.\n                InteractionStatsRule result = apiInstance.GetAlertingInteractionstatsRule(ruleId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingInteractionstatsRule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getalertinginteractionstatsrules": {
    "operationId": "getalertinginteractionstatsrules",
    "functionName": "GetAlertingInteractionstatsRules",
    "signature": "GetAlertingInteractionstatsRules(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRuleContainer",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAlertingInteractionstatsRulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get an interaction stats rule list.\n                InteractionStatsRuleContainer result = apiInstance.GetAlertingInteractionstatsRules(expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.GetAlertingInteractionstatsRules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postalertinginteractionstatsrules": {
    "operationId": "postalertinginteractionstatsrules",
    "functionName": "PostAlertingInteractionstatsRules",
    "signature": "PostAlertingInteractionstatsRules(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "InteractionStatsRule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAlertingInteractionstatsRulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var body = new InteractionStatsRule(); // InteractionStatsRule | AlertingRule\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Create an interaction stats rule.\n                InteractionStatsRule result = apiInstance.PostAlertingInteractionstatsRules(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.PostAlertingInteractionstatsRules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putalertinginteractionstatsalert": {
    "operationId": "putalertinginteractionstatsalert",
    "functionName": "PutAlertingInteractionstatsAlert",
    "signature": "PutAlertingInteractionstatsAlert(alertId, body, expand)",
    "parameters": [
      {
        "name": "alertId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UnreadStatus",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UnreadStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAlertingInteractionstatsAlertExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var alertId = \"alertId_example\";  // string | Alert ID\n            var body = new UnreadStatus(); // UnreadStatus | InteractionStatsAlert\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Update an interaction stats alert read status\n                UnreadStatus result = apiInstance.PutAlertingInteractionstatsAlert(alertId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.PutAlertingInteractionstatsAlert: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putalertinginteractionstatsrule": {
    "operationId": "putalertinginteractionstatsrule",
    "functionName": "PutAlertingInteractionstatsRule",
    "signature": "PutAlertingInteractionstatsRule(ruleId, body, expand)",
    "parameters": [
      {
        "name": "ruleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InteractionStatsRule",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "InteractionStatsRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAlertingInteractionstatsRuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AlertingApi();\n            var ruleId = \"ruleId_example\";  // string | Rule ID\n            var body = new InteractionStatsRule(); // InteractionStatsRule | AlertingRule\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Update an interaction stats rule\n                InteractionStatsRule result = apiInstance.PutAlertingInteractionstatsRule(ruleId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Alerting.PutAlertingInteractionstatsRule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteanalyticsconversationsdetailsjob": {
    "operationId": "deleteanalyticsconversationsdetailsjob",
    "functionName": "DeleteAnalyticsConversationsDetailsJob",
    "signature": "DeleteAnalyticsConversationsDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAnalyticsConversationsDetailsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Delete/cancel an async request\n                apiInstance.DeleteAnalyticsConversationsDetailsJob(jobId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteAnalyticsConversationsDetailsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteanalyticsreportingschedule": {
    "operationId": "deleteanalyticsreportingschedule",
    "functionName": "DeleteAnalyticsReportingSchedule",
    "signature": "DeleteAnalyticsReportingSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAnalyticsReportingScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Delete a scheduled report job.\n                apiInstance.DeleteAnalyticsReportingSchedule(scheduleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.DeleteAnalyticsReportingSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteanalyticsusersdetailsjob": {
    "operationId": "deleteanalyticsusersdetailsjob",
    "functionName": "DeleteAnalyticsUsersDetailsJob",
    "signature": "DeleteAnalyticsUsersDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAnalyticsUsersDetailsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Delete/cancel an async request\n                apiInstance.DeleteAnalyticsUsersDetailsJob(jobId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteAnalyticsUsersDetailsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsbotflowreportingturns": {
    "operationId": "getanalyticsbotflowreportingturns",
    "functionName": "GetAnalyticsBotflowReportingturns",
    "signature": "GetAnalyticsBotflowReportingturns(botFlowId, after, pageSize, actionId, sessionId)",
    "parameters": [
      {
        "name": "botFlowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "actionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sessionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ReportingTurnsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsBotflowReportingturnsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var botFlowId = \"botFlowId_example\";  // string | ID of the bot flow.\n            var after = \"after_example\";  // string | The cursor that points to the ID of the last item in the list of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Max number of entities to return. Maximum of 250 (optional)  (default to \"50\")\n            var actionId = \"actionId_example\";  // string | Optional action ID to get the reporting turns associated to a particular flow action (optional) \n            var sessionId = \"sessionId_example\";  // string | Optional session ID to get the reporting turns for a particular session (optional) \n\n            try\n            { \n                // Get Reporting Turns.\n                ReportingTurnsResponse result = apiInstance.GetAnalyticsBotflowReportingturns(botFlowId, after, pageSize, actionId, sessionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsBotflowReportingturns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsconversationdetails": {
    "operationId": "getanalyticsconversationdetails",
    "functionName": "GetAnalyticsConversationDetails",
    "signature": "GetAnalyticsConversationDetails(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributes",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsConversationDetailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get a conversation by id\n                AnalyticsConversationWithoutAttributes result = apiInstance.GetAnalyticsConversationDetails(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetAnalyticsConversationDetails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsconversationsdetails": {
    "operationId": "getanalyticsconversationsdetails",
    "functionName": "GetAnalyticsConversationsDetails",
    "signature": "GetAnalyticsConversationsDetails(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributesMultiGetResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsConversationsDetailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var id = new List<string>(); // List<string> | Comma-separated conversation ids (optional) \n\n            try\n            { \n                // Gets multiple conversations by id\n                AnalyticsConversationWithoutAttributesMultiGetResponse result = apiInstance.GetAnalyticsConversationsDetails(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetAnalyticsConversationsDetails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsconversationsdetailsjob": {
    "operationId": "getanalyticsconversationsdetailsjob",
    "functionName": "GetAnalyticsConversationsDetailsJob",
    "signature": "GetAnalyticsConversationsDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsConversationsDetailsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Get status for async query for conversation details\n                AsyncQueryStatus result = apiInstance.GetAnalyticsConversationsDetailsJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetAnalyticsConversationsDetailsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsconversationsdetailsjobresults": {
    "operationId": "getanalyticsconversationsdetailsjobresults",
    "functionName": "GetAnalyticsConversationsDetailsJobResults",
    "signature": "GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "AnalyticsConversationAsyncQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsConversationsDetailsJobResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var jobId = \"jobId_example\";  // string | jobId\n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n            var pageSize = 56;  // int? | The desired maximum number of results (optional) \n\n            try\n            { \n                // Fetch a page of results for an async query\n                AnalyticsConversationAsyncQueryResponse result = apiInstance.GetAnalyticsConversationsDetailsJobResults(jobId, cursor, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetAnalyticsConversationsDetailsJobResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsconversationsdetailsjobsavailability": {
    "operationId": "getanalyticsconversationsdetailsjobsavailability",
    "functionName": "GetAnalyticsConversationsDetailsJobsAvailability",
    "signature": "GetAnalyticsConversationsDetailsJobsAvailability()",
    "return": "DataAvailabilityResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsConversationsDetailsJobsAvailabilityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Lookup the datalake availability date and time\n                DataAvailabilityResponse result = apiInstance.GetAnalyticsConversationsDetailsJobsAvailability();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetAnalyticsConversationsDetailsJobsAvailability: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsdataretentionsettings": {
    "operationId": "getanalyticsdataretentionsettings",
    "functionName": "GetAnalyticsDataretentionSettings",
    "signature": "GetAnalyticsDataretentionSettings()",
    "return": "AnalyticsDataRetentionResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsDataretentionSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n\n            try\n            { \n                // Get analytics data retention setting\n                AnalyticsDataRetentionResponse result = apiInstance.GetAnalyticsDataretentionSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsDataretentionSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingexports": {
    "operationId": "getanalyticsreportingexports",
    "functionName": "GetAnalyticsReportingExports",
    "signature": "GetAnalyticsReportingExports(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ReportingExportJobListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingExportsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get all view export requests for a user\n                ReportingExportJobListing result = apiInstance.GetAnalyticsReportingExports(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingExports: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingexportsmetadata": {
    "operationId": "getanalyticsreportingexportsmetadata",
    "functionName": "GetAnalyticsReportingExportsMetadata",
    "signature": "GetAnalyticsReportingExportsMetadata()",
    "return": "ReportingExportMetadataJobListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingExportsMetadataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n\n            try\n            { \n                // Get all export metadata\n                ReportingExportMetadataJobListing result = apiInstance.GetAnalyticsReportingExportsMetadata();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingExportsMetadata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingmetadata": {
    "operationId": "getanalyticsreportingmetadata",
    "functionName": "GetAnalyticsReportingMetadata",
    "signature": "GetAnalyticsReportingMetadata(pageNumber, pageSize, locale)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ReportMetaDataEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingMetadataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var locale = \"locale_example\";  // string | Locale (optional) \n\n            try\n            { \n                // Get list of reporting metadata.\n                ReportMetaDataEntityListing result = apiInstance.GetAnalyticsReportingMetadata(pageNumber, pageSize, locale);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingMetadata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingreportidmetadata": {
    "operationId": "getanalyticsreportingreportidmetadata",
    "functionName": "GetAnalyticsReportingReportIdMetadata",
    "signature": "GetAnalyticsReportingReportIdMetadata(reportId, locale)",
    "parameters": [
      {
        "name": "reportId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ReportMetaData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingReportIdMetadataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var reportId = \"reportId_example\";  // string | Report ID\n            var locale = \"locale_example\";  // string | Locale (optional) \n\n            try\n            { \n                // Get a reporting metadata.\n                ReportMetaData result = apiInstance.GetAnalyticsReportingReportIdMetadata(reportId, locale);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingReportIdMetadata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingreportformats": {
    "operationId": "getanalyticsreportingreportformats",
    "functionName": "GetAnalyticsReportingReportformats",
    "signature": "GetAnalyticsReportingReportformats()",
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingReportformatsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n\n            try\n            { \n                // Get a list of report formats\n                List<string> result = apiInstance.GetAnalyticsReportingReportformats();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingReportformats: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingschedule": {
    "operationId": "getanalyticsreportingschedule",
    "functionName": "GetAnalyticsReportingSchedule",
    "signature": "GetAnalyticsReportingSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ReportSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Get a scheduled report job.\n                ReportSchedule result = apiInstance.GetAnalyticsReportingSchedule(scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingschedulehistory": {
    "operationId": "getanalyticsreportingschedulehistory",
    "functionName": "GetAnalyticsReportingScheduleHistory",
    "signature": "GetAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ReportRunEntryEntityDomainListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingScheduleHistoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n            var pageNumber = 56;  // int? |  (optional)  (default to 1)\n            var pageSize = 56;  // int? |  (optional)  (default to 25)\n\n            try\n            { \n                // Get list of completed scheduled report jobs.\n                ReportRunEntryEntityDomainListing result = apiInstance.GetAnalyticsReportingScheduleHistory(scheduleId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingScheduleHistory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingschedulehistorylatest": {
    "operationId": "getanalyticsreportingschedulehistorylatest",
    "functionName": "GetAnalyticsReportingScheduleHistoryLatest",
    "signature": "GetAnalyticsReportingScheduleHistoryLatest(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ReportRunEntry",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingScheduleHistoryLatestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Get most recently completed scheduled report job.\n                ReportRunEntry result = apiInstance.GetAnalyticsReportingScheduleHistoryLatest(scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingScheduleHistoryLatest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingschedulehistoryrunid": {
    "operationId": "getanalyticsreportingschedulehistoryrunid",
    "functionName": "GetAnalyticsReportingScheduleHistoryRunId",
    "signature": "GetAnalyticsReportingScheduleHistoryRunId(runId, scheduleId)",
    "parameters": [
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ReportRunEntry",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingScheduleHistoryRunIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var runId = \"runId_example\";  // string | Run ID\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // A completed scheduled report job\n                ReportRunEntry result = apiInstance.GetAnalyticsReportingScheduleHistoryRunId(runId, scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingScheduleHistoryRunId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingschedules": {
    "operationId": "getanalyticsreportingschedules",
    "functionName": "GetAnalyticsReportingSchedules",
    "signature": "GetAnalyticsReportingSchedules(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ReportScheduleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a list of scheduled report jobs\n                ReportScheduleEntityListing result = apiInstance.GetAnalyticsReportingSchedules(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingsettings": {
    "operationId": "getanalyticsreportingsettings",
    "functionName": "GetAnalyticsReportingSettings",
    "signature": "GetAnalyticsReportingSettings()",
    "return": "AnalyticsReportingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n\n            try\n            { \n                // Get AnalyticsReportingSettings for an organization\n                AnalyticsReportingSettings result = apiInstance.GetAnalyticsReportingSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsreportingtimeperiods": {
    "operationId": "getanalyticsreportingtimeperiods",
    "functionName": "GetAnalyticsReportingTimeperiods",
    "signature": "GetAnalyticsReportingTimeperiods()",
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsReportingTimeperiodsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n\n            try\n            { \n                // Get a list of report time periods.\n                List<string> result = apiInstance.GetAnalyticsReportingTimeperiods();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.GetAnalyticsReportingTimeperiods: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsusersdetailsjob": {
    "operationId": "getanalyticsusersdetailsjob",
    "functionName": "GetAnalyticsUsersDetailsJob",
    "signature": "GetAnalyticsUsersDetailsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AsyncQueryStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsUsersDetailsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Get status for async query for user details\n                AsyncQueryStatus result = apiInstance.GetAnalyticsUsersDetailsJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAnalyticsUsersDetailsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsusersdetailsjobresults": {
    "operationId": "getanalyticsusersdetailsjobresults",
    "functionName": "GetAnalyticsUsersDetailsJobResults",
    "signature": "GetAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "AnalyticsUserDetailsAsyncQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsUsersDetailsJobResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var jobId = \"jobId_example\";  // string | jobId\n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n            var pageSize = 56;  // int? | The desired maximum number of results (optional) \n\n            try\n            { \n                // Fetch a page of results for an async query\n                AnalyticsUserDetailsAsyncQueryResponse result = apiInstance.GetAnalyticsUsersDetailsJobResults(jobId, cursor, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAnalyticsUsersDetailsJobResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getanalyticsusersdetailsjobsavailability": {
    "operationId": "getanalyticsusersdetailsjobsavailability",
    "functionName": "GetAnalyticsUsersDetailsJobsAvailability",
    "signature": "GetAnalyticsUsersDetailsJobsAvailability()",
    "return": "DataAvailabilityResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAnalyticsUsersDetailsJobsAvailabilityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n\n            try\n            { \n                // Lookup the datalake availability date and time\n                DataAvailabilityResponse result = apiInstance.GetAnalyticsUsersDetailsJobsAvailability();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAnalyticsUsersDetailsJobsAvailability: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchanalyticsreportingsettings": {
    "operationId": "patchanalyticsreportingsettings",
    "functionName": "PatchAnalyticsReportingSettings",
    "signature": "PatchAnalyticsReportingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AnalyticsReportingSettings",
        "required": "true"
      }
    ],
    "return": "AnalyticsReportingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchAnalyticsReportingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new AnalyticsReportingSettings(); // AnalyticsReportingSettings | AnalyticsReportingSettingsRequest\n\n            try\n            { \n                // Patch AnalyticsReportingSettings values for an organization\n                AnalyticsReportingSettings result = apiInstance.PatchAnalyticsReportingSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PatchAnalyticsReportingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsbotsaggregatesquery": {
    "operationId": "postanalyticsbotsaggregatesquery",
    "functionName": "PostAnalyticsBotsAggregatesQuery",
    "signature": "PostAnalyticsBotsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BotAggregationQuery",
        "required": "true"
      }
    ],
    "return": "BotAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsBotsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new BotAggregationQuery(); // BotAggregationQuery | query\n\n            try\n            { \n                // Query for bot aggregates\n                BotAggregateQueryResponse result = apiInstance.PostAnalyticsBotsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PostAnalyticsBotsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsconversationdetailsproperties": {
    "operationId": "postanalyticsconversationdetailsproperties",
    "functionName": "PostAnalyticsConversationDetailsProperties",
    "signature": "PostAnalyticsConversationDetailsProperties(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PropertyIndexRequest",
        "required": "true"
      }
    ],
    "return": "PropertyIndexRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsConversationDetailsPropertiesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new PropertyIndexRequest(); // PropertyIndexRequest | request\n\n            try\n            { \n                // Index conversation properties\n                PropertyIndexRequest result = apiInstance.PostAnalyticsConversationDetailsProperties(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostAnalyticsConversationDetailsProperties: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsconversationsaggregatesquery": {
    "operationId": "postanalyticsconversationsaggregatesquery",
    "functionName": "PostAnalyticsConversationsAggregatesQuery",
    "signature": "PostAnalyticsConversationsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationAggregationQuery",
        "required": "true"
      }
    ],
    "return": "ConversationAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsConversationsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new ConversationAggregationQuery(); // ConversationAggregationQuery | query\n\n            try\n            { \n                // Query for conversation aggregates\n                ConversationAggregateQueryResponse result = apiInstance.PostAnalyticsConversationsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostAnalyticsConversationsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsconversationsdetailsjobs": {
    "operationId": "postanalyticsconversationsdetailsjobs",
    "functionName": "PostAnalyticsConversationsDetailsJobs",
    "signature": "PostAnalyticsConversationsDetailsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AsyncConversationQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsConversationsDetailsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new AsyncConversationQuery(); // AsyncConversationQuery | query\n\n            try\n            { \n                // Query for conversation details asynchronously\n                AsyncQueryResponse result = apiInstance.PostAnalyticsConversationsDetailsJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostAnalyticsConversationsDetailsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsconversationsdetailsquery": {
    "operationId": "postanalyticsconversationsdetailsquery",
    "functionName": "PostAnalyticsConversationsDetailsQuery",
    "signature": "PostAnalyticsConversationsDetailsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationQuery",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsConversationsDetailsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new ConversationQuery(); // ConversationQuery | query\n\n            try\n            { \n                // Query for conversation details\n                AnalyticsConversationQueryResponse result = apiInstance.PostAnalyticsConversationsDetailsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostAnalyticsConversationsDetailsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsconversationstranscriptsquery": {
    "operationId": "postanalyticsconversationstranscriptsquery",
    "functionName": "PostAnalyticsConversationsTranscriptsQuery",
    "signature": "PostAnalyticsConversationsTranscriptsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptConversationDetailSearchRequest",
        "required": "true"
      }
    ],
    "return": "AnalyticsConversationWithoutAttributesMultiGetResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsConversationsTranscriptsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var body = new TranscriptConversationDetailSearchRequest(); // TranscriptConversationDetailSearchRequest | Search request options\n\n            try\n            { \n                // Search resources.\n                AnalyticsConversationWithoutAttributesMultiGetResponse result = apiInstance.PostAnalyticsConversationsTranscriptsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostAnalyticsConversationsTranscriptsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsevaluationsaggregatesquery": {
    "operationId": "postanalyticsevaluationsaggregatesquery",
    "functionName": "PostAnalyticsEvaluationsAggregatesQuery",
    "signature": "PostAnalyticsEvaluationsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationAggregationQuery",
        "required": "true"
      }
    ],
    "return": "EvaluationAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsEvaluationsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new EvaluationAggregationQuery(); // EvaluationAggregationQuery | query\n\n            try\n            { \n                // Query for evaluation aggregates\n                EvaluationAggregateQueryResponse result = apiInstance.PostAnalyticsEvaluationsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostAnalyticsEvaluationsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsflowsaggregatesquery": {
    "operationId": "postanalyticsflowsaggregatesquery",
    "functionName": "PostAnalyticsFlowsAggregatesQuery",
    "signature": "PostAnalyticsFlowsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowAggregationQuery",
        "required": "true"
      }
    ],
    "return": "FlowAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsFlowsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FlowsApi();\n            var body = new FlowAggregationQuery(); // FlowAggregationQuery | query\n\n            try\n            { \n                // Query for flow aggregates\n                FlowAggregateQueryResponse result = apiInstance.PostAnalyticsFlowsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Flows.PostAnalyticsFlowsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsflowsobservationsquery": {
    "operationId": "postanalyticsflowsobservationsquery",
    "functionName": "PostAnalyticsFlowsObservationsQuery",
    "signature": "PostAnalyticsFlowsObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowObservationQuery",
        "required": "true"
      }
    ],
    "return": "FlowObservationQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsFlowsObservationsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FlowsApi();\n            var body = new FlowObservationQuery(); // FlowObservationQuery | query\n\n            try\n            { \n                // Query for flow observations\n                FlowObservationQueryResponse result = apiInstance.PostAnalyticsFlowsObservationsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Flows.PostAnalyticsFlowsObservationsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsjourneysaggregatesquery": {
    "operationId": "postanalyticsjourneysaggregatesquery",
    "functionName": "PostAnalyticsJourneysAggregatesQuery",
    "signature": "PostAnalyticsJourneysAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneyAggregationQuery",
        "required": "true"
      }
    ],
    "return": "JourneyAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsJourneysAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new JourneyAggregationQuery(); // JourneyAggregationQuery | query\n\n            try\n            { \n                // Query for journey aggregates\n                JourneyAggregateQueryResponse result = apiInstance.PostAnalyticsJourneysAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostAnalyticsJourneysAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsqueuesobservationsquery": {
    "operationId": "postanalyticsqueuesobservationsquery",
    "functionName": "PostAnalyticsQueuesObservationsQuery",
    "signature": "PostAnalyticsQueuesObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "QueueObservationQuery",
        "required": "true"
      }
    ],
    "return": "QueueObservationQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsQueuesObservationsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new QueueObservationQuery(); // QueueObservationQuery | query\n\n            try\n            { \n                // Query for queue observations\n                QueueObservationQueryResponse result = apiInstance.PostAnalyticsQueuesObservationsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostAnalyticsQueuesObservationsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsreportingexports": {
    "operationId": "postanalyticsreportingexports",
    "functionName": "PostAnalyticsReportingExports",
    "signature": "PostAnalyticsReportingExports(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ReportingExportJobRequest",
        "required": "true"
      }
    ],
    "return": "ReportingExportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsReportingExportsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new ReportingExportJobRequest(); // ReportingExportJobRequest | ReportingExportJobRequest\n\n            try\n            { \n                // Generate a view export request\n                ReportingExportJobResponse result = apiInstance.PostAnalyticsReportingExports(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PostAnalyticsReportingExports: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsreportingschedulerunreport": {
    "operationId": "postanalyticsreportingschedulerunreport",
    "functionName": "PostAnalyticsReportingScheduleRunreport",
    "signature": "PostAnalyticsReportingScheduleRunreport(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RunNowResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsReportingScheduleRunreportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Place a scheduled report immediately into the reporting queue\n                RunNowResponse result = apiInstance.PostAnalyticsReportingScheduleRunreport(scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PostAnalyticsReportingScheduleRunreport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsreportingschedules": {
    "operationId": "postanalyticsreportingschedules",
    "functionName": "PostAnalyticsReportingSchedules",
    "signature": "PostAnalyticsReportingSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ReportSchedule",
        "required": "true"
      }
    ],
    "return": "ReportSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsReportingSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new ReportSchedule(); // ReportSchedule | ReportSchedule\n\n            try\n            { \n                // Create a scheduled report job\n                ReportSchedule result = apiInstance.PostAnalyticsReportingSchedules(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PostAnalyticsReportingSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticssurveysaggregatesquery": {
    "operationId": "postanalyticssurveysaggregatesquery",
    "functionName": "PostAnalyticsSurveysAggregatesQuery",
    "signature": "PostAnalyticsSurveysAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyAggregationQuery",
        "required": "true"
      }
    ],
    "return": "SurveyAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsSurveysAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new SurveyAggregationQuery(); // SurveyAggregationQuery | query\n\n            try\n            { \n                // Query for survey aggregates\n                SurveyAggregateQueryResponse result = apiInstance.PostAnalyticsSurveysAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostAnalyticsSurveysAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticstranscriptsaggregatesquery": {
    "operationId": "postanalyticstranscriptsaggregatesquery",
    "functionName": "PostAnalyticsTranscriptsAggregatesQuery",
    "signature": "PostAnalyticsTranscriptsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptAggregationQuery",
        "required": "true"
      }
    ],
    "return": "TranscriptAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsTranscriptsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new TranscriptAggregationQuery(); // TranscriptAggregationQuery | query\n\n            try\n            { \n                // Query for transcript aggregates\n                TranscriptAggregateQueryResponse result = apiInstance.PostAnalyticsTranscriptsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PostAnalyticsTranscriptsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsusersaggregatesquery": {
    "operationId": "postanalyticsusersaggregatesquery",
    "functionName": "PostAnalyticsUsersAggregatesQuery",
    "signature": "PostAnalyticsUsersAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserAggregationQuery",
        "required": "true"
      }
    ],
    "return": "UserAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsUsersAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new UserAggregationQuery(); // UserAggregationQuery | query\n\n            try\n            { \n                // Query for user aggregates\n                UserAggregateQueryResponse result = apiInstance.PostAnalyticsUsersAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAnalyticsUsersAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsusersdetailsjobs": {
    "operationId": "postanalyticsusersdetailsjobs",
    "functionName": "PostAnalyticsUsersDetailsJobs",
    "signature": "PostAnalyticsUsersDetailsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AsyncUserDetailsQuery",
        "required": "true"
      }
    ],
    "return": "AsyncQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsUsersDetailsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new AsyncUserDetailsQuery(); // AsyncUserDetailsQuery | query\n\n            try\n            { \n                // Query for user details asynchronously\n                AsyncQueryResponse result = apiInstance.PostAnalyticsUsersDetailsJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAnalyticsUsersDetailsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsusersdetailsquery": {
    "operationId": "postanalyticsusersdetailsquery",
    "functionName": "PostAnalyticsUsersDetailsQuery",
    "signature": "PostAnalyticsUsersDetailsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserDetailsQuery",
        "required": "true"
      }
    ],
    "return": "AnalyticsUserDetailsQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsUsersDetailsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new UserDetailsQuery(); // UserDetailsQuery | query\n\n            try\n            { \n                // Query for user details\n                AnalyticsUserDetailsQueryResponse result = apiInstance.PostAnalyticsUsersDetailsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAnalyticsUsersDetailsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postanalyticsusersobservationsquery": {
    "operationId": "postanalyticsusersobservationsquery",
    "functionName": "PostAnalyticsUsersObservationsQuery",
    "signature": "PostAnalyticsUsersObservationsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserObservationQuery",
        "required": "true"
      }
    ],
    "return": "UserObservationQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAnalyticsUsersObservationsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new UserObservationQuery(); // UserObservationQuery | query\n\n            try\n            { \n                // Query for user observations\n                UserObservationQueryResponse result = apiInstance.PostAnalyticsUsersObservationsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAnalyticsUsersObservationsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putanalyticsdataretentionsettings": {
    "operationId": "putanalyticsdataretentionsettings",
    "functionName": "PutAnalyticsDataretentionSettings",
    "signature": "PutAnalyticsDataretentionSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UpdateAnalyticsDataRetentionRequest",
        "required": "true"
      }
    ],
    "return": "AnalyticsDataRetentionResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAnalyticsDataretentionSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var body = new UpdateAnalyticsDataRetentionRequest(); // UpdateAnalyticsDataRetentionRequest | retentionDays\n\n            try\n            { \n                // Update analytics data retention setting\n                AnalyticsDataRetentionResponse result = apiInstance.PutAnalyticsDataretentionSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PutAnalyticsDataretentionSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putanalyticsreportingschedule": {
    "operationId": "putanalyticsreportingschedule",
    "functionName": "PutAnalyticsReportingSchedule",
    "signature": "PutAnalyticsReportingSchedule(scheduleId, body)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ReportSchedule",
        "required": "true"
      }
    ],
    "return": "ReportSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAnalyticsReportingScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AnalyticsApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n            var body = new ReportSchedule(); // ReportSchedule | ReportSchedule\n\n            try\n            { \n                // Update a scheduled report job.\n                ReportSchedule result = apiInstance.PutAnalyticsReportingSchedule(scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Analytics.PutAnalyticsReportingSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectemergencygroup": {
    "operationId": "deletearchitectemergencygroup",
    "functionName": "DeleteArchitectEmergencygroup",
    "signature": "DeleteArchitectEmergencygroup(emergencyGroupId)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectEmergencygroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var emergencyGroupId = \"emergencyGroupId_example\";  // string | Emergency group ID\n\n            try\n            { \n                // Deletes a emergency group by ID\n                apiInstance.DeleteArchitectEmergencygroup(emergencyGroupId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectEmergencygroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectivr": {
    "operationId": "deletearchitectivr",
    "functionName": "DeleteArchitectIvr",
    "signature": "DeleteArchitectIvr(ivrId)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectIvrExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var ivrId = \"ivrId_example\";  // string | IVR id\n\n            try\n            { \n                // Delete an IVR Config.\n                apiInstance.DeleteArchitectIvr(ivrId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectIvr: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectprompt": {
    "operationId": "deletearchitectprompt",
    "functionName": "DeleteArchitectPrompt",
    "signature": "DeleteArchitectPrompt(promptId, allResources)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "allResources",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectPromptExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var allResources = true;  // bool? | Whether or not to delete all the prompt resources (optional) \n\n            try\n            { \n                // Delete specified user prompt\n                apiInstance.DeleteArchitectPrompt(promptId, allResources);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectPrompt: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectpromptresource": {
    "operationId": "deletearchitectpromptresource",
    "functionName": "DeleteArchitectPromptResource",
    "signature": "DeleteArchitectPromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectPromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n\n            try\n            { \n                // Delete specified user prompt resource\n                apiInstance.DeleteArchitectPromptResource(promptId, languageCode);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectPromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectpromptresourceaudio": {
    "operationId": "deletearchitectpromptresourceaudio",
    "functionName": "DeleteArchitectPromptResourceAudio",
    "signature": "DeleteArchitectPromptResourceAudio(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectPromptResourceAudioExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n\n            try\n            { \n                // Delete specified user prompt resource audio\n                apiInstance.DeleteArchitectPromptResourceAudio(promptId, languageCode);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectPromptResourceAudio: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectprompts": {
    "operationId": "deletearchitectprompts",
    "functionName": "DeleteArchitectPrompts",
    "signature": "DeleteArchitectPrompts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectPromptsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var id = new List<string>(); // List<string> | List of Prompt IDs\n\n            try\n            { \n                // Batch-delete a list of prompts\n                Operation result = apiInstance.DeleteArchitectPrompts(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectPrompts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectschedule": {
    "operationId": "deletearchitectschedule",
    "functionName": "DeleteArchitectSchedule",
    "signature": "DeleteArchitectSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Delete a schedule by id\n                apiInstance.DeleteArchitectSchedule(scheduleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectschedulegroup": {
    "operationId": "deletearchitectschedulegroup",
    "functionName": "DeleteArchitectSchedulegroup",
    "signature": "DeleteArchitectSchedulegroup(scheduleGroupId)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectSchedulegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleGroupId = \"scheduleGroupId_example\";  // string | Schedule group ID\n\n            try\n            { \n                // Deletes a schedule group by ID\n                apiInstance.DeleteArchitectSchedulegroup(scheduleGroupId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectSchedulegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletearchitectsystempromptresource": {
    "operationId": "deletearchitectsystempromptresource",
    "functionName": "DeleteArchitectSystempromptResource",
    "signature": "DeleteArchitectSystempromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteArchitectSystempromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n\n            try\n            { \n                // Delete a system prompt resource override.\n                apiInstance.DeleteArchitectSystempromptResource(promptId, languageCode);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteArchitectSystempromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteflow": {
    "operationId": "deleteflow",
    "functionName": "DeleteFlow",
    "signature": "DeleteFlow(flowId)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFlowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n\n            try\n            { \n                // Delete flow\n                apiInstance.DeleteFlow(flowId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteFlow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteflows": {
    "operationId": "deleteflows",
    "functionName": "DeleteFlows",
    "signature": "DeleteFlows(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFlowsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var id = new List<string>(); // List<string> | List of Flow IDs\n\n            try\n            { \n                // Batch-delete a list of flows\n                Operation result = apiInstance.DeleteFlows(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteFlows: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteflowsdatatable": {
    "operationId": "deleteflowsdatatable",
    "functionName": "DeleteFlowsDatatable",
    "signature": "DeleteFlowsDatatable(datatableId, force)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFlowsDatatableExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var force = true;  // bool? | force delete, even if in use (optional)  (default to false)\n\n            try\n            { \n                // deletes a specific datatable by id\n                apiInstance.DeleteFlowsDatatable(datatableId, force);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteFlowsDatatable: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteflowsdatatablerow": {
    "operationId": "deleteflowsdatatablerow",
    "functionName": "DeleteFlowsDatatableRow",
    "signature": "DeleteFlowsDatatableRow(datatableId, rowId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFlowsDatatableRowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var rowId = \"rowId_example\";  // string | the key for the row\n\n            try\n            { \n                // Delete a row entry\n                apiInstance.DeleteFlowsDatatableRow(datatableId, rowId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteFlowsDatatableRow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteflowsmilestone": {
    "operationId": "deleteflowsmilestone",
    "functionName": "DeleteFlowsMilestone",
    "signature": "DeleteFlowsMilestone(milestoneId)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFlowsMilestoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var milestoneId = \"milestoneId_example\";  // string | flow milestone ID\n\n            try\n            { \n                // Delete a flow milestone.\n                Object result = apiInstance.DeleteFlowsMilestone(milestoneId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.DeleteFlowsMilestone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytracking": {
    "operationId": "getarchitectdependencytracking",
    "functionName": "GetArchitectDependencytracking",
    "signature": "GetArchitectDependencytracking(name, pageNumber, pageSize, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumingResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "consumingResourceType",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var name = \"name_example\";  // string | Object name to search for\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var objectType = new List<string>(); // List<string> | Object type(s) to search for (optional) \n            var consumedResources = true;  // bool? | Include resources each result item consumes (optional) \n            var consumingResources = true;  // bool? | Include resources that consume each result item (optional) \n            var consumedResourceType = new List<string>(); // List<string> | Types of consumed resources to return, if consumed resources are requested (optional) \n            var consumingResourceType = new List<string>(); // List<string> | Types of consuming resources to return, if consuming resources are requested (optional) \n\n            try\n            { \n                // Get Dependency Tracking objects that have a given display name\n                DependencyObjectEntityListing result = apiInstance.GetArchitectDependencytracking(name, pageNumber, pageSize, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytracking: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingbuild": {
    "operationId": "getarchitectdependencytrackingbuild",
    "functionName": "GetArchitectDependencytrackingBuild",
    "signature": "GetArchitectDependencytrackingBuild()",
    "return": "DependencyStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingBuildExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n\n            try\n            { \n                // Get Dependency Tracking build status for an organization\n                DependencyStatus result = apiInstance.GetArchitectDependencytrackingBuild();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingBuild: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingconsumedresources": {
    "operationId": "getarchitectdependencytrackingconsumedresources",
    "functionName": "GetArchitectDependencytrackingConsumedresources",
    "signature": "GetArchitectDependencytrackingConsumedresources(id, version, objectType, resourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "resourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ConsumedResourcesEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingConsumedresourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var id = \"id_example\";  // string | Consuming object ID\n            var version = \"version_example\";  // string | Consuming object version\n            var objectType = \"objectType_example\";  // string | Consuming object type.  Only versioned types are allowed here.\n            var resourceType = new List<string>(); // List<string> | Types of consumed resources to show (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get resources that are consumed by a given Dependency Tracking object\n                ConsumedResourcesEntityListing result = apiInstance.GetArchitectDependencytrackingConsumedresources(id, version, objectType, resourceType, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingConsumedresources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingconsumingresources": {
    "operationId": "getarchitectdependencytrackingconsumingresources",
    "functionName": "GetArchitectDependencytrackingConsumingresources",
    "signature": "GetArchitectDependencytrackingConsumingresources(id, objectType, resourceType, version, pageNumber, pageSize, flowFilter)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "resourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "flowFilter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ConsumingResourcesEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingConsumingresourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var id = \"id_example\";  // string | Consumed object ID\n            var objectType = \"objectType_example\";  // string | Consumed object type\n            var resourceType = new List<string>(); // List<string> | Types of consuming resources to show.  Only versioned types are allowed here. (optional) \n            var version = \"version_example\";  // string | Object version (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var flowFilter = \"flowFilter_example\";  // string | Show only checkedIn or published flows (optional) \n\n            try\n            { \n                // Get resources that consume a given Dependency Tracking object\n                ConsumingResourcesEntityListing result = apiInstance.GetArchitectDependencytrackingConsumingresources(id, objectType, resourceType, version, pageNumber, pageSize, flowFilter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingConsumingresources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingdeletedresourceconsumers": {
    "operationId": "getarchitectdependencytrackingdeletedresourceconsumers",
    "functionName": "GetArchitectDependencytrackingDeletedresourceconsumers",
    "signature": "GetArchitectDependencytrackingDeletedresourceconsumers(name, objectType, flowFilter, consumedResources, consumedResourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "flowFilter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingDeletedresourceconsumersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var name = \"name_example\";  // string | Name to search for (optional) \n            var objectType = new List<string>(); // List<string> | Object type(s) to search for (optional) \n            var flowFilter = \"flowFilter_example\";  // string | Show only checkedIn or published flows (optional) \n            var consumedResources = true;  // bool? | Return consumed resources? (optional)  (default to false)\n            var consumedResourceType = new List<string>(); // List<string> | Resource type(s) to return (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get Dependency Tracking objects that consume deleted resources\n                DependencyObjectEntityListing result = apiInstance.GetArchitectDependencytrackingDeletedresourceconsumers(name, objectType, flowFilter, consumedResources, consumedResourceType, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingDeletedresourceconsumers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingobject": {
    "operationId": "getarchitectdependencytrackingobject",
    "functionName": "GetArchitectDependencytrackingObject",
    "signature": "GetArchitectDependencytrackingObject(id, version, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType, consumedResourceRequest)",
    "parameters": [
      {
        "name": "id",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumingResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "consumingResourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "consumedResourceRequest",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "DependencyObject",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingObjectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var id = \"id_example\";  // string | Object ID\n            var version = \"version_example\";  // string | Object version (optional) \n            var objectType = \"objectType_example\";  // string | Object type (optional) \n            var consumedResources = true;  // bool? | Include resources this item consumes (optional) \n            var consumingResources = true;  // bool? | Include resources that consume this item (optional) \n            var consumedResourceType = new List<string>(); // List<string> | Types of consumed resources to return, if consumed resources are requested (optional) \n            var consumingResourceType = new List<string>(); // List<string> | Types of consuming resources to return, if consuming resources are requested (optional) \n            var consumedResourceRequest = true;  // bool? | Indicate that this is going to look up a consumed resource object (optional) \n\n            try\n            { \n                // Get a Dependency Tracking object\n                DependencyObject result = apiInstance.GetArchitectDependencytrackingObject(id, version, objectType, consumedResources, consumingResources, consumedResourceType, consumingResourceType, consumedResourceRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingObject: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingtype": {
    "operationId": "getarchitectdependencytrackingtype",
    "functionName": "GetArchitectDependencytrackingType",
    "signature": "GetArchitectDependencytrackingType(typeId)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DependencyType",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingTypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var typeId = \"typeId_example\";  // string | Type ID\n\n            try\n            { \n                // Get a Dependency Tracking type.\n                DependencyType result = apiInstance.GetArchitectDependencytrackingType(typeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingType: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingtypes": {
    "operationId": "getarchitectdependencytrackingtypes",
    "functionName": "GetArchitectDependencytrackingTypes",
    "signature": "GetArchitectDependencytrackingTypes(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DependencyTypeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingTypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get Dependency Tracking types.\n                DependencyTypeEntityListing result = apiInstance.GetArchitectDependencytrackingTypes(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingTypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectdependencytrackingupdatedresourceconsumers": {
    "operationId": "getarchitectdependencytrackingupdatedresourceconsumers",
    "functionName": "GetArchitectDependencytrackingUpdatedresourceconsumers",
    "signature": "GetArchitectDependencytrackingUpdatedresourceconsumers(name, objectType, consumedResources, consumedResourceType, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "consumedResources",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "consumedResourceType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DependencyObjectEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectDependencytrackingUpdatedresourceconsumersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var name = \"name_example\";  // string | Name to search for (optional) \n            var objectType = new List<string>(); // List<string> | Object type(s) to search for (optional) \n            var consumedResources = true;  // bool? | Return consumed resources? (optional)  (default to false)\n            var consumedResourceType = new List<string>(); // List<string> | Resource type(s) to return (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get Dependency Tracking objects that depend on updated resources\n                DependencyObjectEntityListing result = apiInstance.GetArchitectDependencytrackingUpdatedresourceconsumers(name, objectType, consumedResources, consumedResourceType, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectDependencytrackingUpdatedresourceconsumers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectemergencygroup": {
    "operationId": "getarchitectemergencygroup",
    "functionName": "GetArchitectEmergencygroup",
    "signature": "GetArchitectEmergencygroup(emergencyGroupId)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectEmergencygroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var emergencyGroupId = \"emergencyGroupId_example\";  // string | Emergency group ID\n\n            try\n            { \n                // Gets a emergency group by ID\n                EmergencyGroup result = apiInstance.GetArchitectEmergencygroup(emergencyGroupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectEmergencygroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectemergencygroups": {
    "operationId": "getarchitectemergencygroups",
    "functionName": "GetArchitectEmergencygroups",
    "signature": "GetArchitectEmergencygroups(pageNumber, pageSize, sortBy, sortOrder, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EmergencyGroupListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectEmergencygroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var name = \"name_example\";  // string | Name of the Emergency Group to filter by. (optional) \n\n            try\n            { \n                // Get a list of emergency groups.\n                EmergencyGroupListing result = apiInstance.GetArchitectEmergencygroups(pageNumber, pageSize, sortBy, sortOrder, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectEmergencygroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectivr": {
    "operationId": "getarchitectivr",
    "functionName": "GetArchitectIvr",
    "signature": "GetArchitectIvr(ivrId)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectIvrExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var ivrId = \"ivrId_example\";  // string | IVR id\n\n            try\n            { \n                // Get an IVR config.\n                IVR result = apiInstance.GetArchitectIvr(ivrId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectIvr: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectivrs": {
    "operationId": "getarchitectivrs",
    "functionName": "GetArchitectIvrs",
    "signature": "GetArchitectIvrs(pageNumber, pageSize, sortBy, sortOrder, name, dnis)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dnis",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "IVREntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectIvrsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var name = \"name_example\";  // string | Name of the IVR to filter by. (optional) \n            var dnis = \"dnis_example\";  // string | The phone number of the IVR to filter by. (optional) \n\n            try\n            { \n                // Get IVR configs.\n                IVREntityListing result = apiInstance.GetArchitectIvrs(pageNumber, pageSize, sortBy, sortOrder, name, dnis);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectIvrs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectprompt": {
    "operationId": "getarchitectprompt",
    "functionName": "GetArchitectPrompt",
    "signature": "GetArchitectPrompt(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectPromptExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n\n            try\n            { \n                // Get specified user prompt\n                Prompt result = apiInstance.GetArchitectPrompt(promptId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectPrompt: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectprompthistoryhistoryid": {
    "operationId": "getarchitectprompthistoryhistoryid",
    "functionName": "GetArchitectPromptHistoryHistoryId",
    "signature": "GetArchitectPromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectPromptHistoryHistoryIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var historyId = \"historyId_example\";  // string | History request ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"desc\")\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to timestamp)\n            var action = new List<string>(); // List<string> | Flow actions to include (omit to include all) (optional) \n\n            try\n            { \n                // Get generated prompt history\n                HistoryListing result = apiInstance.GetArchitectPromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectPromptHistoryHistoryId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectpromptresource": {
    "operationId": "getarchitectpromptresource",
    "functionName": "GetArchitectPromptResource",
    "signature": "GetArchitectPromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectPromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n\n            try\n            { \n                // Get specified user prompt resource\n                PromptAsset result = apiInstance.GetArchitectPromptResource(promptId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectPromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectpromptresources": {
    "operationId": "getarchitectpromptresources",
    "functionName": "GetArchitectPromptResources",
    "signature": "GetArchitectPromptResources(promptId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "PromptAssetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectPromptResourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a pageable list of user prompt resources\n                PromptAssetEntityListing result = apiInstance.GetArchitectPromptResources(promptId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectPromptResources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectprompts": {
    "operationId": "getarchitectprompts",
    "functionName": "GetArchitectPrompts",
    "signature": "GetArchitectPrompts(pageNumber, pageSize, name, description, nameOrDescription, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "PromptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectPromptsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var name = new List<string>(); // List<string> | Name (optional) \n            var description = \"description_example\";  // string | Description (optional) \n            var nameOrDescription = \"nameOrDescription_example\";  // string | Name or description (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n\n            try\n            { \n                // Get a pageable list of user prompts\n                PromptEntityListing result = apiInstance.GetArchitectPrompts(pageNumber, pageSize, name, description, nameOrDescription, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectPrompts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectschedule": {
    "operationId": "getarchitectschedule",
    "functionName": "GetArchitectSchedule",
    "signature": "GetArchitectSchedule(scheduleId)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n\n            try\n            { \n                // Get a schedule by ID\n                Schedule result = apiInstance.GetArchitectSchedule(scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectschedulegroup": {
    "operationId": "getarchitectschedulegroup",
    "functionName": "GetArchitectSchedulegroup",
    "signature": "GetArchitectSchedulegroup(scheduleGroupId)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSchedulegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleGroupId = \"scheduleGroupId_example\";  // string | Schedule group ID\n\n            try\n            { \n                // Gets a schedule group by ID\n                ScheduleGroup result = apiInstance.GetArchitectSchedulegroup(scheduleGroupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSchedulegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectschedulegroups": {
    "operationId": "getarchitectschedulegroups",
    "functionName": "GetArchitectSchedulegroups",
    "signature": "GetArchitectSchedulegroups(pageNumber, pageSize, sortBy, sortOrder, name, scheduleIds, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scheduleIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ScheduleGroupEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSchedulegroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var name = \"name_example\";  // string | Name of the Schedule Group to filter by. (optional) \n            var scheduleIds = \"scheduleIds_example\";  // string | A comma-delimited list of Schedule IDs to filter by. (optional) \n            var divisionId = new List<string>(); // List<string> | List of divisionIds on which to filter. (optional) \n\n            try\n            { \n                // Get a list of schedule groups.\n                ScheduleGroupEntityListing result = apiInstance.GetArchitectSchedulegroups(pageNumber, pageSize, sortBy, sortOrder, name, scheduleIds, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSchedulegroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectschedules": {
    "operationId": "getarchitectschedules",
    "functionName": "GetArchitectSchedules",
    "signature": "GetArchitectSchedules(pageNumber, pageSize, sortBy, sortOrder, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ScheduleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var name = \"name_example\";  // string | Name of the Schedule to filter by. (optional) \n            var divisionId = new List<string>(); // List<string> | List of divisionIds on which to filter. (optional) \n\n            try\n            { \n                // Get a list of schedules.\n                ScheduleEntityListing result = apiInstance.GetArchitectSchedules(pageNumber, pageSize, sortBy, sortOrder, name, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectsystemprompt": {
    "operationId": "getarchitectsystemprompt",
    "functionName": "GetArchitectSystemprompt",
    "signature": "GetArchitectSystemprompt(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SystemPrompt",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSystempromptExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | promptId\n\n            try\n            { \n                // Get a system prompt\n                SystemPrompt result = apiInstance.GetArchitectSystemprompt(promptId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSystemprompt: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectsystemprompthistoryhistoryid": {
    "operationId": "getarchitectsystemprompthistoryhistoryid",
    "functionName": "GetArchitectSystempromptHistoryHistoryId",
    "signature": "GetArchitectSystempromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSystempromptHistoryHistoryIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | promptId\n            var historyId = \"historyId_example\";  // string | History request ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"desc\")\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to timestamp)\n            var action = new List<string>(); // List<string> | Flow actions to include (omit to include all) (optional) \n\n            try\n            { \n                // Get generated prompt history\n                HistoryListing result = apiInstance.GetArchitectSystempromptHistoryHistoryId(promptId, historyId, pageNumber, pageSize, sortOrder, sortBy, action);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSystempromptHistoryHistoryId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectsystempromptresource": {
    "operationId": "getarchitectsystempromptresource",
    "functionName": "GetArchitectSystempromptResource",
    "signature": "GetArchitectSystempromptResource(promptId, languageCode)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSystempromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n\n            try\n            { \n                // Get a system prompt resource.\n                SystemPromptAsset result = apiInstance.GetArchitectSystempromptResource(promptId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSystempromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectsystempromptresources": {
    "operationId": "getarchitectsystempromptresources",
    "functionName": "GetArchitectSystempromptResources",
    "signature": "GetArchitectSystempromptResources(promptId, pageNumber, pageSize, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SystemPromptAssetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSystempromptResourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n\n            try\n            { \n                // Get system prompt resources.\n                SystemPromptAssetEntityListing result = apiInstance.GetArchitectSystempromptResources(promptId, pageNumber, pageSize, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSystempromptResources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getarchitectsystemprompts": {
    "operationId": "getarchitectsystemprompts",
    "functionName": "GetArchitectSystemprompts",
    "signature": "GetArchitectSystemprompts(pageNumber, pageSize, sortBy, sortOrder, name, description, nameOrDescription)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SystemPromptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetArchitectSystempromptsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var name = \"name_example\";  // string | Name (optional) \n            var description = \"description_example\";  // string | Description (optional) \n            var nameOrDescription = \"nameOrDescription_example\";  // string | Name or description (optional) \n\n            try\n            { \n                // Get System Prompts\n                SystemPromptEntityListing result = apiInstance.GetArchitectSystemprompts(pageNumber, pageSize, sortBy, sortOrder, name, description, nameOrDescription);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetArchitectSystemprompts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflow": {
    "operationId": "getflow",
    "functionName": "GetFlow",
    "signature": "GetFlow(flowId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var deleted = true;  // bool? | Deleted flows (optional)  (default to false)\n\n            try\n            { \n                // Get flow\n                Flow result = apiInstance.GetFlow(flowId, deleted);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowhistoryhistoryid": {
    "operationId": "getflowhistoryhistoryid",
    "functionName": "GetFlowHistoryHistoryId",
    "signature": "GetFlowHistoryHistoryId(flowId, historyId, pageNumber, pageSize, sortOrder, sortBy, action)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "historyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "action",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "HistoryListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowHistoryHistoryIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var historyId = \"historyId_example\";  // string | History request ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"desc\")\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to timestamp)\n            var action = new List<string>(); // List<string> | Flow actions to include (omit to include all) (optional) \n\n            try\n            { \n                // Get generated flow history\n                HistoryListing result = apiInstance.GetFlowHistoryHistoryId(flowId, historyId, pageNumber, pageSize, sortOrder, sortBy, action);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowHistoryHistoryId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowlatestconfiguration": {
    "operationId": "getflowlatestconfiguration",
    "functionName": "GetFlowLatestconfiguration",
    "signature": "GetFlowLatestconfiguration(flowId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowLatestconfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var deleted = true;  // bool? | Deleted flows (optional)  (default to false)\n\n            try\n            { \n                // Get the latest configuration for flow\n                Object result = apiInstance.GetFlowLatestconfiguration(flowId, deleted);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowLatestconfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowversion": {
    "operationId": "getflowversion",
    "functionName": "GetFlowVersion",
    "signature": "GetFlowVersion(flowId, versionId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "FlowVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var versionId = \"versionId_example\";  // string | Version ID\n            var deleted = \"deleted_example\";  // string | Deleted flows (optional) \n\n            try\n            { \n                // Get flow version\n                FlowVersion result = apiInstance.GetFlowVersion(flowId, versionId, deleted);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowversionconfiguration": {
    "operationId": "getflowversionconfiguration",
    "functionName": "GetFlowVersionConfiguration",
    "signature": "GetFlowVersionConfiguration(flowId, versionId, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowVersionConfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var versionId = \"versionId_example\";  // string | Version ID\n            var deleted = \"deleted_example\";  // string | Deleted flows (optional) \n\n            try\n            { \n                // Create flow version configuration\n                Object result = apiInstance.GetFlowVersionConfiguration(flowId, versionId, deleted);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowVersionConfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowversions": {
    "operationId": "getflowversions",
    "functionName": "GetFlowVersions",
    "signature": "GetFlowVersions(flowId, pageNumber, pageSize, deleted)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "FlowVersionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var deleted = true;  // bool? | Include Deleted flows (optional) \n\n            try\n            { \n                // Get flow version list\n                FlowVersionEntityListing result = apiInstance.GetFlowVersions(flowId, pageNumber, pageSize, deleted);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflows": {
    "operationId": "getflows",
    "functionName": "GetFlows",
    "signature": "GetFlows(type, pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, publishVersionId, editableBy, lockedBy, lockedByClientId, secure, deleted, includeSchemas, publishedAfter, publishedBefore, divisionId)",
    "parameters": [
      {
        "name": "type",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishVersionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "editableBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lockedBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lockedByClientId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSchemas",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "publishedAfter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedBefore",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "FlowEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var type = new List<string>(); // List<string> | Type (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var description = \"description_example\";  // string | Description (optional) \n            var nameOrDescription = \"nameOrDescription_example\";  // string | Name or description (optional) \n            var publishVersionId = \"publishVersionId_example\";  // string | Publish version ID (optional) \n            var editableBy = \"editableBy_example\";  // string | Editable by (optional) \n            var lockedBy = \"lockedBy_example\";  // string | Locked by (optional) \n            var lockedByClientId = \"lockedByClientId_example\";  // string | Locked by client ID (optional) \n            var secure = \"secure_example\";  // string | Secure (optional) \n            var deleted = true;  // bool? | Include deleted (optional)  (default to false)\n            var includeSchemas = true;  // bool? | Include variable schemas (optional)  (default to false)\n            var publishedAfter = \"2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01\";  // string | Published after (optional) \n            var publishedBefore = \"2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01\";  // string | Published before (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n\n            try\n            { \n                // Get a pageable list of flows, filtered by query parameters\n                FlowEntityListing result = apiInstance.GetFlows(type, pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, publishVersionId, editableBy, lockedBy, lockedByClientId, secure, deleted, includeSchemas, publishedAfter, publishedBefore, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlows: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatable": {
    "operationId": "getflowsdatatable",
    "functionName": "GetFlowsDatatable",
    "signature": "GetFlowsDatatable(datatableId, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var expand = \"expand_example\";  // string | Expand instructions for the result (optional) \n\n            try\n            { \n                // Returns a specific datatable by id\n                DataTable result = apiInstance.GetFlowsDatatable(datatableId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatable: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatableexportjob": {
    "operationId": "getflowsdatatableexportjob",
    "functionName": "GetFlowsDatatableExportJob",
    "signature": "GetFlowsDatatableExportJob(datatableId, exportJobId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataTableExportJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableExportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var exportJobId = \"exportJobId_example\";  // string | id of export job\n\n            try\n            { \n                // Returns the state information about an export job\n                DataTableExportJob result = apiInstance.GetFlowsDatatableExportJob(datatableId, exportJobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatableExportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatableimportjob": {
    "operationId": "getflowsdatatableimportjob",
    "functionName": "GetFlowsDatatableImportJob",
    "signature": "GetFlowsDatatableImportJob(datatableId, importJobId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataTableImportJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableImportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var importJobId = \"importJobId_example\";  // string | id of import job\n\n            try\n            { \n                // Returns the state information about an import job\n                DataTableImportJob result = apiInstance.GetFlowsDatatableImportJob(datatableId, importJobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatableImportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatableimportjobs": {
    "operationId": "getflowsdatatableimportjobs",
    "functionName": "GetFlowsDatatableImportJobs",
    "signature": "GetFlowsDatatableImportJobs(datatableId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DataTableImportEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableImportJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get all recent import jobs\n                DataTableImportEntityListing result = apiInstance.GetFlowsDatatableImportJobs(datatableId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatableImportJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatablerow": {
    "operationId": "getflowsdatatablerow",
    "functionName": "GetFlowsDatatableRow",
    "signature": "GetFlowsDatatableRow(datatableId, rowId, showbrief)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "showbrief",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableRowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var rowId = \"rowId_example\";  // string | The key for the row\n            var showbrief = true;  // bool? | if true returns just the key field for the row (optional)  (default to true)\n\n            try\n            { \n                // Returns a specific row for the datatable\n                Dictionary<string, Object> result = apiInstance.GetFlowsDatatableRow(datatableId, rowId, showbrief);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatableRow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatablerows": {
    "operationId": "getflowsdatatablerows",
    "functionName": "GetFlowsDatatableRows",
    "signature": "GetFlowsDatatableRows(datatableId, pageNumber, pageSize, showbrief)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "showbrief",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "DataTableRowEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatableRowsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var showbrief = true;  // bool? | If true returns just the key value of the row (optional)  (default to true)\n\n            try\n            { \n                // Returns the rows for the datatable with the given id\n                DataTableRowEntityListing result = apiInstance.GetFlowsDatatableRows(datatableId, pageNumber, pageSize, showbrief);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatableRows: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatables": {
    "operationId": "getflowsdatatables",
    "functionName": "GetFlowsDatatables",
    "signature": "GetFlowsDatatables(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DataTablesDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatablesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var expand = \"expand_example\";  // string | Expand instructions for the result (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to id)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ascending\")\n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n            var name = \"name_example\";  // string | Name to filter by (optional) \n\n            try\n            { \n                // Retrieve a list of datatables for the org\n                DataTablesDomainEntityListing result = apiInstance.GetFlowsDatatables(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatables: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatablesdivisionview": {
    "operationId": "getflowsdatatablesdivisionview",
    "functionName": "GetFlowsDatatablesDivisionview",
    "signature": "GetFlowsDatatablesDivisionview(datatableId, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatablesDivisionviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var expand = \"expand_example\";  // string | Expand instructions for the result (optional) \n\n            try\n            { \n                // Returns a specific datatable by id\n                DataTable result = apiInstance.GetFlowsDatatablesDivisionview(datatableId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatablesDivisionview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdatatablesdivisionviews": {
    "operationId": "getflowsdatatablesdivisionviews",
    "functionName": "GetFlowsDatatablesDivisionviews",
    "signature": "GetFlowsDatatablesDivisionviews(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name)",
    "parameters": [
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DataTablesDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDatatablesDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var expand = \"expand_example\";  // string | Expand instructions for the result (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to id)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ascending\")\n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n            var name = \"name_example\";  // string | Name to filter by (optional) \n\n            try\n            { \n                // Retrieve a list of datatables for the org\n                DataTablesDomainEntityListing result = apiInstance.GetFlowsDatatablesDivisionviews(expand, pageNumber, pageSize, sortBy, sortOrder, divisionId, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDatatablesDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsdivisionviews": {
    "operationId": "getflowsdivisionviews",
    "functionName": "GetFlowsDivisionviews",
    "signature": "GetFlowsDivisionviews(type, pageNumber, pageSize, sortBy, sortOrder, id, name, publishVersionId, publishedAfter, publishedBefore, divisionId, includeSchemas)",
    "parameters": [
      {
        "name": "type",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishVersionId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedAfter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "publishedBefore",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "includeSchemas",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "FlowDivisionViewEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var type = new List<string>(); // List<string> | Type (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var publishVersionId = \"publishVersionId_example\";  // string | Publish version ID (optional) \n            var publishedAfter = \"2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01\";  // string | Published after (optional) \n            var publishedBefore = \"2015-01-01T12:00:00-0600, 2015-01-01T18:00:00Z, 2015-01-01T12:00:00.000-0600, 2015-01-01T18:00:00.000Z, 2015-01-01\";  // string | Published before (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n            var includeSchemas = true;  // bool? | Include variable schemas (optional)  (default to false)\n\n            try\n            { \n                // Get a pageable list of basic flow information objects filterable by query parameters.\n                FlowDivisionViewEntityListing result = apiInstance.GetFlowsDivisionviews(type, pageNumber, pageSize, sortBy, sortOrder, id, name, publishVersionId, publishedAfter, publishedBefore, divisionId, includeSchemas);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsexecution": {
    "operationId": "getflowsexecution",
    "functionName": "GetFlowsExecution",
    "signature": "GetFlowsExecution(flowExecutionId)",
    "parameters": [
      {
        "name": "flowExecutionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "FlowRuntimeExecution",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsExecutionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowExecutionId = \"flowExecutionId_example\";  // string | flow execution ID\n\n            try\n            { \n                // Get a flow execution's details. Flow execution details are available for several days after the flow is started.\n                FlowRuntimeExecution result = apiInstance.GetFlowsExecution(flowExecutionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsExecution: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsjob": {
    "operationId": "getflowsjob",
    "functionName": "GetFlowsJob",
    "signature": "GetFlowsJob(jobId, expand)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ArchitectJobStateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var jobId = \"jobId_example\";  // string | Job ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Fetch Architect Job Status\n                ArchitectJobStateResponse result = apiInstance.GetFlowsJob(jobId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsmilestone": {
    "operationId": "getflowsmilestone",
    "functionName": "GetFlowsMilestone",
    "signature": "GetFlowsMilestone(milestoneId)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "FlowMilestone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsMilestoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var milestoneId = \"milestoneId_example\";  // string | flow milestone ID\n\n            try\n            { \n                // Get a flow milestone\n                FlowMilestone result = apiInstance.GetFlowsMilestone(milestoneId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsMilestone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsmilestones": {
    "operationId": "getflowsmilestones",
    "functionName": "GetFlowsMilestones",
    "signature": "GetFlowsMilestones(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "FlowMilestoneListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsMilestonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var description = \"description_example\";  // string | Description (optional) \n            var nameOrDescription = \"nameOrDescription_example\";  // string | Name or description (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n\n            try\n            { \n                // Get a pageable list of flow milestones, filtered by query parameters\n                FlowMilestoneListing result = apiInstance.GetFlowsMilestones(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsMilestones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsmilestonesdivisionviews": {
    "operationId": "getflowsmilestonesdivisionviews",
    "functionName": "GetFlowsMilestonesDivisionviews",
    "signature": "GetFlowsMilestonesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "FlowMilestoneDivisionViewEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsMilestonesDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n\n            try\n            { \n                // Get a pageable list of basic flow milestone information objects filterable by query parameters.\n                FlowMilestoneDivisionViewEntityListing result = apiInstance.GetFlowsMilestonesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsMilestonesDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsoutcome": {
    "operationId": "getflowsoutcome",
    "functionName": "GetFlowsOutcome",
    "signature": "GetFlowsOutcome(flowOutcomeId)",
    "parameters": [
      {
        "name": "flowOutcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "FlowOutcome",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsOutcomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowOutcomeId = \"flowOutcomeId_example\";  // string | flow outcome ID\n\n            try\n            { \n                // Get a flow outcome\n                FlowOutcome result = apiInstance.GetFlowsOutcome(flowOutcomeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsOutcome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsoutcomes": {
    "operationId": "getflowsoutcomes",
    "functionName": "GetFlowsOutcomes",
    "signature": "GetFlowsOutcomes(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "description",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nameOrDescription",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "FlowOutcomeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsOutcomesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var description = \"description_example\";  // string | Description (optional) \n            var nameOrDescription = \"nameOrDescription_example\";  // string | Name or description (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n\n            try\n            { \n                // Get a pageable list of flow outcomes, filtered by query parameters\n                FlowOutcomeListing result = apiInstance.GetFlowsOutcomes(pageNumber, pageSize, sortBy, sortOrder, id, name, description, nameOrDescription, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsOutcomes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getflowsoutcomesdivisionviews": {
    "operationId": "getflowsoutcomesdivisionviews",
    "functionName": "GetFlowsOutcomesDivisionviews",
    "signature": "GetFlowsOutcomesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "FlowOutcomeDivisionViewEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFlowsOutcomesDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"id\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n            var id = new List<string>(); // List<string> | ID (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var divisionId = new List<string>(); // List<string> | division ID(s) (optional) \n\n            try\n            { \n                // Get a pageable list of basic flow outcome information objects filterable by query parameters.\n                FlowOutcomeDivisionViewEntityListing result = apiInstance.GetFlowsOutcomesDivisionviews(pageNumber, pageSize, sortBy, sortOrder, id, name, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.GetFlowsOutcomesDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectdependencytrackingbuild": {
    "operationId": "postarchitectdependencytrackingbuild",
    "functionName": "PostArchitectDependencytrackingBuild",
    "signature": "PostArchitectDependencytrackingBuild()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectDependencytrackingBuildExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n\n            try\n            { \n                // Rebuild Dependency Tracking data for an organization\n                apiInstance.PostArchitectDependencytrackingBuild();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectDependencytrackingBuild: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectemergencygroups": {
    "operationId": "postarchitectemergencygroups",
    "functionName": "PostArchitectEmergencygroups",
    "signature": "PostArchitectEmergencygroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmergencyGroup",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectEmergencygroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new EmergencyGroup(); // EmergencyGroup | \n\n            try\n            { \n                // Creates a new emergency group\n                EmergencyGroup result = apiInstance.PostArchitectEmergencygroups(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectEmergencygroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectivrs": {
    "operationId": "postarchitectivrs",
    "functionName": "PostArchitectIvrs",
    "signature": "PostArchitectIvrs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IVR",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectIvrsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new IVR(); // IVR | \n\n            try\n            { \n                // Create IVR config.\n                IVR result = apiInstance.PostArchitectIvrs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectIvrs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectprompthistory": {
    "operationId": "postarchitectprompthistory",
    "functionName": "PostArchitectPromptHistory",
    "signature": "PostArchitectPromptHistory(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectPromptHistoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n\n            try\n            { \n                // Generate prompt history\n                Operation result = apiInstance.PostArchitectPromptHistory(promptId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectPromptHistory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectpromptresources": {
    "operationId": "postarchitectpromptresources",
    "functionName": "PostArchitectPromptResources",
    "signature": "PostArchitectPromptResources(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PromptAssetCreate",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectPromptResourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var body = new PromptAssetCreate(); // PromptAssetCreate | \n\n            try\n            { \n                // Create a new user prompt resource\n                PromptAsset result = apiInstance.PostArchitectPromptResources(promptId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectPromptResources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectprompts": {
    "operationId": "postarchitectprompts",
    "functionName": "PostArchitectPrompts",
    "signature": "PostArchitectPrompts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectPromptsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new Prompt(); // Prompt | \n\n            try\n            { \n                // Create a new user prompt\n                Prompt result = apiInstance.PostArchitectPrompts(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectPrompts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectschedulegroups": {
    "operationId": "postarchitectschedulegroups",
    "functionName": "PostArchitectSchedulegroups",
    "signature": "PostArchitectSchedulegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScheduleGroup",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectSchedulegroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new ScheduleGroup(); // ScheduleGroup | \n\n            try\n            { \n                // Creates a new schedule group\n                ScheduleGroup result = apiInstance.PostArchitectSchedulegroups(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectSchedulegroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectschedules": {
    "operationId": "postarchitectschedules",
    "functionName": "PostArchitectSchedules",
    "signature": "PostArchitectSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new Schedule(); // Schedule | \n\n            try\n            { \n                // Create a new schedule.\n                Schedule result = apiInstance.PostArchitectSchedules(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectsystemprompthistory": {
    "operationId": "postarchitectsystemprompthistory",
    "functionName": "PostArchitectSystempromptHistory",
    "signature": "PostArchitectSystempromptHistory(promptId)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectSystempromptHistoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | promptId\n\n            try\n            { \n                // Generate system prompt history\n                Operation result = apiInstance.PostArchitectSystempromptHistory(promptId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectSystempromptHistory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postarchitectsystempromptresources": {
    "operationId": "postarchitectsystempromptresources",
    "functionName": "PostArchitectSystempromptResources",
    "signature": "PostArchitectSystempromptResources(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SystemPromptAsset",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostArchitectSystempromptResourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var body = new SystemPromptAsset(); // SystemPromptAsset | \n\n            try\n            { \n                // Create system prompt resource override.\n                SystemPromptAsset result = apiInstance.PostArchitectSystempromptResources(promptId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostArchitectSystempromptResources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowhistory": {
    "operationId": "postflowhistory",
    "functionName": "PostFlowHistory",
    "signature": "PostFlowHistory(flowId)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowHistoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n\n            try\n            { \n                // Generate flow history\n                Operation result = apiInstance.PostFlowHistory(flowId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowHistory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowversions": {
    "operationId": "postflowversions",
    "functionName": "PostFlowVersions",
    "signature": "PostFlowVersions(flowId, body)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "FlowVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var body = new Object(); // Object | \n\n            try\n            { \n                // Create flow version\n                FlowVersion result = apiInstance.PostFlowVersions(flowId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflows": {
    "operationId": "postflows",
    "functionName": "PostFlows",
    "signature": "PostFlows(body, language)",
    "parameters": [
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new Flow(); // Flow | \n            var language = \"language_example\";  // string | Language (optional) \n\n            try\n            { \n                // Create flow\n                Flow result = apiInstance.PostFlows(body, language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlows: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionscheckin": {
    "operationId": "postflowsactionscheckin",
    "functionName": "PostFlowsActionsCheckin",
    "signature": "PostFlowsActionsCheckin(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsCheckinExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n\n            try\n            { \n                // Check-in flow\n                Operation result = apiInstance.PostFlowsActionsCheckin(flow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsCheckin: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionscheckout": {
    "operationId": "postflowsactionscheckout",
    "functionName": "PostFlowsActionsCheckout",
    "signature": "PostFlowsActionsCheckout(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsCheckoutExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n\n            try\n            { \n                // Check-out flow\n                Flow result = apiInstance.PostFlowsActionsCheckout(flow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsCheckout: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionsdeactivate": {
    "operationId": "postflowsactionsdeactivate",
    "functionName": "PostFlowsActionsDeactivate",
    "signature": "PostFlowsActionsDeactivate(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsDeactivateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n\n            try\n            { \n                // Deactivate flow\n                Flow result = apiInstance.PostFlowsActionsDeactivate(flow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsDeactivate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionspublish": {
    "operationId": "postflowsactionspublish",
    "functionName": "PostFlowsActionsPublish",
    "signature": "PostFlowsActionsPublish(flow, version)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsPublishExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n            var version = \"version_example\";  // string | version (optional) \n\n            try\n            { \n                // Publish flow\n                Operation result = apiInstance.PostFlowsActionsPublish(flow, version);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsPublish: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionsrevert": {
    "operationId": "postflowsactionsrevert",
    "functionName": "PostFlowsActionsRevert",
    "signature": "PostFlowsActionsRevert(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsRevertExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n\n            try\n            { \n                // Revert flow\n                Flow result = apiInstance.PostFlowsActionsRevert(flow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsRevert: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsactionsunlock": {
    "operationId": "postflowsactionsunlock",
    "functionName": "PostFlowsActionsUnlock",
    "signature": "PostFlowsActionsUnlock(flow)",
    "parameters": [
      {
        "name": "flow",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsActionsUnlockExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flow = \"flow_example\";  // string | Flow ID\n\n            try\n            { \n                // Unlock flow\n                Flow result = apiInstance.PostFlowsActionsUnlock(flow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsActionsUnlock: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsdatatableexportjobs": {
    "operationId": "postflowsdatatableexportjobs",
    "functionName": "PostFlowsDatatableExportJobs",
    "signature": "PostFlowsDatatableExportJobs(datatableId)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataTableExportJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsDatatableExportJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n\n            try\n            { \n                // Begin an export process for exporting all rows from a datatable\n                DataTableExportJob result = apiInstance.PostFlowsDatatableExportJobs(datatableId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsDatatableExportJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsdatatableimportjobs": {
    "operationId": "postflowsdatatableimportjobs",
    "functionName": "PostFlowsDatatableImportJobs",
    "signature": "PostFlowsDatatableImportJobs(datatableId, body)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataTableImportJob",
        "required": "true"
      }
    ],
    "return": "DataTableImportJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsDatatableImportJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var body = new DataTableImportJob(); // DataTableImportJob | import job information\n\n            try\n            { \n                // Begin an import process for importing rows into a datatable\n                DataTableImportJob result = apiInstance.PostFlowsDatatableImportJobs(datatableId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsDatatableImportJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsdatatablerows": {
    "operationId": "postflowsdatatablerows",
    "functionName": "PostFlowsDatatableRows",
    "signature": "PostFlowsDatatableRows(datatableId, dataTableRow)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "dataTableRow",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsDatatableRowsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var dataTableRow = new Object(); // Object | \n\n            try\n            { \n                // Create a new row entry for the datatable.\n                Dictionary<string, Object> result = apiInstance.PostFlowsDatatableRows(datatableId, dataTableRow);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsDatatableRows: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsdatatables": {
    "operationId": "postflowsdatatables",
    "functionName": "PostFlowsDatatables",
    "signature": "PostFlowsDatatables(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataTable",
        "required": "true"
      }
    ],
    "return": "DataTable",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsDatatablesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new DataTable(); // DataTable | datatable json-schema\n\n            try\n            { \n                // Create a new datatable with the specified json-schema definition\n                DataTable result = apiInstance.PostFlowsDatatables(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsDatatables: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsexecutions": {
    "operationId": "postflowsexecutions",
    "functionName": "PostFlowsExecutions",
    "signature": "PostFlowsExecutions(flowLaunchRequest)",
    "parameters": [
      {
        "name": "flowLaunchRequest",
        "type": "FlowExecutionLaunchRequest",
        "required": "true"
      }
    ],
    "return": "FlowExecutionLaunchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsExecutionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowLaunchRequest = new FlowExecutionLaunchRequest(); // FlowExecutionLaunchRequest | \n\n            try\n            { \n                // Launch an instance of a flow definition, for flow types that support it such as the 'workflow' type.\n                FlowExecutionLaunchResponse result = apiInstance.PostFlowsExecutions(flowLaunchRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsExecutions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsjobs": {
    "operationId": "postflowsjobs",
    "functionName": "PostFlowsJobs",
    "signature": "PostFlowsJobs()",
    "return": "RegisterArchitectJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n\n            try\n            { \n                // Register Architect Job. Returns a URL where a file, such as an Architect flow YAML file, can be PUT which will then initiate the job.\n                RegisterArchitectJobResponse result = apiInstance.PostFlowsJobs();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsmilestones": {
    "operationId": "postflowsmilestones",
    "functionName": "PostFlowsMilestones",
    "signature": "PostFlowsMilestones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowMilestone",
        "required": "false"
      }
    ],
    "return": "FlowMilestone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsMilestonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new FlowMilestone(); // FlowMilestone |  (optional) \n\n            try\n            { \n                // Create a flow milestone\n                FlowMilestone result = apiInstance.PostFlowsMilestones(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsMilestones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postflowsoutcomes": {
    "operationId": "postflowsoutcomes",
    "functionName": "PostFlowsOutcomes",
    "signature": "PostFlowsOutcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FlowOutcome",
        "required": "false"
      }
    ],
    "return": "FlowOutcome",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostFlowsOutcomesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var body = new FlowOutcome(); // FlowOutcome |  (optional) \n\n            try\n            { \n                // Create a flow outcome\n                FlowOutcome result = apiInstance.PostFlowsOutcomes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PostFlowsOutcomes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectemergencygroup": {
    "operationId": "putarchitectemergencygroup",
    "functionName": "PutArchitectEmergencygroup",
    "signature": "PutArchitectEmergencygroup(emergencyGroupId, body)",
    "parameters": [
      {
        "name": "emergencyGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmergencyGroup",
        "required": "true"
      }
    ],
    "return": "EmergencyGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectEmergencygroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var emergencyGroupId = \"emergencyGroupId_example\";  // string | Emergency group ID\n            var body = new EmergencyGroup(); // EmergencyGroup | \n\n            try\n            { \n                // Updates a emergency group by ID\n                EmergencyGroup result = apiInstance.PutArchitectEmergencygroup(emergencyGroupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectEmergencygroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectivr": {
    "operationId": "putarchitectivr",
    "functionName": "PutArchitectIvr",
    "signature": "PutArchitectIvr(ivrId, body)",
    "parameters": [
      {
        "name": "ivrId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IVR",
        "required": "true"
      }
    ],
    "return": "IVR",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectIvrExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var ivrId = \"ivrId_example\";  // string | IVR id\n            var body = new IVR(); // IVR | \n\n            try\n            { \n                // Update an IVR Config.\n                IVR result = apiInstance.PutArchitectIvr(ivrId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectIvr: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectprompt": {
    "operationId": "putarchitectprompt",
    "functionName": "PutArchitectPrompt",
    "signature": "PutArchitectPrompt(promptId, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Prompt",
        "required": "true"
      }
    ],
    "return": "Prompt",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectPromptExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var body = new Prompt(); // Prompt | \n\n            try\n            { \n                // Update specified user prompt\n                Prompt result = apiInstance.PutArchitectPrompt(promptId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectPrompt: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectpromptresource": {
    "operationId": "putarchitectpromptresource",
    "functionName": "PutArchitectPromptResource",
    "signature": "PutArchitectPromptResource(promptId, languageCode, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PromptAsset",
        "required": "true"
      }
    ],
    "return": "PromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectPromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n            var body = new PromptAsset(); // PromptAsset | \n\n            try\n            { \n                // Update specified user prompt resource\n                PromptAsset result = apiInstance.PutArchitectPromptResource(promptId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectPromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectschedule": {
    "operationId": "putarchitectschedule",
    "functionName": "PutArchitectSchedule",
    "signature": "PutArchitectSchedule(scheduleId, body)",
    "parameters": [
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Schedule",
        "required": "true"
      }
    ],
    "return": "Schedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleId = \"scheduleId_example\";  // string | Schedule ID\n            var body = new Schedule(); // Schedule | \n\n            try\n            { \n                // Update schedule by ID\n                Schedule result = apiInstance.PutArchitectSchedule(scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectschedulegroup": {
    "operationId": "putarchitectschedulegroup",
    "functionName": "PutArchitectSchedulegroup",
    "signature": "PutArchitectSchedulegroup(scheduleGroupId, body)",
    "parameters": [
      {
        "name": "scheduleGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScheduleGroup",
        "required": "true"
      }
    ],
    "return": "ScheduleGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectSchedulegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var scheduleGroupId = \"scheduleGroupId_example\";  // string | Schedule group ID\n            var body = new ScheduleGroup(); // ScheduleGroup | \n\n            try\n            { \n                // Updates a schedule group by ID\n                ScheduleGroup result = apiInstance.PutArchitectSchedulegroup(scheduleGroupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectSchedulegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putarchitectsystempromptresource": {
    "operationId": "putarchitectsystempromptresource",
    "functionName": "PutArchitectSystempromptResource",
    "signature": "PutArchitectSystempromptResource(promptId, languageCode, body)",
    "parameters": [
      {
        "name": "promptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SystemPromptAsset",
        "required": "true"
      }
    ],
    "return": "SystemPromptAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutArchitectSystempromptResourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var promptId = \"promptId_example\";  // string | Prompt ID\n            var languageCode = \"languageCode_example\";  // string | Language\n            var body = new SystemPromptAsset(); // SystemPromptAsset | \n\n            try\n            { \n                // Updates a system prompt resource override.\n                SystemPromptAsset result = apiInstance.PutArchitectSystempromptResource(promptId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutArchitectSystempromptResource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putflow": {
    "operationId": "putflow",
    "functionName": "PutFlow",
    "signature": "PutFlow(flowId, body)",
    "parameters": [
      {
        "name": "flowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Flow",
        "required": "true"
      }
    ],
    "return": "Flow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFlowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowId = \"flowId_example\";  // string | Flow ID\n            var body = new Flow(); // Flow | \n\n            try\n            { \n                // Update flow\n                Flow result = apiInstance.PutFlow(flowId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutFlow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putflowsdatatable": {
    "operationId": "putflowsdatatable",
    "functionName": "PutFlowsDatatable",
    "signature": "PutFlowsDatatable(datatableId, body, expand)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataTable",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DataTable",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFlowsDatatableExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var body = new DataTable(); // DataTable | datatable json-schema\n            var expand = \"expand_example\";  // string | Expand instructions for the result (optional) \n\n            try\n            { \n                // Updates a specific datatable by id\n                DataTable result = apiInstance.PutFlowsDatatable(datatableId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutFlowsDatatable: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putflowsdatatablerow": {
    "operationId": "putflowsdatatablerow",
    "functionName": "PutFlowsDatatableRow",
    "signature": "PutFlowsDatatableRow(datatableId, rowId, body)",
    "parameters": [
      {
        "name": "datatableId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rowId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "false"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFlowsDatatableRowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var datatableId = \"datatableId_example\";  // string | id of datatable\n            var rowId = \"rowId_example\";  // string | the key for the row\n            var body = new Object(); // Object | datatable row (optional) \n\n            try\n            { \n                // Update a row entry\n                Dictionary<string, Object> result = apiInstance.PutFlowsDatatableRow(datatableId, rowId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutFlowsDatatableRow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putflowsmilestone": {
    "operationId": "putflowsmilestone",
    "functionName": "PutFlowsMilestone",
    "signature": "PutFlowsMilestone(milestoneId, body)",
    "parameters": [
      {
        "name": "milestoneId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowMilestone",
        "required": "false"
      }
    ],
    "return": "FlowMilestone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFlowsMilestoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var milestoneId = \"milestoneId_example\";  // string | flow milestone ID\n            var body = new FlowMilestone(); // FlowMilestone |  (optional) \n\n            try\n            { \n                // Updates a flow milestone\n                FlowMilestone result = apiInstance.PutFlowsMilestone(milestoneId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutFlowsMilestone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putflowsoutcome": {
    "operationId": "putflowsoutcome",
    "functionName": "PutFlowsOutcome",
    "signature": "PutFlowsOutcome(flowOutcomeId, body)",
    "parameters": [
      {
        "name": "flowOutcomeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FlowOutcome",
        "required": "false"
      }
    ],
    "return": "Operation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFlowsOutcomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ArchitectApi();\n            var flowOutcomeId = \"flowOutcomeId_example\";  // string | flow outcome ID\n            var body = new FlowOutcome(); // FlowOutcome |  (optional) \n\n            try\n            { \n                // Updates a flow outcome\n                Operation result = apiInstance.PutFlowsOutcome(flowOutcomeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Architect.PutFlowsOutcome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauditsqueryrealtimeservicemapping": {
    "operationId": "getauditsqueryrealtimeservicemapping",
    "functionName": "GetAuditsQueryRealtimeServicemapping",
    "signature": "GetAuditsQueryRealtimeServicemapping()",
    "return": "AuditQueryServiceMapping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuditsQueryRealtimeServicemappingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n\n            try\n            { \n                // Get service mapping information used in realtime audits.\n                AuditQueryServiceMapping result = apiInstance.GetAuditsQueryRealtimeServicemapping();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.GetAuditsQueryRealtimeServicemapping: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauditsqueryservicemapping": {
    "operationId": "getauditsqueryservicemapping",
    "functionName": "GetAuditsQueryServicemapping",
    "signature": "GetAuditsQueryServicemapping()",
    "return": "AuditQueryServiceMapping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuditsQueryServicemappingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n\n            try\n            { \n                // Get service mapping information used in audits.\n                AuditQueryServiceMapping result = apiInstance.GetAuditsQueryServicemapping();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.GetAuditsQueryServicemapping: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauditsquerytransactionid": {
    "operationId": "getauditsquerytransactionid",
    "functionName": "GetAuditsQueryTransactionId",
    "signature": "GetAuditsQueryTransactionId(transactionId)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AuditQueryExecutionStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuditsQueryTransactionIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n            var transactionId = \"transactionId_example\";  // string | Transaction ID\n\n            try\n            { \n                // Get status of audit query execution\n                AuditQueryExecutionStatusResponse result = apiInstance.GetAuditsQueryTransactionId(transactionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.GetAuditsQueryTransactionId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauditsquerytransactionidresults": {
    "operationId": "getauditsquerytransactionidresults",
    "functionName": "GetAuditsQueryTransactionIdResults",
    "signature": "GetAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AuditQueryExecutionResultsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuditsQueryTransactionIdResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n            var transactionId = \"transactionId_example\";  // string | Transaction ID\n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get results of audit query\n                AuditQueryExecutionResultsResponse result = apiInstance.GetAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.GetAuditsQueryTransactionIdResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauditsquery": {
    "operationId": "postauditsquery",
    "functionName": "PostAuditsQuery",
    "signature": "PostAuditsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AuditQueryRequest",
        "required": "true"
      }
    ],
    "return": "AuditQueryExecutionStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuditsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n            var body = new AuditQueryRequest(); // AuditQueryRequest | query\n\n            try\n            { \n                // Create audit query execution\n                AuditQueryExecutionStatusResponse result = apiInstance.PostAuditsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.PostAuditsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauditsqueryrealtime": {
    "operationId": "postauditsqueryrealtime",
    "functionName": "PostAuditsQueryRealtime",
    "signature": "PostAuditsQueryRealtime(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "AuditRealtimeQueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AuditRealtimeQueryResultsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuditsQueryRealtimeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuditApi();\n            var body = new AuditRealtimeQueryRequest(); // AuditRealtimeQueryRequest | query\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // This endpoint will only retrieve 14 days worth of audits for certain services. Please use /query to get a full list and older audits.\n                AuditRealtimeQueryResultsResponse result = apiInstance.PostAuditsQueryRealtime(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Audit.PostAuditsQueryRealtime: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteauthorizationdivision": {
    "operationId": "deleteauthorizationdivision",
    "functionName": "DeleteAuthorizationDivision",
    "signature": "DeleteAuthorizationDivision(divisionId, force)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAuthorizationDivisionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var force = true;  // bool? | Force delete this division as well as the grants and objects associated with it (optional)  (default to false)\n\n            try\n            { \n                // Delete a division.\n                apiInstance.DeleteAuthorizationDivision(divisionId, force);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.DeleteAuthorizationDivision: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteauthorizationrole": {
    "operationId": "deleteauthorizationrole",
    "functionName": "DeleteAuthorizationRole",
    "signature": "DeleteAuthorizationRole(roleId)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAuthorizationRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n\n            try\n            { \n                // Delete an organization role.\n                apiInstance.DeleteAuthorizationRole(roleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.DeleteAuthorizationRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteauthorizationsubjectdivisionrole": {
    "operationId": "deleteauthorizationsubjectdivisionrole",
    "functionName": "DeleteAuthorizationSubjectDivisionRole",
    "signature": "DeleteAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteAuthorizationSubjectDivisionRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var divisionId = \"divisionId_example\";  // string | the id of the division of the grant\n            var roleId = \"roleId_example\";  // string | the id of the role of the grant\n\n            try\n            { \n                // Delete a grant of a role in a division\n                apiInstance.DeleteAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteAuthorizationSubjectDivisionRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivision": {
    "operationId": "getauthorizationdivision",
    "functionName": "GetAuthorizationDivision",
    "signature": "GetAuthorizationDivision(divisionId, objectCount)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectCount",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AuthzDivision",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var objectCount = \"objectCount_example\";  // bool? | Get count of objects in this division, grouped by type (optional)  (default to false)\n\n            try\n            { \n                // Returns an authorization division.\n                AuthzDivision result = apiInstance.GetAuthorizationDivision(divisionId, objectCount);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.GetAuthorizationDivision: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisiongrants": {
    "operationId": "getauthorizationdivisiongrants",
    "functionName": "GetAuthorizationDivisionGrants",
    "signature": "GetAuthorizationDivisionGrants(divisionId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "AuthzDivisionGrantEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionGrantsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Gets all grants for a given division.\n                AuthzDivisionGrantEntityListing result = apiInstance.GetAuthorizationDivisionGrants(divisionId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationDivisionGrants: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisions": {
    "operationId": "getauthorizationdivisions",
    "functionName": "GetAuthorizationDivisions",
    "signature": "GetAuthorizationDivisions(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, objectCount, id, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "objectCount",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "AuthzDivisionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var objectCount = true;  // bool? | Include the count of objects contained in the division (optional)  (default to false)\n            var id = new List<string>(); // List<string> | Optionally request specific divisions by their IDs (optional) \n            var name = \"name_example\";  // string | Search term to filter by division name (optional) \n\n            try\n            { \n                // Retrieve a list of all divisions defined for the organization\n                AuthzDivisionEntityListing result = apiInstance.GetAuthorizationDivisions(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, objectCount, id, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.GetAuthorizationDivisions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisionshome": {
    "operationId": "getauthorizationdivisionshome",
    "functionName": "GetAuthorizationDivisionsHome",
    "signature": "GetAuthorizationDivisionsHome()",
    "return": "AuthzDivision",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionsHomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n\n            try\n            { \n                // Retrieve the home division for the organization.\n                AuthzDivision result = apiInstance.GetAuthorizationDivisionsHome();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.GetAuthorizationDivisionsHome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisionslimit": {
    "operationId": "getauthorizationdivisionslimit",
    "functionName": "GetAuthorizationDivisionsLimit",
    "signature": "GetAuthorizationDivisionsLimit()",
    "return": "int?",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionsLimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n\n            try\n            { \n                // Returns the maximum allowed number of divisions.\n                int? result = apiInstance.GetAuthorizationDivisionsLimit();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.GetAuthorizationDivisionsLimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisionspermittedme": {
    "operationId": "getauthorizationdivisionspermittedme",
    "functionName": "GetAuthorizationDivisionspermittedMe",
    "signature": "GetAuthorizationDivisionspermittedMe(permission, name)",
    "parameters": [
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "List<AuthzDivision>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionspermittedMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var permission = \"permission_example\";  // string | The permission string, including the object to access, e.g. routing:queue:view\n            var name = \"name_example\";  // string | Search term to filter by division name (optional) \n\n            try\n            { \n                // Returns which divisions the current user has the given permission in.\n                List<AuthzDivision> result = apiInstance.GetAuthorizationDivisionspermittedMe(permission, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAuthorizationDivisionspermittedMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisionspermittedpagedme": {
    "operationId": "getauthorizationdivisionspermittedpagedme",
    "functionName": "GetAuthorizationDivisionspermittedPagedMe",
    "signature": "GetAuthorizationDivisionspermittedPagedMe(permission, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DivsPermittedEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionspermittedPagedMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var permission = \"permission_example\";  // string | The permission string, including the object to access, e.g. routing:queue:view\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Returns which divisions the current user has the given permission in.\n                DivsPermittedEntityListing result = apiInstance.GetAuthorizationDivisionspermittedPagedMe(permission, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAuthorizationDivisionspermittedPagedMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationdivisionspermittedpagedsubjectid": {
    "operationId": "getauthorizationdivisionspermittedpagedsubjectid",
    "functionName": "GetAuthorizationDivisionspermittedPagedSubjectId",
    "signature": "GetAuthorizationDivisionspermittedPagedSubjectId(subjectId, permission, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "permission",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DivsPermittedEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationDivisionspermittedPagedSubjectIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var permission = \"permission_example\";  // string | The permission string, including the object to access, e.g. routing:queue:view\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Returns which divisions the specified user has the given permission in.\n                DivsPermittedEntityListing result = apiInstance.GetAuthorizationDivisionspermittedPagedSubjectId(subjectId, permission, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAuthorizationDivisionspermittedPagedSubjectId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationpermissions": {
    "operationId": "getauthorizationpermissions",
    "functionName": "GetAuthorizationPermissions",
    "signature": "GetAuthorizationPermissions(pageSize, pageNumber, queryType, query)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "queryType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "query",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "PermissionCollectionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationPermissionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var queryType = \"queryType_example\";  // string | Query filter type (optional) \n            var query = \"query_example\";  // string | Comma-separated list of permissions or domains to query (optional) \n\n            try\n            { \n                // Get all permissions.\n                PermissionCollectionEntityListing result = apiInstance.GetAuthorizationPermissions(pageSize, pageNumber, queryType, query);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationPermissions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationproducts": {
    "operationId": "getauthorizationproducts",
    "functionName": "GetAuthorizationProducts",
    "signature": "GetAuthorizationProducts()",
    "return": "OrganizationProductEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationProductsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n\n            try\n            { \n                // Get the list of enabled products\n                OrganizationProductEntityListing result = apiInstance.GetAuthorizationProducts();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationProducts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationrole": {
    "operationId": "getauthorizationrole",
    "functionName": "GetAuthorizationRole",
    "signature": "GetAuthorizationRole(roleId, expand)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. \\\"unusedPermissions\\\" returns the permissions not used for the role (optional) \n\n            try\n            { \n                // Get a single organization role.\n                DomainOrganizationRole result = apiInstance.GetAuthorizationRole(roleId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationrolecomparedefaultrightroleid": {
    "operationId": "getauthorizationrolecomparedefaultrightroleid",
    "functionName": "GetAuthorizationRoleComparedefaultRightRoleId",
    "signature": "GetAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId)",
    "parameters": [
      {
        "name": "leftRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rightRoleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainOrgRoleDifference",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationRoleComparedefaultRightRoleIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var leftRoleId = \"leftRoleId_example\";  // string | Left Role ID\n            var rightRoleId = \"rightRoleId_example\";  // string | Right Role id\n\n            try\n            { \n                // Get an org role to default role comparison\n                DomainOrgRoleDifference result = apiInstance.GetAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationRoleComparedefaultRightRoleId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationrolesubjectgrants": {
    "operationId": "getauthorizationrolesubjectgrants",
    "functionName": "GetAuthorizationRoleSubjectgrants",
    "signature": "GetAuthorizationRoleSubjectgrants(roleId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SubjectDivisionGrantsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationRoleSubjectgrantsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // Get the subjects' granted divisions in the specified role.\n                SubjectDivisionGrantsEntityListing result = apiInstance.GetAuthorizationRoleSubjectgrants(roleId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationRoleSubjectgrants: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationroleusers": {
    "operationId": "getauthorizationroleusers",
    "functionName": "GetAuthorizationRoleUsers",
    "signature": "GetAuthorizationRoleUsers(roleId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationRoleUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of the users in a specified role.\n                UserEntityListing result = apiInstance.GetAuthorizationRoleUsers(roleId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationRoleUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationroles": {
    "operationId": "getauthorizationroles",
    "functionName": "GetAuthorizationRoles",
    "signature": "GetAuthorizationRoles(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, permission, defaultRoleId, userCount, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "defaultRoleId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "userCount",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var name = \"name_example\";  // string |  (optional) \n            var permission = new List<string>(); // List<string> |  (optional) \n            var defaultRoleId = new List<string>(); // List<string> |  (optional) \n            var userCount = true;  // bool? |  (optional)  (default to true)\n            var id = new List<string>(); // List<string> | id (optional) \n\n            try\n            { \n                // Retrieve a list of all roles defined for the organization\n                OrganizationRoleEntityListing result = apiInstance.GetAuthorizationRoles(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, permission, defaultRoleId, userCount, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationsubject": {
    "operationId": "getauthorizationsubject",
    "functionName": "GetAuthorizationSubject",
    "signature": "GetAuthorizationSubject(subjectId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AuthzSubject",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationSubjectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n\n            try\n            { \n                // Returns a listing of roles and permissions for a user.\n                AuthzSubject result = apiInstance.GetAuthorizationSubject(subjectId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAuthorizationSubject: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationsubjectsme": {
    "operationId": "getauthorizationsubjectsme",
    "functionName": "GetAuthorizationSubjectsMe",
    "signature": "GetAuthorizationSubjectsMe()",
    "return": "AuthzSubject",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationSubjectsMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n\n            try\n            { \n                // Returns a listing of roles and permissions for the currently authenticated user.\n                AuthzSubject result = apiInstance.GetAuthorizationSubjectsMe();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetAuthorizationSubjectsMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getauthorizationsubjectsrolecounts": {
    "operationId": "getauthorizationsubjectsrolecounts",
    "functionName": "GetAuthorizationSubjectsRolecounts",
    "signature": "GetAuthorizationSubjectsRolecounts(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetAuthorizationSubjectsRolecountsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var id = new List<string>(); // List<string> | id (optional) \n\n            try\n            { \n                // Get the count of roles granted to a list of subjects\n                Dictionary<string, Object> result = apiInstance.GetAuthorizationSubjectsRolecounts(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.GetAuthorizationSubjectsRolecounts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserroles": {
    "operationId": "getuserroles",
    "functionName": "GetUserRoles",
    "signature": "GetUserRoles(subjectId)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | User ID\n\n            try\n            { \n                // Returns a listing of roles and permissions for a user.\n                UserAuthorization result = apiInstance.GetUserRoles(subjectId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchauthorizationrole": {
    "operationId": "patchauthorizationrole",
    "functionName": "PatchAuthorizationRole",
    "signature": "PatchAuthorizationRole(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRole",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchAuthorizationRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var body = new DomainOrganizationRole(); // DomainOrganizationRole | Organization role\n\n            try\n            { \n                // Patch Organization Role for needsUpdate Field\n                DomainOrganizationRole result = apiInstance.PatchAuthorizationRole(roleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PatchAuthorizationRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationdivisionobject": {
    "operationId": "postauthorizationdivisionobject",
    "functionName": "PostAuthorizationDivisionObject",
    "signature": "PostAuthorizationDivisionObject(divisionId, objectType, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "objectType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationDivisionObjectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var objectType = \"objectType_example\";  // string | The type of the objects. Must be one of the valid object types\n            var body = new List<string>(); // List<string> | Object Id List\n\n            try\n            { \n                // Assign a list of objects to a division\n                apiInstance.PostAuthorizationDivisionObject(divisionId, objectType, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.PostAuthorizationDivisionObject: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationdivisionrestore": {
    "operationId": "postauthorizationdivisionrestore",
    "functionName": "PostAuthorizationDivisionRestore",
    "signature": "PostAuthorizationDivisionRestore(divisionId, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "true"
      }
    ],
    "return": "AuthzDivision",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationDivisionRestoreExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var body = new AuthzDivision(); // AuthzDivision | Recreated division data\n\n            try\n            { \n                // Recreate a previously deleted division.\n                AuthzDivision result = apiInstance.PostAuthorizationDivisionRestore(divisionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.PostAuthorizationDivisionRestore: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationdivisions": {
    "operationId": "postauthorizationdivisions",
    "functionName": "PostAuthorizationDivisions",
    "signature": "PostAuthorizationDivisions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "true"
      }
    ],
    "return": "AuthzDivision",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationDivisionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var body = new AuthzDivision(); // AuthzDivision | Division\n\n            try\n            { \n                // Create a division.\n                AuthzDivision result = apiInstance.PostAuthorizationDivisions(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.PostAuthorizationDivisions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationrole": {
    "operationId": "postauthorizationrole",
    "functionName": "PostAuthorizationRole",
    "signature": "PostAuthorizationRole(roleId, body, subjectType)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SubjectDivisions",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var body = new SubjectDivisions(); // SubjectDivisions | Subjects and Divisions\n            var subjectType = \"subjectType_example\";  // string | what the type of the subjects are (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional)  (default to \"PC_USER\")\n\n            try\n            { \n                // Bulk-grant subjects and divisions with an organization role.\n                apiInstance.PostAuthorizationRole(roleId, body, subjectType);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PostAuthorizationRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationrolecomparedefaultrightroleid": {
    "operationId": "postauthorizationrolecomparedefaultrightroleid",
    "functionName": "PostAuthorizationRoleComparedefaultRightRoleId",
    "signature": "PostAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId, body)",
    "parameters": [
      {
        "name": "leftRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "rightRoleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRole",
        "required": "true"
      }
    ],
    "return": "DomainOrgRoleDifference",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationRoleComparedefaultRightRoleIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var leftRoleId = \"leftRoleId_example\";  // string | Left Role ID\n            var rightRoleId = \"rightRoleId_example\";  // string | Right Role id\n            var body = new DomainOrganizationRole(); // DomainOrganizationRole | Organization role\n\n            try\n            { \n                // Get an unsaved org role to default role comparison\n                DomainOrgRoleDifference result = apiInstance.PostAuthorizationRoleComparedefaultRightRoleId(leftRoleId, rightRoleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PostAuthorizationRoleComparedefaultRightRoleId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationroles": {
    "operationId": "postauthorizationroles",
    "functionName": "PostAuthorizationRoles",
    "signature": "PostAuthorizationRoles(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DomainOrganizationRoleCreate",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var body = new DomainOrganizationRoleCreate(); // DomainOrganizationRoleCreate | Organization role\n\n            try\n            { \n                // Create an organization role.\n                DomainOrganizationRole result = apiInstance.PostAuthorizationRoles(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PostAuthorizationRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationrolesdefault": {
    "operationId": "postauthorizationrolesdefault",
    "functionName": "PostAuthorizationRolesDefault",
    "signature": "PostAuthorizationRolesDefault(force)",
    "parameters": [
      {
        "name": "force",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationRolesDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var force = true;  // bool? | Restore default roles (optional)  (default to false)\n\n            try\n            { \n                // Restores all default roles\n                OrganizationRoleEntityListing result = apiInstance.PostAuthorizationRolesDefault(force);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PostAuthorizationRolesDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationsubjectbulkadd": {
    "operationId": "postauthorizationsubjectbulkadd",
    "functionName": "PostAuthorizationSubjectBulkadd",
    "signature": "PostAuthorizationSubjectBulkadd(subjectId, body, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationSubjectBulkaddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var body = new RoleDivisionGrants(); // RoleDivisionGrants | Pairs of role and division IDs\n            var subjectType = \"subjectType_example\";  // string | what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional)  (default to \"PC_USER\")\n\n            try\n            { \n                // Bulk-grant roles and divisions to a subject.\n                apiInstance.PostAuthorizationSubjectBulkadd(subjectId, body, subjectType);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAuthorizationSubjectBulkadd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationsubjectbulkremove": {
    "operationId": "postauthorizationsubjectbulkremove",
    "functionName": "PostAuthorizationSubjectBulkremove",
    "signature": "PostAuthorizationSubjectBulkremove(subjectId, body)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationSubjectBulkremoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var body = new RoleDivisionGrants(); // RoleDivisionGrants | Pairs of role and division IDs\n\n            try\n            { \n                // Bulk-remove grants from a subject.\n                apiInstance.PostAuthorizationSubjectBulkremove(subjectId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAuthorizationSubjectBulkremove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationsubjectbulkreplace": {
    "operationId": "postauthorizationsubjectbulkreplace",
    "functionName": "PostAuthorizationSubjectBulkreplace",
    "signature": "PostAuthorizationSubjectBulkreplace(subjectId, body, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationSubjectBulkreplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var body = new RoleDivisionGrants(); // RoleDivisionGrants | Pairs of role and division IDs\n            var subjectType = \"subjectType_example\";  // string | what the type of the subject is (PC_GROUP, PC_USER or PC_OAUTH_CLIENT) (optional)  (default to \"PC_USER\")\n\n            try\n            { \n                // Replace subject's roles and divisions with the exact list supplied in the request.\n                apiInstance.PostAuthorizationSubjectBulkreplace(subjectId, body, subjectType);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAuthorizationSubjectBulkreplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postauthorizationsubjectdivisionrole": {
    "operationId": "postauthorizationsubjectdivisionrole",
    "functionName": "PostAuthorizationSubjectDivisionRole",
    "signature": "PostAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId, subjectType)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "subjectType",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostAuthorizationSubjectDivisionRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | Subject ID (user or group)\n            var divisionId = \"divisionId_example\";  // string | the id of the division to which to make the grant\n            var roleId = \"roleId_example\";  // string | the id of the role to grant\n            var subjectType = \"subjectType_example\";  // string | what the type of the subject is: PC_GROUP, PC_USER or PC_OAUTH_CLIENT (note: for cross-org authorization, please use the Organization Authorization endpoints) (optional)  (default to \"PC_USER\")\n\n            try\n            { \n                // Make a grant of a role in a division\n                apiInstance.PostAuthorizationSubjectDivisionRole(subjectId, divisionId, roleId, subjectType);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostAuthorizationSubjectDivisionRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putauthorizationdivision": {
    "operationId": "putauthorizationdivision",
    "functionName": "PutAuthorizationDivision",
    "signature": "PutAuthorizationDivision(divisionId, body)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AuthzDivision",
        "required": "true"
      }
    ],
    "return": "AuthzDivision",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAuthorizationDivisionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ObjectsApi();\n            var divisionId = \"divisionId_example\";  // string | Division ID\n            var body = new AuthzDivision(); // AuthzDivision | Updated division data\n\n            try\n            { \n                // Update a division.\n                AuthzDivision result = apiInstance.PutAuthorizationDivision(divisionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Objects.PutAuthorizationDivision: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putauthorizationrole": {
    "operationId": "putauthorizationrole",
    "functionName": "PutAuthorizationRole",
    "signature": "PutAuthorizationRole(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainOrganizationRoleUpdate",
        "required": "true"
      }
    ],
    "return": "DomainOrganizationRole",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAuthorizationRoleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var body = new DomainOrganizationRoleUpdate(); // DomainOrganizationRoleUpdate | Organization role\n\n            try\n            { \n                // Update an organization role.\n                DomainOrganizationRole result = apiInstance.PutAuthorizationRole(roleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PutAuthorizationRole: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putauthorizationroleusersadd": {
    "operationId": "putauthorizationroleusersadd",
    "functionName": "PutAuthorizationRoleUsersAdd",
    "signature": "PutAuthorizationRoleUsersAdd(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAuthorizationRoleUsersAddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var body = new List<string>(); // List<string> | List of user IDs\n\n            try\n            { \n                // Sets the users for the role\n                List<string> result = apiInstance.PutAuthorizationRoleUsersAdd(roleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PutAuthorizationRoleUsersAdd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putauthorizationroleusersremove": {
    "operationId": "putauthorizationroleusersremove",
    "functionName": "PutAuthorizationRoleUsersRemove",
    "signature": "PutAuthorizationRoleUsersRemove(roleId, body)",
    "parameters": [
      {
        "name": "roleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAuthorizationRoleUsersRemoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var roleId = \"roleId_example\";  // string | Role ID\n            var body = new List<string>(); // List<string> | List of user IDs\n\n            try\n            { \n                // Removes the users from the role\n                List<string> result = apiInstance.PutAuthorizationRoleUsersRemove(roleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PutAuthorizationRoleUsersRemove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putauthorizationrolesdefault": {
    "operationId": "putauthorizationrolesdefault",
    "functionName": "PutAuthorizationRolesDefault",
    "signature": "PutAuthorizationRolesDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<DomainOrganizationRole>",
        "required": "true"
      }
    ],
    "return": "OrganizationRoleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutAuthorizationRolesDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new AuthorizationApi();\n            var body = new List<DomainOrganizationRole>(); // List<DomainOrganizationRole> | Organization roles list\n\n            try\n            { \n                // Restore specified default roles\n                OrganizationRoleEntityListing result = apiInstance.PutAuthorizationRolesDefault(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Authorization.PutAuthorizationRolesDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserroles": {
    "operationId": "putuserroles",
    "functionName": "PutUserRoles",
    "signature": "PutUserRoles(subjectId, body)",
    "parameters": [
      {
        "name": "subjectId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var subjectId = \"subjectId_example\";  // string | User ID\n            var body = new List<string>(); // List<string> | List of roles\n\n            try\n            { \n                // Sets the user's roles\n                UserAuthorization result = apiInstance.PutUserRoles(subjectId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getbillingreportsbillableusage": {
    "operationId": "getbillingreportsbillableusage",
    "functionName": "GetBillingReportsBillableusage",
    "signature": "GetBillingReportsBillableusage(startDate, endDate)",
    "parameters": [
      {
        "name": "startDate",
        "type": "DateTime?",
        "required": "true"
      },
      {
        "name": "endDate",
        "type": "DateTime?",
        "required": "true"
      }
    ],
    "return": "BillingUsageReport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetBillingReportsBillableusageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new BillingApi();\n            var startDate = new DateTime();  // DateTime? | The period start date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Zvar startDate = 2013-10-20T19:20:30+01:00;  // DateTime? | The period start date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n            var endDate = new DateTime();  // DateTime? | The period end date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Zvar endDate = 2013-10-20T19:20:30+01:00;  // DateTime? | The period end date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n\n            try\n            { \n                // Get a report of the billable license usages\n                BillingUsageReport result = apiInstance.GetBillingReportsBillableusage(startDate, endDate);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Billing.GetBillingReportsBillableusage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getbillingtrusteebillingoverviewtrustororgid": {
    "operationId": "getbillingtrusteebillingoverviewtrustororgid",
    "functionName": "GetBillingTrusteebillingoverviewTrustorOrgId",
    "signature": "GetBillingTrusteebillingoverviewTrustorOrgId(trustorOrgId, billingPeriodIndex)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "billingPeriodIndex",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrusteeBillingOverview",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetBillingTrusteebillingoverviewTrustorOrgIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new BillingApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | The organization ID of the trustor (customer) organization.\n            var billingPeriodIndex = 56;  // int? | 0 for active period (overview data may change until period closes). 1 for prior completed billing period. 2 for two billing cycles prior, and so on. (optional)  (default to 0)\n\n            try\n            { \n                // Get the billing overview for an organization that is managed by a partner.\n                TrusteeBillingOverview result = apiInstance.GetBillingTrusteebillingoverviewTrustorOrgId(trustorOrgId, billingPeriodIndex);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Billing.GetBillingTrusteebillingoverviewTrustorOrgId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getchatsettings": {
    "operationId": "getchatsettings",
    "functionName": "GetChatSettings",
    "signature": "GetChatSettings()",
    "return": "ChatSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetChatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ChatApi();\n\n            try\n            { \n                // Get Chat Settings.\n                ChatSettings result = apiInstance.GetChatSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Chat.GetChatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchchatsettings": {
    "operationId": "patchchatsettings",
    "functionName": "PatchChatSettings",
    "signature": "PatchChatSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChatSettings",
        "required": "true"
      }
    ],
    "return": "ChatSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchChatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ChatApi();\n            var body = new ChatSettings(); // ChatSettings | Chat\n\n            try\n            { \n                // Patch Chat Settings.\n                ChatSettings result = apiInstance.PatchChatSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Chat.PatchChatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putchatsettings": {
    "operationId": "putchatsettings",
    "functionName": "PutChatSettings",
    "signature": "PutChatSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChatSettings",
        "required": "true"
      }
    ],
    "return": "ChatSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutChatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ChatApi();\n            var body = new ChatSettings(); // ChatSettings | Chat\n\n            try\n            { \n                // Update Chat Settings.\n                ChatSettings result = apiInstance.PutChatSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Chat.PutChatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecoachingappointment": {
    "operationId": "deletecoachingappointment",
    "functionName": "DeleteCoachingAppointment",
    "signature": "DeleteCoachingAppointment(appointmentId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentReference",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteCoachingAppointmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n\n            try\n            { \n                // Delete an existing appointment\n                CoachingAppointmentReference result = apiInstance.DeleteCoachingAppointment(appointmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.DeleteCoachingAppointment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecoachingappointmentannotation": {
    "operationId": "deletecoachingappointmentannotation",
    "functionName": "DeleteCoachingAppointmentAnnotation",
    "signature": "DeleteCoachingAppointmentAnnotation(appointmentId, annotationId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteCoachingAppointmentAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var annotationId = \"annotationId_example\";  // string | The ID of the annotation.\n\n            try\n            { \n                // Delete an existing annotation\n                apiInstance.DeleteCoachingAppointmentAnnotation(appointmentId, annotationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.DeleteCoachingAppointmentAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointment": {
    "operationId": "getcoachingappointment",
    "functionName": "GetCoachingAppointment",
    "signature": "GetCoachingAppointment(appointmentId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n\n            try\n            { \n                // Retrieve an appointment\n                CoachingAppointmentResponse result = apiInstance.GetCoachingAppointment(appointmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointmentannotation": {
    "operationId": "getcoachingappointmentannotation",
    "functionName": "GetCoachingAppointmentAnnotation",
    "signature": "GetCoachingAppointmentAnnotation(appointmentId, annotationId)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var annotationId = \"annotationId_example\";  // string | The ID of the annotation.\n\n            try\n            { \n                // Retrieve an annotation.\n                CoachingAnnotation result = apiInstance.GetCoachingAppointmentAnnotation(appointmentId, annotationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointmentAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointmentannotations": {
    "operationId": "getcoachingappointmentannotations",
    "functionName": "GetCoachingAppointmentAnnotations",
    "signature": "GetCoachingAppointmentAnnotations(appointmentId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "CoachingAnnotationList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentAnnotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a list of annotations.\n                CoachingAnnotationList result = apiInstance.GetCoachingAppointmentAnnotations(appointmentId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointmentAnnotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointmentstatuses": {
    "operationId": "getcoachingappointmentstatuses",
    "functionName": "GetCoachingAppointmentStatuses",
    "signature": "GetCoachingAppointmentStatuses(appointmentId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentStatusResponseList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentStatusesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get the list of status changes for a coaching appointment.\n                CoachingAppointmentStatusResponseList result = apiInstance.GetCoachingAppointmentStatuses(appointmentId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointmentStatuses: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointments": {
    "operationId": "getcoachingappointments",
    "functionName": "GetCoachingAppointments",
    "signature": "GetCoachingAppointments(userIds, interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)",
    "parameters": [
      {
        "name": "userIds",
        "type": "List<string>",
        "required": "true"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "facilitatorIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "intervalCondition",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentResponseList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var userIds = new List<string>(); // List<string> | The user IDs for which to retrieve appointments\n            var interval = \"interval_example\";  // string | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var statuses = new List<string>(); // List<string> | Appointment Statuses to filter by (optional) \n            var facilitatorIds = new List<string>(); // List<string> | The facilitator IDs for which to retrieve appointments (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort (by due date) either Asc or Desc (optional) \n            var relationships = new List<string>(); // List<string> | Relationships to filter by (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Overdue status to filter by (optional) \n            var intervalCondition = \"intervalCondition_example\";  // string | Filter condition for interval (optional) \n\n            try\n            { \n                // Get appointments for users and optional date range\n                CoachingAppointmentResponseList result = apiInstance.GetCoachingAppointments(userIds, interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingappointmentsme": {
    "operationId": "getcoachingappointmentsme",
    "functionName": "GetCoachingAppointmentsMe",
    "signature": "GetCoachingAppointmentsMe(interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition)",
    "parameters": [
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "facilitatorIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "relationships",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "intervalCondition",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CoachingAppointmentResponseList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingAppointmentsMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var interval = \"interval_example\";  // string | Interval to filter data by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var statuses = new List<string>(); // List<string> | Appointment Statuses to filter by (optional) \n            var facilitatorIds = new List<string>(); // List<string> | The facilitator IDs for which to retrieve appointments (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort (by due date) either Asc or Desc (optional) \n            var relationships = new List<string>(); // List<string> | Relationships to filter by (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Appointment completion start and end to filter by. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Overdue status to filter by (optional) \n            var intervalCondition = \"intervalCondition_example\";  // string | Filter condition for interval (optional) \n\n            try\n            { \n                // Get my appointments for a given date range\n                CoachingAppointmentResponseList result = apiInstance.GetCoachingAppointmentsMe(interval, pageNumber, pageSize, statuses, facilitatorIds, sortOrder, relationships, completionInterval, overdue, intervalCondition);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingAppointmentsMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingnotification": {
    "operationId": "getcoachingnotification",
    "functionName": "GetCoachingNotification",
    "signature": "GetCoachingNotification(notificationId, expand)",
    "parameters": [
      {
        "name": "notificationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "CoachingNotification",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingNotificationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var notificationId = \"notificationId_example\";  // string | The ID of the notification.\n            var expand = new List<string>(); // List<string> | Indicates a field in the response which should be expanded. (optional) \n\n            try\n            { \n                // Get an existing notification\n                CoachingNotification result = apiInstance.GetCoachingNotification(notificationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingNotification: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcoachingnotifications": {
    "operationId": "getcoachingnotifications",
    "functionName": "GetCoachingNotifications",
    "signature": "GetCoachingNotifications(pageNumber, pageSize, expand)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "CoachingNotificationList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetCoachingNotificationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var expand = new List<string>(); // List<string> | Indicates a field in the response which should be expanded. (optional) \n\n            try\n            { \n                // Retrieve the list of your notifications.\n                CoachingNotificationList result = apiInstance.GetCoachingNotifications(pageNumber, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.GetCoachingNotifications: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchcoachingappointment": {
    "operationId": "patchcoachingappointment",
    "functionName": "PatchCoachingAppointment",
    "signature": "PatchCoachingAppointment(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateCoachingAppointmentRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchCoachingAppointmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var body = new UpdateCoachingAppointmentRequest(); // UpdateCoachingAppointmentRequest | The new version of the appointment\n\n            try\n            { \n                // Update an existing appointment\n                CoachingAppointmentResponse result = apiInstance.PatchCoachingAppointment(appointmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PatchCoachingAppointment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchcoachingappointmentannotation": {
    "operationId": "patchcoachingappointmentannotation",
    "functionName": "PatchCoachingAppointmentAnnotation",
    "signature": "PatchCoachingAppointmentAnnotation(appointmentId, annotationId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAnnotation",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchCoachingAppointmentAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var annotationId = \"annotationId_example\";  // string | The ID of the annotation.\n            var body = new CoachingAnnotation(); // CoachingAnnotation | The new version of the annotation\n\n            try\n            { \n                // Update an existing annotation.\n                CoachingAnnotation result = apiInstance.PatchCoachingAppointmentAnnotation(appointmentId, annotationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PatchCoachingAppointmentAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchcoachingappointmentstatus": {
    "operationId": "patchcoachingappointmentstatus",
    "functionName": "PatchCoachingAppointmentStatus",
    "signature": "PatchCoachingAppointmentStatus(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAppointmentStatusRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchCoachingAppointmentStatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var body = new CoachingAppointmentStatusRequest(); // CoachingAppointmentStatusRequest | Updated status of the coaching appointment\n\n            try\n            { \n                // Update the status of a coaching appointment\n                CoachingAppointmentStatusResponse result = apiInstance.PatchCoachingAppointmentStatus(appointmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PatchCoachingAppointmentStatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchcoachingnotification": {
    "operationId": "patchcoachingnotification",
    "functionName": "PatchCoachingNotification",
    "signature": "PatchCoachingNotification(notificationId, body)",
    "parameters": [
      {
        "name": "notificationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingNotification",
        "required": "true"
      }
    ],
    "return": "CoachingNotification",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchCoachingNotificationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var notificationId = \"notificationId_example\";  // string | The ID of the notification.\n            var body = new CoachingNotification(); // CoachingNotification | Change the read state of a notification\n\n            try\n            { \n                // Update an existing notification.\n                CoachingNotification result = apiInstance.PatchCoachingNotification(notificationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PatchCoachingNotification: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcoachingappointmentannotations": {
    "operationId": "postcoachingappointmentannotations",
    "functionName": "PostCoachingAppointmentAnnotations",
    "signature": "PostCoachingAppointmentAnnotations(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CoachingAnnotationCreateRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAnnotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCoachingAppointmentAnnotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var body = new CoachingAnnotationCreateRequest(); // CoachingAnnotationCreateRequest | The annotation to add\n\n            try\n            { \n                // Create a new annotation.\n                CoachingAnnotation result = apiInstance.PostCoachingAppointmentAnnotations(appointmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PostCoachingAppointmentAnnotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcoachingappointmentconversations": {
    "operationId": "postcoachingappointmentconversations",
    "functionName": "PostCoachingAppointmentConversations",
    "signature": "PostCoachingAppointmentConversations(appointmentId, body)",
    "parameters": [
      {
        "name": "appointmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddConversationRequest",
        "required": "true"
      }
    ],
    "return": "AddConversationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCoachingAppointmentConversationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var appointmentId = \"appointmentId_example\";  // string | The ID of the coaching appointment.\n            var body = new AddConversationRequest(); // AddConversationRequest | body\n\n            try\n            { \n                // Add a conversation to an appointment\n                AddConversationResponse result = apiInstance.PostCoachingAppointmentConversations(appointmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PostCoachingAppointmentConversations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcoachingappointments": {
    "operationId": "postcoachingappointments",
    "functionName": "PostCoachingAppointments",
    "signature": "PostCoachingAppointments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCoachingAppointmentRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCoachingAppointmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var body = new CreateCoachingAppointmentRequest(); // CreateCoachingAppointmentRequest | The appointment to add\n\n            try\n            { \n                // Create a new appointment\n                CoachingAppointmentResponse result = apiInstance.PostCoachingAppointments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PostCoachingAppointments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcoachingappointmentsaggregatesquery": {
    "operationId": "postcoachingappointmentsaggregatesquery",
    "functionName": "PostCoachingAppointmentsAggregatesQuery",
    "signature": "PostCoachingAppointmentsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CoachingAppointmentAggregateRequest",
        "required": "true"
      }
    ],
    "return": "CoachingAppointmentAggregateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCoachingAppointmentsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var body = new CoachingAppointmentAggregateRequest(); // CoachingAppointmentAggregateRequest | Aggregate Request\n\n            try\n            { \n                // Retrieve aggregated appointment data\n                CoachingAppointmentAggregateResponse result = apiInstance.PostCoachingAppointmentsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PostCoachingAppointmentsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcoachingscheduleslotsquery": {
    "operationId": "postcoachingscheduleslotsquery",
    "functionName": "PostCoachingScheduleslotsQuery",
    "signature": "PostCoachingScheduleslotsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CoachingSlotsRequest",
        "required": "true"
      }
    ],
    "return": "CoachingSlotsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCoachingScheduleslotsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new CoachingApi();\n            var body = new CoachingSlotsRequest(); // CoachingSlotsRequest | The slot search request\n\n            try\n            { \n                // Get list of possible slots where a coaching appointment can be scheduled.\n                CoachingSlotsResponse result = apiInstance.PostCoachingScheduleslotsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Coaching.PostCoachingScheduleslotsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementdocument": {
    "operationId": "deletecontentmanagementdocument",
    "functionName": "DeleteContentmanagementDocument",
    "signature": "DeleteContentmanagementDocument(documentId, _override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "_override",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var _override = true;  // bool? | Override any lock on the document (optional) \n\n            try\n            { \n                // Delete a document.\n                apiInstance.DeleteContentmanagementDocument(documentId, _override);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementshare": {
    "operationId": "deletecontentmanagementshare",
    "functionName": "DeleteContentmanagementShare",
    "signature": "DeleteContentmanagementShare(shareId)",
    "parameters": [
      {
        "name": "shareId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementShareExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var shareId = \"shareId_example\";  // string | Share ID\n\n            try\n            { \n                // Deletes an existing share.\n                apiInstance.DeleteContentmanagementShare(shareId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementShare: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementstatusstatusid": {
    "operationId": "deletecontentmanagementstatusstatusid",
    "functionName": "DeleteContentmanagementStatusStatusId",
    "signature": "DeleteContentmanagementStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementStatusStatusIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var statusId = \"statusId_example\";  // string | Status ID\n\n            try\n            { \n                // Cancel the command for this status\n                apiInstance.DeleteContentmanagementStatusStatusId(statusId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementStatusStatusId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementworkspace": {
    "operationId": "deletecontentmanagementworkspace",
    "functionName": "DeleteContentmanagementWorkspace",
    "signature": "DeleteContentmanagementWorkspace(workspaceId, moveChildrenToWorkspaceId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "moveChildrenToWorkspaceId",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementWorkspaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var moveChildrenToWorkspaceId = \"moveChildrenToWorkspaceId_example\";  // string | New location for objects in deleted workspace. (optional) \n\n            try\n            { \n                // Delete a workspace\n                apiInstance.DeleteContentmanagementWorkspace(workspaceId, moveChildrenToWorkspaceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementWorkspace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementworkspacemember": {
    "operationId": "deletecontentmanagementworkspacemember",
    "functionName": "DeleteContentmanagementWorkspaceMember",
    "signature": "DeleteContentmanagementWorkspaceMember(workspaceId, memberId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementWorkspaceMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var memberId = \"memberId_example\";  // string | Member ID\n\n            try\n            { \n                // Delete a member from a workspace\n                apiInstance.DeleteContentmanagementWorkspaceMember(workspaceId, memberId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementWorkspaceMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletecontentmanagementworkspacetagvalue": {
    "operationId": "deletecontentmanagementworkspacetagvalue",
    "functionName": "DeleteContentmanagementWorkspaceTagvalue",
    "signature": "DeleteContentmanagementWorkspaceTagvalue(workspaceId, tagId)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteContentmanagementWorkspaceTagvalueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var tagId = \"tagId_example\";  // string | Tag ID\n\n            try\n            { \n                // Delete workspace tag\n                apiInstance.DeleteContentmanagementWorkspaceTagvalue(workspaceId, tagId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.DeleteContentmanagementWorkspaceTagvalue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementdocument": {
    "operationId": "getcontentmanagementdocument",
    "functionName": "GetContentmanagementDocument",
    "signature": "GetContentmanagementDocument(documentId, expand)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a document.\n                Document result = apiInstance.GetContentmanagementDocument(documentId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementdocumentaudits": {
    "operationId": "getcontentmanagementdocumentaudits",
    "functionName": "GetContentmanagementDocumentAudits",
    "signature": "GetContentmanagementDocumentAudits(documentId, pageSize, pageNumber, transactionFilter, level, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "transactionFilter",
        "type": "string",
        "required": "false"
      },
      {
        "name": "level",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DocumentAuditEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementDocumentAuditsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var transactionFilter = \"transactionFilter_example\";  // string | Transaction filter (optional) \n            var level = \"level_example\";  // string | level (optional)  (default to \"USER\")\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ascending\")\n\n            try\n            { \n                // Get a list of audits for a document.\n                DocumentAuditEntityListing result = apiInstance.GetContentmanagementDocumentAudits(documentId, pageSize, pageNumber, transactionFilter, level, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementDocumentAudits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementdocumentcontent": {
    "operationId": "getcontentmanagementdocumentcontent",
    "functionName": "GetContentmanagementDocumentContent",
    "signature": "GetContentmanagementDocumentContent(documentId, disposition, contentType)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "disposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contentType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DownloadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementDocumentContentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var disposition = \"disposition_example\";  // string | Request how the content will be downloaded: a file attachment or inline. Default is attachment. (optional) \n            var contentType = \"contentType_example\";  // string | The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav (optional) \n\n            try\n            { \n                // Download a document.\n                DownloadResponse result = apiInstance.GetContentmanagementDocumentContent(documentId, disposition, contentType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementDocumentContent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementdocuments": {
    "operationId": "getcontentmanagementdocuments",
    "functionName": "GetContentmanagementDocuments",
    "signature": "GetContentmanagementDocuments(workspaceId, name, expand, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DocumentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var name = \"name_example\";  // string | Name (optional) \n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | name or dateCreated (optional) \n            var sortOrder = \"sortOrder_example\";  // string | ascending or descending (optional)  (default to \"ascending\")\n\n            try\n            { \n                // Get a list of documents.\n                DocumentEntityListing result = apiInstance.GetContentmanagementDocuments(workspaceId, name, expand, pageSize, pageNumber, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementquery": {
    "operationId": "getcontentmanagementquery",
    "functionName": "GetContentmanagementQuery",
    "signature": "GetContentmanagementQuery(queryPhrase, pageSize, pageNumber, sortBy, sortOrder, expand)",
    "parameters": [
      {
        "name": "queryPhrase",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "QueryResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var queryPhrase = \"queryPhrase_example\";  // string | Phrase tokens are ANDed together over all searchable fields\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | name or dateCreated (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | ascending or descending (optional)  (default to \"ascending\")\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Query content\n                QueryResults result = apiInstance.GetContentmanagementQuery(queryPhrase, pageSize, pageNumber, sortBy, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementsecurityprofile": {
    "operationId": "getcontentmanagementsecurityprofile",
    "functionName": "GetContentmanagementSecurityprofile",
    "signature": "GetContentmanagementSecurityprofile(securityProfileId)",
    "parameters": [
      {
        "name": "securityProfileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SecurityProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementSecurityprofileExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var securityProfileId = \"securityProfileId_example\";  // string | Security Profile Id\n\n            try\n            { \n                // Get a Security Profile\n                SecurityProfile result = apiInstance.GetContentmanagementSecurityprofile(securityProfileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementSecurityprofile: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementsecurityprofiles": {
    "operationId": "getcontentmanagementsecurityprofiles",
    "functionName": "GetContentmanagementSecurityprofiles",
    "signature": "GetContentmanagementSecurityprofiles()",
    "return": "SecurityProfileEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementSecurityprofilesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n\n            try\n            { \n                // Get a List of Security Profiles\n                SecurityProfileEntityListing result = apiInstance.GetContentmanagementSecurityprofiles();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementSecurityprofiles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementshare": {
    "operationId": "getcontentmanagementshare",
    "functionName": "GetContentmanagementShare",
    "signature": "GetContentmanagementShare(shareId, expand)",
    "parameters": [
      {
        "name": "shareId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Share",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementShareExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var shareId = \"shareId_example\";  // string | Share ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Retrieve details about an existing share.\n                Share result = apiInstance.GetContentmanagementShare(shareId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementShare: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementsharedsharedid": {
    "operationId": "getcontentmanagementsharedsharedid",
    "functionName": "GetContentmanagementSharedSharedId",
    "signature": "GetContentmanagementSharedSharedId(sharedId, redirect, disposition, contentType, expand)",
    "parameters": [
      {
        "name": "sharedId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "redirect",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "disposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contentType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SharedResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementSharedSharedIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var sharedId = \"sharedId_example\";  // string | Shared ID\n            var redirect = true;  // bool? | Turn on or off redirect (optional)  (default to true)\n            var disposition = \"disposition_example\";  // string | Request how the share content will be downloaded: attached as a file or inline. Default is attachment. (optional)  (default to attachment)\n            var contentType = \"contentType_example\";  // string | The requested format for the specified document. If supported, the document will be returned in that format. Example contentType=audio/wav (optional) \n            var expand = \"expand_example\";  // string | Expand some document fields (optional) \n\n            try\n            { \n                // Get shared documents. Securely download a shared document.\n                SharedResponse result = apiInstance.GetContentmanagementSharedSharedId(sharedId, redirect, disposition, contentType, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementSharedSharedId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementshares": {
    "operationId": "getcontentmanagementshares",
    "functionName": "GetContentmanagementShares",
    "signature": "GetContentmanagementShares(entityId, expand, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "entityId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ShareEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementSharesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var entityId = \"entityId_example\";  // string | Filters the shares returned to only the entity specified by the value of this parameter. (optional) \n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Gets a list of shares.  You must specify at least one filter (e.g. entityId).\n                ShareEntityListing result = apiInstance.GetContentmanagementShares(entityId, expand, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementShares: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementstatus": {
    "operationId": "getcontentmanagementstatus",
    "functionName": "GetContentmanagementStatus",
    "signature": "GetContentmanagementStatus(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "CommandStatusEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementStatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of statuses for pending operations\n                CommandStatusEntityListing result = apiInstance.GetContentmanagementStatus(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementStatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementstatusstatusid": {
    "operationId": "getcontentmanagementstatusstatusid",
    "functionName": "GetContentmanagementStatusStatusId",
    "signature": "GetContentmanagementStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CommandStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementStatusStatusIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var statusId = \"statusId_example\";  // string | Status ID\n\n            try\n            { \n                // Get a status.\n                CommandStatus result = apiInstance.GetContentmanagementStatusStatusId(statusId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementStatusStatusId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementusage": {
    "operationId": "getcontentmanagementusage",
    "functionName": "GetContentmanagementUsage",
    "signature": "GetContentmanagementUsage()",
    "return": "Usage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementUsageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n\n            try\n            { \n                // Get usage details.\n                Usage result = apiInstance.GetContentmanagementUsage();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementUsage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspace": {
    "operationId": "getcontentmanagementworkspace",
    "functionName": "GetContentmanagementWorkspace",
    "signature": "GetContentmanagementWorkspace(workspaceId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Workspace",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a workspace.\n                Workspace result = apiInstance.GetContentmanagementWorkspace(workspaceId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspacedocuments": {
    "operationId": "getcontentmanagementworkspacedocuments",
    "functionName": "GetContentmanagementWorkspaceDocuments",
    "signature": "GetContentmanagementWorkspaceDocuments(workspaceId, expand, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DocumentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | name or dateCreated (optional) \n            var sortOrder = \"sortOrder_example\";  // string | ascending or descending (optional)  (default to \"ascending\")\n\n            try\n            { \n                // Get a list of documents.\n                DocumentEntityListing result = apiInstance.GetContentmanagementWorkspaceDocuments(workspaceId, expand, pageSize, pageNumber, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaceDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspacemember": {
    "operationId": "getcontentmanagementworkspacemember",
    "functionName": "GetContentmanagementWorkspaceMember",
    "signature": "GetContentmanagementWorkspaceMember(workspaceId, memberId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkspaceMember",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var memberId = \"memberId_example\";  // string | Member ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a workspace member\n                WorkspaceMember result = apiInstance.GetContentmanagementWorkspaceMember(workspaceId, memberId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaceMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspacemembers": {
    "operationId": "getcontentmanagementworkspacemembers",
    "functionName": "GetContentmanagementWorkspaceMembers",
    "signature": "GetContentmanagementWorkspaceMembers(workspaceId, pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkspaceMemberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a list workspace members\n                WorkspaceMemberEntityListing result = apiInstance.GetContentmanagementWorkspaceMembers(workspaceId, pageSize, pageNumber, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaceMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspacetagvalue": {
    "operationId": "getcontentmanagementworkspacetagvalue",
    "functionName": "GetContentmanagementWorkspaceTagvalue",
    "signature": "GetContentmanagementWorkspaceTagvalue(workspaceId, tagId, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "TagValue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceTagvalueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var tagId = \"tagId_example\";  // string | Tag ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a workspace tag\n                TagValue result = apiInstance.GetContentmanagementWorkspaceTagvalue(workspaceId, tagId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaceTagvalue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspacetagvalues": {
    "operationId": "getcontentmanagementworkspacetagvalues",
    "functionName": "GetContentmanagementWorkspaceTagvalues",
    "signature": "GetContentmanagementWorkspaceTagvalues(workspaceId, value, pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "value",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "TagValueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspaceTagvaluesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var value = \"value_example\";  // string | filter the list of tags returned (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a list of workspace tags\n                TagValueEntityListing result = apiInstance.GetContentmanagementWorkspaceTagvalues(workspaceId, value, pageSize, pageNumber, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaceTagvalues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getcontentmanagementworkspaces": {
    "operationId": "getcontentmanagementworkspaces",
    "functionName": "GetContentmanagementWorkspaces",
    "signature": "GetContentmanagementWorkspaces(pageSize, pageNumber, access, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "access",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkspaceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetContentmanagementWorkspacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var access = new List<string>(); // List<string> | Requested access level. (optional) \n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a list of workspaces.\n                WorkspaceEntityListing result = apiInstance.GetContentmanagementWorkspaces(pageSize, pageNumber, access, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.GetContentmanagementWorkspaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementauditquery": {
    "operationId": "postcontentmanagementauditquery",
    "functionName": "PostContentmanagementAuditquery",
    "signature": "PostContentmanagementAuditquery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContentQueryRequest",
        "required": "true"
      }
    ],
    "return": "QueryResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementAuditqueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var body = new ContentQueryRequest(); // ContentQueryRequest | Allows for a filtered query returning facet information\n\n            try\n            { \n                // Query audits\n                QueryResults result = apiInstance.PostContentmanagementAuditquery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementAuditquery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementdocument": {
    "operationId": "postcontentmanagementdocument",
    "functionName": "PostContentmanagementDocument",
    "signature": "PostContentmanagementDocument(documentId, body, expand, _override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentUpdate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "_override",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var body = new DocumentUpdate(); // DocumentUpdate | Document\n            var expand = \"expand_example\";  // string | Expand some document fields (optional) \n            var _override = true;  // bool? | Override any lock on the document (optional) \n\n            try\n            { \n                // Update a document.\n                Document result = apiInstance.PostContentmanagementDocument(documentId, body, expand, _override);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementdocumentcontent": {
    "operationId": "postcontentmanagementdocumentcontent",
    "functionName": "PostContentmanagementDocumentContent",
    "signature": "PostContentmanagementDocumentContent(documentId, body, _override)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ReplaceRequest",
        "required": "true"
      },
      {
        "name": "_override",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ReplaceResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementDocumentContentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var body = new ReplaceRequest(); // ReplaceRequest | Replace Request\n            var _override = true;  // bool? | Override any lock on the document (optional) \n\n            try\n            { \n                // Replace the contents of a document.\n                ReplaceResponse result = apiInstance.PostContentmanagementDocumentContent(documentId, body, _override);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementDocumentContent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementdocuments": {
    "operationId": "postcontentmanagementdocuments",
    "functionName": "PostContentmanagementDocuments",
    "signature": "PostContentmanagementDocuments(body, copySource, moveSource, _override)",
    "parameters": [
      {
        "name": "body",
        "type": "DocumentUpload",
        "required": "true"
      },
      {
        "name": "copySource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "moveSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "_override",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Document",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var body = new DocumentUpload(); // DocumentUpload | Document\n            var copySource = \"copySource_example\";  // string | Copy a document within a workspace or to a new workspace. Provide a document ID as the copy source. (optional) \n            var moveSource = \"moveSource_example\";  // string | Move a document to a new workspace. Provide a document ID as the move source. (optional) \n            var _override = true;  // bool? | Override any lock on the source document (optional) \n\n            try\n            { \n                // Add a document.\n                Document result = apiInstance.PostContentmanagementDocuments(body, copySource, moveSource, _override);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementquery": {
    "operationId": "postcontentmanagementquery",
    "functionName": "PostContentmanagementQuery",
    "signature": "PostContentmanagementQuery(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "QueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "QueryResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var body = new QueryRequest(); // QueryRequest | Allows for a filtered query returning facet information\n            var expand = \"expand_example\";  // string | Expand some document fields (optional) \n\n            try\n            { \n                // Query content\n                QueryResults result = apiInstance.PostContentmanagementQuery(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementshares": {
    "operationId": "postcontentmanagementshares",
    "functionName": "PostContentmanagementShares",
    "signature": "PostContentmanagementShares(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateShareRequest",
        "required": "true"
      }
    ],
    "return": "CreateShareResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementSharesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var body = new CreateShareRequest(); // CreateShareRequest | CreateShareRequest - entity id and type and a single member or list of members are required\n\n            try\n            { \n                // Creates a new share or updates an existing share if the entity has already been shared\n                CreateShareResponse result = apiInstance.PostContentmanagementShares(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementShares: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementworkspacetagvalues": {
    "operationId": "postcontentmanagementworkspacetagvalues",
    "functionName": "PostContentmanagementWorkspaceTagvalues",
    "signature": "PostContentmanagementWorkspaceTagvalues(workspaceId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagValue",
        "required": "true"
      }
    ],
    "return": "TagValue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementWorkspaceTagvaluesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var body = new TagValue(); // TagValue | tag\n\n            try\n            { \n                // Create a workspace tag\n                TagValue result = apiInstance.PostContentmanagementWorkspaceTagvalues(workspaceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementWorkspaceTagvalues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementworkspacetagvaluesquery": {
    "operationId": "postcontentmanagementworkspacetagvaluesquery",
    "functionName": "PostContentmanagementWorkspaceTagvaluesQuery",
    "signature": "PostContentmanagementWorkspaceTagvaluesQuery(workspaceId, body, expand)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagQueryRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "TagValueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementWorkspaceTagvaluesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var body = new TagQueryRequest(); // TagQueryRequest | query\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Perform a prefix query on tags in the workspace\n                TagValueEntityListing result = apiInstance.PostContentmanagementWorkspaceTagvaluesQuery(workspaceId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementWorkspaceTagvaluesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcontentmanagementworkspaces": {
    "operationId": "postcontentmanagementworkspaces",
    "functionName": "PostContentmanagementWorkspaces",
    "signature": "PostContentmanagementWorkspaces(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WorkspaceCreate",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostContentmanagementWorkspacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var body = new WorkspaceCreate(); // WorkspaceCreate | Workspace\n\n            try\n            { \n                // Create a group workspace\n                Workspace result = apiInstance.PostContentmanagementWorkspaces(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PostContentmanagementWorkspaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putcontentmanagementworkspace": {
    "operationId": "putcontentmanagementworkspace",
    "functionName": "PutContentmanagementWorkspace",
    "signature": "PutContentmanagementWorkspace(workspaceId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Workspace",
        "required": "true"
      }
    ],
    "return": "Workspace",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutContentmanagementWorkspaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var body = new Workspace(); // Workspace | Workspace\n\n            try\n            { \n                // Update a workspace\n                Workspace result = apiInstance.PutContentmanagementWorkspace(workspaceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PutContentmanagementWorkspace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putcontentmanagementworkspacemember": {
    "operationId": "putcontentmanagementworkspacemember",
    "functionName": "PutContentmanagementWorkspaceMember",
    "signature": "PutContentmanagementWorkspaceMember(workspaceId, memberId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WorkspaceMember",
        "required": "true"
      }
    ],
    "return": "WorkspaceMember",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutContentmanagementWorkspaceMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var memberId = \"memberId_example\";  // string | Member ID\n            var body = new WorkspaceMember(); // WorkspaceMember | Workspace Member\n\n            try\n            { \n                // Add a member to a workspace\n                WorkspaceMember result = apiInstance.PutContentmanagementWorkspaceMember(workspaceId, memberId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PutContentmanagementWorkspaceMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putcontentmanagementworkspacetagvalue": {
    "operationId": "putcontentmanagementworkspacetagvalue",
    "functionName": "PutContentmanagementWorkspaceTagvalue",
    "signature": "PutContentmanagementWorkspaceTagvalue(workspaceId, tagId, body)",
    "parameters": [
      {
        "name": "workspaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "tagId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TagValue",
        "required": "true"
      }
    ],
    "return": "TagValue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutContentmanagementWorkspaceTagvalueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ContentManagementApi();\n            var workspaceId = \"workspaceId_example\";  // string | Workspace ID\n            var tagId = \"tagId_example\";  // string | Tag ID\n            var body = new TagValue(); // TagValue | Workspace\n\n            try\n            { \n                // Update a workspace tag. Will update all documents with the new tag value.\n                TagValue result = apiInstance.PutContentmanagementWorkspaceTagvalue(workspaceId, tagId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ContentManagement.PutContentmanagementWorkspaceTagvalue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationparticipantcode": {
    "operationId": "deleteconversationparticipantcode",
    "functionName": "DeleteConversationParticipantCode",
    "signature": "DeleteConversationParticipantCode(conversationId, participantId, addCommunicationCode)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "addCommunicationCode",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationParticipantCodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var addCommunicationCode = \"addCommunicationCode_example\";  // string | addCommunicationCode\n\n            try\n            { \n                // Delete a code used to add a communication to this participant\n                apiInstance.DeleteConversationParticipantCode(conversationId, participantId, addCommunicationCode);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationParticipantCode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationparticipantflaggedreason": {
    "operationId": "deleteconversationparticipantflaggedreason",
    "functionName": "DeleteConversationParticipantFlaggedreason",
    "signature": "DeleteConversationParticipantFlaggedreason(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationParticipantFlaggedreasonExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n\n            try\n            { \n                // Remove flagged reason from conversation participant.\n                apiInstance.DeleteConversationParticipantFlaggedreason(conversationId, participantId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationParticipantFlaggedreason: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationscallparticipantconsult": {
    "operationId": "deleteconversationscallparticipantconsult",
    "functionName": "DeleteConversationsCallParticipantConsult",
    "signature": "DeleteConversationsCallParticipantConsult(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsCallParticipantConsultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Cancel the transfer\n                apiInstance.DeleteConversationsCallParticipantConsult(conversationId, participantId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsCallParticipantConsult: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsemailmessagesdraftattachment": {
    "operationId": "deleteconversationsemailmessagesdraftattachment",
    "functionName": "DeleteConversationsEmailMessagesDraftAttachment",
    "signature": "DeleteConversationsEmailMessagesDraftAttachment(conversationId, attachmentId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attachmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsEmailMessagesDraftAttachmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var attachmentId = \"attachmentId_example\";  // string | attachmentId\n\n            try\n            { \n                // Delete attachment from draft\n                apiInstance.DeleteConversationsEmailMessagesDraftAttachment(conversationId, attachmentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsEmailMessagesDraftAttachment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingIntegrationsFacebookIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n\n            try\n            { \n                // Delete a Facebook messaging integration\n                apiInstance.DeleteConversationsMessagingIntegrationsFacebookIntegrationId(integrationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingIntegrationsFacebookIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingintegrationslineintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationslineintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsLineIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingIntegrationsLineIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n\n            try\n            { \n                // Delete a LINE messenger integration\n                apiInstance.DeleteConversationsMessagingIntegrationsLineIntegrationId(integrationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingIntegrationsLineIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationsopenintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingIntegrationsOpenIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n\n            try\n            { \n                // Delete an Open messaging integration\n                apiInstance.DeleteConversationsMessagingIntegrationsOpenIntegrationId(integrationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingIntegrationsOpenIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingIntegrationsTwitterIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n\n            try\n            { \n                // Delete a Twitter messaging integration\n                apiInstance.DeleteConversationsMessagingIntegrationsTwitterIntegrationId(integrationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingIntegrationsTwitterIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "deleteconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "DeleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingIntegrationsWhatsappIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n\n            try\n            { \n                // Delete a WhatsApp messaging integration\n                WhatsAppIntegration result = apiInstance.DeleteConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingIntegrationsWhatsappIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "deleteconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "DeleteConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "DeleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationsMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n\n            try\n            { \n                // Delete a supported content profile\n                apiInstance.DeleteConversationsMessagingSupportedcontentSupportedContentId(supportedContentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.DeleteConversationsMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversation": {
    "operationId": "getconversation",
    "functionName": "GetConversation",
    "signature": "GetConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n\n            try\n            { \n                // Get conversation\n                Conversation result = apiInstance.GetConversation(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationparticipantsecureivrsession": {
    "operationId": "getconversationparticipantsecureivrsession",
    "functionName": "GetConversationParticipantSecureivrsession",
    "signature": "GetConversationParticipantSecureivrsession(conversationId, participantId, secureSessionId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "secureSessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SecureSession",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationParticipantSecureivrsessionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var secureSessionId = \"secureSessionId_example\";  // string | secure IVR session ID\n\n            try\n            { \n                // Fetch info on a secure session\n                SecureSession result = apiInstance.GetConversationParticipantSecureivrsession(conversationId, participantId, secureSessionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationParticipantSecureivrsession: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationparticipantsecureivrsessions": {
    "operationId": "getconversationparticipantsecureivrsessions",
    "functionName": "GetConversationParticipantSecureivrsessions",
    "signature": "GetConversationParticipantSecureivrsessions(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SecureSessionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationParticipantSecureivrsessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n\n            try\n            { \n                // Get a list of secure sessions for this participant.\n                SecureSessionEntityListing result = apiInstance.GetConversationParticipantSecureivrsessions(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationParticipantSecureivrsessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationparticipantwrapup": {
    "operationId": "getconversationparticipantwrapup",
    "functionName": "GetConversationParticipantWrapup",
    "signature": "GetConversationParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationparticipantwrapupcodes": {
    "operationId": "getconversationparticipantwrapupcodes",
    "functionName": "GetConversationParticipantWrapupcodes",
    "signature": "GetConversationParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsecureattributes": {
    "operationId": "getconversationsecureattributes",
    "functionName": "GetConversationSecureattributes",
    "signature": "GetConversationSecureattributes(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ConversationSecureAttributes",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationSecureattributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n\n            try\n            { \n                // Get the secure attributes on a conversation.\n                ConversationSecureAttributes result = apiInstance.GetConversationSecureattributes(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationSecureattributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversations": {
    "operationId": "getconversations",
    "functionName": "GetConversations",
    "signature": "GetConversations(communicationType)",
    "parameters": [
      {
        "name": "communicationType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var communicationType = \"communicationType_example\";  // string | Call or Chat communication filtering (optional) \n\n            try\n            { \n                // Get active conversations for the logged in user\n                ConversationEntityListing result = apiInstance.GetConversations(communicationType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscall": {
    "operationId": "getconversationscall",
    "functionName": "GetConversationsCall",
    "signature": "GetConversationsCall(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CallConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get call conversation\n                CallConversation result = apiInstance.GetConversationsCall(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCall: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallparticipantwrapup": {
    "operationId": "getconversationscallparticipantwrapup",
    "functionName": "GetConversationsCallParticipantWrapup",
    "signature": "GetConversationsCallParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsCallParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallparticipantwrapupcodes": {
    "operationId": "getconversationscallparticipantwrapupcodes",
    "functionName": "GetConversationsCallParticipantWrapupcodes",
    "signature": "GetConversationsCallParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsCallParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallback": {
    "operationId": "getconversationscallback",
    "functionName": "GetConversationsCallback",
    "signature": "GetConversationsCallback(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CallbackConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get callback conversation\n                CallbackConversation result = apiInstance.GetConversationsCallback(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallbackparticipantwrapup": {
    "operationId": "getconversationscallbackparticipantwrapup",
    "functionName": "GetConversationsCallbackParticipantWrapup",
    "signature": "GetConversationsCallbackParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallbackParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsCallbackParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallbackParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallbackparticipantwrapupcodes": {
    "operationId": "getconversationscallbackparticipantwrapupcodes",
    "functionName": "GetConversationsCallbackParticipantWrapupcodes",
    "signature": "GetConversationsCallbackParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallbackParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsCallbackParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallbackParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallbacks": {
    "operationId": "getconversationscallbacks",
    "functionName": "GetConversationsCallbacks",
    "signature": "GetConversationsCallbacks()",
    "return": "CallbackConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallbacksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active callback conversations for the logged in user\n                CallbackConversationEntityListing result = apiInstance.GetConversationsCallbacks();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallbacks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscalls": {
    "operationId": "getconversationscalls",
    "functionName": "GetConversationsCalls",
    "signature": "GetConversationsCalls()",
    "return": "CallConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active call conversations for the logged in user\n                CallConversationEntityListing result = apiInstance.GetConversationsCalls();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCalls: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallshistory": {
    "operationId": "getconversationscallshistory",
    "functionName": "GetConversationsCallsHistory",
    "signature": "GetConversationsCallsHistory(pageSize, pageNumber, interval, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "CallHistoryConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallsHistoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size, maximum 50 (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var interval = \"interval_example\";  // string | Interval string; format is ISO-8601. Separate start and end times with forward slash '/' (optional) \n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get call history\n                CallHistoryConversationEntityListing result = apiInstance.GetConversationsCallsHistory(pageSize, pageNumber, interval, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallsHistory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscallsmaximumconferenceparties": {
    "operationId": "getconversationscallsmaximumconferenceparties",
    "functionName": "GetConversationsCallsMaximumconferenceparties",
    "signature": "GetConversationsCallsMaximumconferenceparties()",
    "return": "MaxParticipants",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCallsMaximumconferencepartiesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get the maximum number of participants that this user can have on a conference\n                MaxParticipants result = apiInstance.GetConversationsCallsMaximumconferenceparties();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCallsMaximumconferenceparties: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschat": {
    "operationId": "getconversationschat",
    "functionName": "GetConversationsChat",
    "signature": "GetConversationsChat(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ChatConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get chat conversation\n                ChatConversation result = apiInstance.GetConversationsChat(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChat: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschatmessage": {
    "operationId": "getconversationschatmessage",
    "functionName": "GetConversationsChatMessage",
    "signature": "GetConversationsChatMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var messageId = \"messageId_example\";  // string | messageId\n\n            try\n            { \n                // Get a web chat conversation message\n                WebChatMessage result = apiInstance.GetConversationsChatMessage(conversationId, messageId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChatMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschatmessages": {
    "operationId": "getconversationschatmessages",
    "functionName": "GetConversationsChatMessages",
    "signature": "GetConversationsChatMessages(conversationId, after, before, sortOrder, maxResults)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "maxResults",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "WebChatMessageEntityList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var after = \"after_example\";  // string | If specified, get the messages chronologically after the id of this message (optional) \n            var before = \"before_example\";  // string | If specified, get the messages chronologically before the id of this message (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to ascending)\n            var maxResults = 56;  // int? | Limit the returned number of messages, up to a maximum of 100 (optional)  (default to 100)\n\n            try\n            { \n                // Get the messages of a chat conversation.\n                WebChatMessageEntityList result = apiInstance.GetConversationsChatMessages(conversationId, after, before, sortOrder, maxResults);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChatMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschatparticipantwrapup": {
    "operationId": "getconversationschatparticipantwrapup",
    "functionName": "GetConversationsChatParticipantWrapup",
    "signature": "GetConversationsChatParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsChatParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChatParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschatparticipantwrapupcodes": {
    "operationId": "getconversationschatparticipantwrapupcodes",
    "functionName": "GetConversationsChatParticipantWrapupcodes",
    "signature": "GetConversationsChatParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsChatParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChatParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationschats": {
    "operationId": "getconversationschats",
    "functionName": "GetConversationsChats",
    "signature": "GetConversationsChats()",
    "return": "ChatConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsChatsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active chat conversations for the logged in user\n                ChatConversationEntityListing result = apiInstance.GetConversationsChats();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsChats: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscobrowsesession": {
    "operationId": "getconversationscobrowsesession",
    "functionName": "GetConversationsCobrowsesession",
    "signature": "GetConversationsCobrowsesession(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CobrowseConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCobrowsesessionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get cobrowse conversation\n                CobrowseConversation result = apiInstance.GetConversationsCobrowsesession(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCobrowsesession: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscobrowsesessionparticipantwrapup": {
    "operationId": "getconversationscobrowsesessionparticipantwrapup",
    "functionName": "GetConversationsCobrowsesessionParticipantWrapup",
    "signature": "GetConversationsCobrowsesessionParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCobrowsesessionParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsCobrowsesessionParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCobrowsesessionParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscobrowsesessionparticipantwrapupcodes": {
    "operationId": "getconversationscobrowsesessionparticipantwrapupcodes",
    "functionName": "GetConversationsCobrowsesessionParticipantWrapupcodes",
    "signature": "GetConversationsCobrowsesessionParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCobrowsesessionParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsCobrowsesessionParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCobrowsesessionParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationscobrowsesessions": {
    "operationId": "getconversationscobrowsesessions",
    "functionName": "GetConversationsCobrowsesessions",
    "signature": "GetConversationsCobrowsesessions()",
    "return": "CobrowseConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsCobrowsesessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active cobrowse conversations for the logged in user\n                CobrowseConversationEntityListing result = apiInstance.GetConversationsCobrowsesessions();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsCobrowsesessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemail": {
    "operationId": "getconversationsemail",
    "functionName": "GetConversationsEmail",
    "signature": "GetConversationsEmail(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get email conversation\n                EmailConversation result = apiInstance.GetConversationsEmail(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmail: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailmessage": {
    "operationId": "getconversationsemailmessage",
    "functionName": "GetConversationsEmailMessage",
    "signature": "GetConversationsEmailMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var messageId = \"messageId_example\";  // string | messageId\n\n            try\n            { \n                // Get conversation message\n                EmailMessage result = apiInstance.GetConversationsEmailMessage(conversationId, messageId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailmessages": {
    "operationId": "getconversationsemailmessages",
    "functionName": "GetConversationsEmailMessages",
    "signature": "GetConversationsEmailMessages(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailMessageListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get conversation messages\n                EmailMessageListing result = apiInstance.GetConversationsEmailMessages(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailmessagesdraft": {
    "operationId": "getconversationsemailmessagesdraft",
    "functionName": "GetConversationsEmailMessagesDraft",
    "signature": "GetConversationsEmailMessagesDraft(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailMessagesDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get conversation draft reply\n                EmailMessage result = apiInstance.GetConversationsEmailMessagesDraft(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailMessagesDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailparticipantwrapup": {
    "operationId": "getconversationsemailparticipantwrapup",
    "functionName": "GetConversationsEmailParticipantWrapup",
    "signature": "GetConversationsEmailParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsEmailParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailparticipantwrapupcodes": {
    "operationId": "getconversationsemailparticipantwrapupcodes",
    "functionName": "GetConversationsEmailParticipantWrapupcodes",
    "signature": "GetConversationsEmailParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsEmailParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemailsettings": {
    "operationId": "getconversationsemailsettings",
    "functionName": "GetConversationsEmailSettings",
    "signature": "GetConversationsEmailSettings(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailsSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get emails settings for a given conversation\n                EmailsSettings result = apiInstance.GetConversationsEmailSettings(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmailSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsemails": {
    "operationId": "getconversationsemails",
    "functionName": "GetConversationsEmails",
    "signature": "GetConversationsEmails()",
    "return": "EmailConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsEmailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active email conversations for the logged in user\n                EmailConversationEntityListing result = apiInstance.GetConversationsEmails();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsEmails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationskeyconfiguration": {
    "operationId": "getconversationskeyconfiguration",
    "functionName": "GetConversationsKeyconfiguration",
    "signature": "GetConversationsKeyconfiguration(keyconfigurationsId)",
    "parameters": [
      {
        "name": "keyconfigurationsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsKeyconfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var keyconfigurationsId = \"keyconfigurationsId_example\";  // string | Key Configurations Id\n\n            try\n            { \n                // Get the encryption key configurations\n                ConversationEncryptionConfiguration result = apiInstance.GetConversationsKeyconfiguration(keyconfigurationsId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsKeyconfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationskeyconfigurations": {
    "operationId": "getconversationskeyconfigurations",
    "functionName": "GetConversationsKeyconfigurations",
    "signature": "GetConversationsKeyconfigurations()",
    "return": "ConversationEncryptionConfigurationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsKeyconfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get a list of key configurations data\n                ConversationEncryptionConfigurationListing result = apiInstance.GetConversationsKeyconfigurations();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsKeyconfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessage": {
    "operationId": "getconversationsmessage",
    "functionName": "GetConversationsMessage",
    "signature": "GetConversationsMessage(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessageConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get message conversation\n                MessageConversation result = apiInstance.GetConversationsMessage(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagecommunicationmessagesmediamediaid": {
    "operationId": "getconversationsmessagecommunicationmessagesmediamediaid",
    "functionName": "GetConversationsMessageCommunicationMessagesMediaMediaId",
    "signature": "GetConversationsMessageCommunicationMessagesMediaMediaId(conversationId, communicationId, mediaId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessageMediaData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageCommunicationMessagesMediaMediaIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var mediaId = \"mediaId_example\";  // string | mediaId\n\n            try\n            { \n                // Get media\n                MessageMediaData result = apiInstance.GetConversationsMessageCommunicationMessagesMediaMediaId(conversationId, communicationId, mediaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessageCommunicationMessagesMediaMediaId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagedetails": {
    "operationId": "getconversationsmessagedetails",
    "functionName": "GetConversationsMessageDetails",
    "signature": "GetConversationsMessageDetails(messageId, useNormalizedMessage)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageDetailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var messageId = \"messageId_example\";  // string | messageId\n            var useNormalizedMessage = true;  // bool? | If true, response removes deprecated fields (textBody, media, stickers) (optional)  (default to false)\n\n            try\n            { \n                // Get message\n                MessageData result = apiInstance.GetConversationsMessageDetails(messageId, useNormalizedMessage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessageDetails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagemessage": {
    "operationId": "getconversationsmessagemessage",
    "functionName": "GetConversationsMessageMessage",
    "signature": "GetConversationsMessageMessage(conversationId, messageId, useNormalizedMessage)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var messageId = \"messageId_example\";  // string | messageId\n            var useNormalizedMessage = true;  // bool? | If true, response removes deprecated fields (textBody, media, stickers) (optional)  (default to false)\n\n            try\n            { \n                // Get conversation message\n                MessageData result = apiInstance.GetConversationsMessageMessage(conversationId, messageId, useNormalizedMessage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessageMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessageparticipantwrapup": {
    "operationId": "getconversationsmessageparticipantwrapup",
    "functionName": "GetConversationsMessageParticipantWrapup",
    "signature": "GetConversationsMessageParticipantWrapup(conversationId, participantId, provisional)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "provisional",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AssignedWrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageParticipantWrapupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var provisional = true;  // bool? | Indicates if the wrap-up code is provisional. (optional)  (default to false)\n\n            try\n            { \n                // Get the wrap-up for this conversation participant. \n                AssignedWrapupCode result = apiInstance.GetConversationsMessageParticipantWrapup(conversationId, participantId, provisional);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessageParticipantWrapup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessageparticipantwrapupcodes": {
    "operationId": "getconversationsmessageparticipantwrapupcodes",
    "functionName": "GetConversationsMessageParticipantWrapupcodes",
    "signature": "GetConversationsMessageParticipantWrapupcodes(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessageParticipantWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string |  conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Get list of wrapup codes for this conversation participant\n                List<WrapupCode> result = apiInstance.GetConversationsMessageParticipantWrapupcodes(conversationId, participantId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessageParticipantWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessages": {
    "operationId": "getconversationsmessages",
    "functionName": "GetConversationsMessages",
    "signature": "GetConversationsMessages()",
    "return": "MessageConversationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get active message conversations for the logged in user\n                MessageConversationEntityListing result = apiInstance.GetConversationsMessages();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingfacebookapp": {
    "operationId": "getconversationsmessagingfacebookapp",
    "functionName": "GetConversationsMessagingFacebookApp",
    "signature": "GetConversationsMessagingFacebookApp()",
    "return": "FacebookAppCredentials",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingFacebookAppExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get Genesys Facebook App Id\n                FacebookAppCredentials result = apiInstance.GetConversationsMessagingFacebookApp();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingFacebookApp: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrations": {
    "operationId": "getconversationsmessagingintegrations",
    "functionName": "GetConversationsMessagingIntegrations",
    "signature": "GetConversationsMessagingIntegrations(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MessagingIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of Integrations\n                MessagingIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrations(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationsfacebook": {
    "operationId": "getconversationsmessagingintegrationsfacebook",
    "functionName": "GetConversationsMessagingIntegrationsFacebook",
    "signature": "GetConversationsMessagingIntegrationsFacebook(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "FacebookIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsFacebookExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of Facebook Integrations\n                FacebookIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrationsFacebook(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsFacebook: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "getconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "FacebookIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsFacebookIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get a Facebook messaging integration\n                FacebookIntegration result = apiInstance.GetConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsFacebookIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationsline": {
    "operationId": "getconversationsmessagingintegrationsline",
    "functionName": "GetConversationsMessagingIntegrationsLine",
    "signature": "GetConversationsMessagingIntegrationsLine(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LineIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsLineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of LINE messenger Integrations\n                LineIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrationsLine(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsLine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationslineintegrationid": {
    "operationId": "getconversationsmessagingintegrationslineintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsLineIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LineIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsLineIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get a LINE messenger integration\n                LineIntegration result = apiInstance.GetConversationsMessagingIntegrationsLineIntegrationId(integrationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsLineIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationsopen": {
    "operationId": "getconversationsmessagingintegrationsopen",
    "functionName": "GetConversationsMessagingIntegrationsOpen",
    "signature": "GetConversationsMessagingIntegrationsOpen(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OpenIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsOpenExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of Open messaging integrations\n                OpenIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrationsOpen(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsOpen: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "getconversationsmessagingintegrationsopenintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsOpenIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OpenIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsOpenIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get an Open messaging integration\n                OpenIntegration result = apiInstance.GetConversationsMessagingIntegrationsOpenIntegrationId(integrationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsOpenIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationstwitter": {
    "operationId": "getconversationsmessagingintegrationstwitter",
    "functionName": "GetConversationsMessagingIntegrationsTwitter",
    "signature": "GetConversationsMessagingIntegrationsTwitter(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TwitterIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsTwitterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of Twitter Integrations\n                TwitterIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrationsTwitter(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsTwitter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "getconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TwitterIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsTwitterIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get a Twitter messaging integration\n                TwitterIntegration result = apiInstance.GetConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsTwitterIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationswhatsapp": {
    "operationId": "getconversationsmessagingintegrationswhatsapp",
    "functionName": "GetConversationsMessagingIntegrationsWhatsapp",
    "signature": "GetConversationsMessagingIntegrationsWhatsapp(pageSize, pageNumber, expand, supportedContentId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WhatsAppIntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsWhatsappExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n            var supportedContentId = \"supportedContentId_example\";  // string | Filter integrations returned based on the supported content ID (optional) \n\n            try\n            { \n                // Get a list of WhatsApp Integrations\n                WhatsAppIntegrationEntityListing result = apiInstance.GetConversationsMessagingIntegrationsWhatsapp(pageSize, pageNumber, expand, supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsWhatsapp: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "getconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "GetConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "GetConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, expand)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingIntegrationsWhatsappIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get a WhatsApp messaging integration\n                WhatsAppIntegration result = apiInstance.GetConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingIntegrationsWhatsappIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingsticker": {
    "operationId": "getconversationsmessagingsticker",
    "functionName": "GetConversationsMessagingSticker",
    "signature": "GetConversationsMessagingSticker(messengerType, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "messengerType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "MessagingStickerEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingStickerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var messengerType = \"messengerType_example\";  // string | Messenger Type\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of Messaging Stickers\n                MessagingStickerEntityListing result = apiInstance.GetConversationsMessagingSticker(messengerType, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingSticker: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingsupportedcontent": {
    "operationId": "getconversationsmessagingsupportedcontent",
    "functionName": "GetConversationsMessagingSupportedcontent",
    "signature": "GetConversationsMessagingSupportedcontent(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SupportedContentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingSupportedcontentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of Supported Content profiles\n                SupportedContentListing result = apiInstance.GetConversationsMessagingSupportedcontent(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingSupportedcontent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingsupportedcontentdefault": {
    "operationId": "getconversationsmessagingsupportedcontentdefault",
    "functionName": "GetConversationsMessagingSupportedcontentDefault",
    "signature": "GetConversationsMessagingSupportedcontentDefault()",
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingSupportedcontentDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get the organization's default supported content profile that will be used as the default when creating an integration.\n                SupportedContent result = apiInstance.GetConversationsMessagingSupportedcontentDefault();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingSupportedcontentDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "getconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "GetConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "GetConversationsMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n\n            try\n            { \n                // Get a supported content profile\n                SupportedContent result = apiInstance.GetConversationsMessagingSupportedcontentSupportedContentId(supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationsmessagingthreadingtimeline": {
    "operationId": "getconversationsmessagingthreadingtimeline",
    "functionName": "GetConversationsMessagingThreadingtimeline",
    "signature": "GetConversationsMessagingThreadingtimeline()",
    "return": "ConversationThreadingWindow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationsMessagingThreadingtimelineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n\n            try\n            { \n                // Get conversation threading window timeline for each messaging type\n                ConversationThreadingWindow result = apiInstance.GetConversationsMessagingThreadingtimeline();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.GetConversationsMessagingThreadingtimeline: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationparticipant": {
    "operationId": "patchconversationparticipant",
    "functionName": "PatchConversationParticipant",
    "signature": "PatchConversationParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Update request\n\n            try\n            { \n                // Update a participant.\n                apiInstance.PatchConversationParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationparticipantattributes": {
    "operationId": "patchconversationparticipantattributes",
    "functionName": "PatchConversationParticipantAttributes",
    "signature": "PatchConversationParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new ParticipantAttributes(); // ParticipantAttributes | Participant attributes\n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsecureattributes": {
    "operationId": "patchconversationsecureattributes",
    "functionName": "PatchConversationSecureattributes",
    "signature": "PatchConversationSecureattributes(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationSecureAttributes",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationSecureattributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var body = new ConversationSecureAttributes(); // ConversationSecureAttributes | Conversation Secure Attributes\n\n            try\n            { \n                // Update the secure attributes on a conversation.\n                string result = apiInstance.PatchConversationSecureattributes(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationSecureattributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscall": {
    "operationId": "patchconversationscall",
    "functionName": "PatchConversationsCall",
    "signature": "PatchConversationsCall(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by setting its recording state, merging in other conversations to create a conference, or disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsCall(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCall: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallparticipant": {
    "operationId": "patchconversationscallparticipant",
    "functionName": "PatchConversationsCallParticipant",
    "signature": "PatchConversationsCallParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant request\n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsCallParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallparticipantattributes": {
    "operationId": "patchconversationscallparticipantattributes",
    "functionName": "PatchConversationsCallParticipantAttributes",
    "signature": "PatchConversationsCallParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes | Participant attributes\n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsCallParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallparticipantcommunication": {
    "operationId": "patchconversationscallparticipantcommunication",
    "functionName": "PatchConversationsCallParticipantCommunication",
    "signature": "PatchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsCallParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallparticipantconsult": {
    "operationId": "patchconversationscallparticipantconsult",
    "functionName": "PatchConversationsCallParticipantConsult",
    "signature": "PatchConversationsCallParticipantConsult(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransferUpdate",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallParticipantConsultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ConsultTransferUpdate(); // ConsultTransferUpdate | new speak to\n\n            try\n            { \n                // Change who can speak\n                ConsultTransferResponse result = apiInstance.PatchConversationsCallParticipantConsult(conversationId, participantId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallParticipantConsult: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallback": {
    "operationId": "patchconversationscallback",
    "functionName": "PatchConversationsCallback",
    "signature": "PatchConversationsCallback(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsCallback(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallbackparticipant": {
    "operationId": "patchconversationscallbackparticipant",
    "functionName": "PatchConversationsCallbackParticipant",
    "signature": "PatchConversationsCallbackParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallbackParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsCallbackParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallbackParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallbackparticipantattributes": {
    "operationId": "patchconversationscallbackparticipantattributes",
    "functionName": "PatchConversationsCallbackParticipantAttributes",
    "signature": "PatchConversationsCallbackParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallbackParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes | Attributes\n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsCallbackParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallbackParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallbackparticipantcommunication": {
    "operationId": "patchconversationscallbackparticipantcommunication",
    "functionName": "PatchConversationsCallbackParticipantCommunication",
    "signature": "PatchConversationsCallbackParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallbackParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsCallbackParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallbackParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscallbacks": {
    "operationId": "patchconversationscallbacks",
    "functionName": "PatchConversationsCallbacks",
    "signature": "PatchConversationsCallbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PatchCallbackRequest",
        "required": "true"
      }
    ],
    "return": "PatchCallbackResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCallbacksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new PatchCallbackRequest(); // PatchCallbackRequest | PatchCallbackRequest\n\n            try\n            { \n                // Update a scheduled callback\n                PatchCallbackResponse result = apiInstance.PatchConversationsCallbacks(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCallbacks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationschat": {
    "operationId": "patchconversationschat",
    "functionName": "PatchConversationsChat",
    "signature": "PatchConversationsChat(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsChatExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsChat(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsChat: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationschatparticipant": {
    "operationId": "patchconversationschatparticipant",
    "functionName": "PatchConversationsChatParticipant",
    "signature": "PatchConversationsChatParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsChatParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Update request\n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsChatParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsChatParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationschatparticipantattributes": {
    "operationId": "patchconversationschatparticipantattributes",
    "functionName": "PatchConversationsChatParticipantAttributes",
    "signature": "PatchConversationsChatParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsChatParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes | Participant attributes\n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsChatParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsChatParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationschatparticipantcommunication": {
    "operationId": "patchconversationschatparticipantcommunication",
    "functionName": "PatchConversationsChatParticipantCommunication",
    "signature": "PatchConversationsChatParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsChatParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsChatParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsChatParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscobrowsesession": {
    "operationId": "patchconversationscobrowsesession",
    "functionName": "PatchConversationsCobrowsesession",
    "signature": "PatchConversationsCobrowsesession(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCobrowsesessionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsCobrowsesession(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCobrowsesession: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscobrowsesessionparticipant": {
    "operationId": "patchconversationscobrowsesessionparticipant",
    "functionName": "PatchConversationsCobrowsesessionParticipant",
    "signature": "PatchConversationsCobrowsesessionParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCobrowsesessionParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest |  (optional) \n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsCobrowsesessionParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCobrowsesessionParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscobrowsesessionparticipantattributes": {
    "operationId": "patchconversationscobrowsesessionparticipantattributes",
    "functionName": "PatchConversationsCobrowsesessionParticipantAttributes",
    "signature": "PatchConversationsCobrowsesessionParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCobrowsesessionParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes |  (optional) \n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsCobrowsesessionParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCobrowsesessionParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationscobrowsesessionparticipantcommunication": {
    "operationId": "patchconversationscobrowsesessionparticipantcommunication",
    "functionName": "PatchConversationsCobrowsesessionParticipantCommunication",
    "signature": "PatchConversationsCobrowsesessionParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsCobrowsesessionParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsCobrowsesessionParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsCobrowsesessionParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsemail": {
    "operationId": "patchconversationsemail",
    "functionName": "PatchConversationsEmail",
    "signature": "PatchConversationsEmail(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsEmailExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsEmail(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsEmail: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsemailparticipant": {
    "operationId": "patchconversationsemailparticipant",
    "functionName": "PatchConversationsEmailParticipant",
    "signature": "PatchConversationsEmailParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsEmailParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Update request\n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsEmailParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsEmailParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsemailparticipantattributes": {
    "operationId": "patchconversationsemailparticipantattributes",
    "functionName": "PatchConversationsEmailParticipantAttributes",
    "signature": "PatchConversationsEmailParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsEmailParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes | Participant attributes\n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsEmailParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsEmailParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsemailparticipantcommunication": {
    "operationId": "patchconversationsemailparticipantcommunication",
    "functionName": "PatchConversationsEmailParticipantCommunication",
    "signature": "PatchConversationsEmailParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsEmailParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsEmailParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsEmailParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessage": {
    "operationId": "patchconversationsmessage",
    "functionName": "PatchConversationsMessage",
    "signature": "PatchConversationsMessage(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Update a conversation by disconnecting all of the participants\n                Conversation result = apiInstance.PatchConversationsMessage(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessageparticipant": {
    "operationId": "patchconversationsmessageparticipant",
    "functionName": "PatchConversationsMessageParticipant",
    "signature": "PatchConversationsMessageParticipant(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessageParticipantExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string |  conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest |  (optional) \n\n            try\n            { \n                // Update conversation participant\n                apiInstance.PatchConversationsMessageParticipant(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessageParticipant: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessageparticipantattributes": {
    "operationId": "patchconversationsmessageparticipantattributes",
    "functionName": "PatchConversationsMessageParticipantAttributes",
    "signature": "PatchConversationsMessageParticipantAttributes(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ParticipantAttributes",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessageParticipantAttributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string |  conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ParticipantAttributes(); // ParticipantAttributes |  (optional) \n\n            try\n            { \n                // Update the attributes on a conversation participant.\n                apiInstance.PatchConversationsMessageParticipantAttributes(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessageParticipantAttributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessageparticipantcommunication": {
    "operationId": "patchconversationsmessageparticipantcommunication",
    "functionName": "PatchConversationsMessageParticipantCommunication",
    "signature": "PatchConversationsMessageParticipantCommunication(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MediaParticipantRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessageParticipantCommunicationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string |  conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MediaParticipantRequest(); // MediaParticipantRequest | Participant\n\n            try\n            { \n                // Update conversation participant's communication by disconnecting it.\n                Object result = apiInstance.PatchConversationsMessageParticipantCommunication(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessageParticipantCommunication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessagingintegrationsfacebookintegrationid": {
    "operationId": "patchconversationsmessagingintegrationsfacebookintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsFacebookIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FacebookIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "FacebookIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessagingIntegrationsFacebookIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var body = new FacebookIntegrationUpdateRequest(); // FacebookIntegrationUpdateRequest | FacebookIntegrationUpdateRequest\n\n            try\n            { \n                // Update Facebook messaging integration\n                FacebookIntegration result = apiInstance.PatchConversationsMessagingIntegrationsFacebookIntegrationId(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessagingIntegrationsFacebookIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessagingintegrationsopenintegrationid": {
    "operationId": "patchconversationsmessagingintegrationsopenintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsOpenIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsOpenIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OpenIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "OpenIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessagingIntegrationsOpenIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var body = new OpenIntegrationUpdateRequest(); // OpenIntegrationUpdateRequest | OpenIntegrationUpdateRequest\n\n            try\n            { \n                // Update an Open messaging integration\n                OpenIntegration result = apiInstance.PatchConversationsMessagingIntegrationsOpenIntegrationId(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessagingIntegrationsOpenIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessagingintegrationstwitterintegrationid": {
    "operationId": "patchconversationsmessagingintegrationstwitterintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsTwitterIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TwitterIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "TwitterIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessagingIntegrationsTwitterIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var body = new TwitterIntegrationRequest(); // TwitterIntegrationRequest | TwitterIntegrationRequest\n\n            try\n            { \n                // Update Twitter messaging integration\n                TwitterIntegration result = apiInstance.PatchConversationsMessagingIntegrationsTwitterIntegrationId(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessagingIntegrationsTwitterIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessagingintegrationswhatsappintegrationid": {
    "operationId": "patchconversationsmessagingintegrationswhatsappintegrationid",
    "functionName": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId",
    "signature": "PatchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WhatsAppIntegrationUpdateRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessagingIntegrationsWhatsappIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var body = new WhatsAppIntegrationUpdateRequest(); // WhatsAppIntegrationUpdateRequest | WhatsAppIntegrationUpdateRequest\n\n            try\n            { \n                // Update or activate a WhatsApp messaging integration\n                WhatsAppIntegration result = apiInstance.PatchConversationsMessagingIntegrationsWhatsappIntegrationId(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessagingIntegrationsWhatsappIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchconversationsmessagingsupportedcontentsupportedcontentid": {
    "operationId": "patchconversationsmessagingsupportedcontentsupportedcontentid",
    "functionName": "PatchConversationsMessagingSupportedcontentSupportedContentId",
    "signature": "PatchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId, body)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchConversationsMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n            var body = new SupportedContent(); // SupportedContent | SupportedContent\n\n            try\n            { \n                // Update a supported content profile\n                SupportedContent result = apiInstance.PatchConversationsMessagingSupportedcontentSupportedContentId(supportedContentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PatchConversationsMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationassign": {
    "operationId": "postconversationassign",
    "functionName": "PostConversationAssign",
    "signature": "PostConversationAssign(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationUser",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationAssignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var body = new ConversationUser(); // ConversationUser | Targeted user\n\n            try\n            { \n                // Attempts to manually assign a specified conversation to a specified user.  Ignores bullseye ring, PAR score, skills, and languages.\n                string result = apiInstance.PostConversationAssign(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationAssign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationdisconnect": {
    "operationId": "postconversationdisconnect",
    "functionName": "PostConversationDisconnect",
    "signature": "PostConversationDisconnect(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationDisconnectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n\n            try\n            { \n                // Performs a full conversation teardown. Issues disconnect requests for any connected media. Applies a system wrap-up code to any participants that are pending wrap-up. This is not intended to be the normal way of ending interactions but is available in the event of problems with the application to allow a resynchronization of state across all components. It is recommended that users submit a support case if they are relying on this endpoint systematically as there is likely something that needs investigation.\n                string result = apiInstance.PostConversationDisconnect(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationDisconnect: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationparticipantcallbacks": {
    "operationId": "postconversationparticipantcallbacks",
    "functionName": "PostConversationParticipantCallbacks",
    "signature": "PostConversationParticipantCallbacks(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateCallbackOnConversationCommand",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationParticipantCallbacksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new CreateCallbackOnConversationCommand(); // CreateCallbackOnConversationCommand |  (optional) \n\n            try\n            { \n                // Create a new callback for the specified participant on the conversation.\n                apiInstance.PostConversationParticipantCallbacks(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationParticipantCallbacks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationparticipantdigits": {
    "operationId": "postconversationparticipantdigits",
    "functionName": "PostConversationParticipantDigits",
    "signature": "PostConversationParticipantDigits(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Digits",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationParticipantDigitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new Digits(); // Digits | Digits (optional) \n\n            try\n            { \n                // Sends DTMF to the participant\n                apiInstance.PostConversationParticipantDigits(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationParticipantDigits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationparticipantreplace": {
    "operationId": "postconversationparticipantreplace",
    "functionName": "PostConversationParticipantReplace",
    "signature": "PostConversationParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationparticipantsecureivrsessions": {
    "operationId": "postconversationparticipantsecureivrsessions",
    "functionName": "PostConversationParticipantSecureivrsessions",
    "signature": "PostConversationParticipantSecureivrsessions(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateSecureSession",
        "required": "false"
      }
    ],
    "return": "SecureSession",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationParticipantSecureivrsessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n            var body = new CreateSecureSession(); // CreateSecureSession |  (optional) \n\n            try\n            { \n                // Create secure IVR session. Only a participant in the conversation can invoke a secure IVR.\n                SecureSession result = apiInstance.PostConversationParticipantSecureivrsessions(conversationId, participantId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationParticipantSecureivrsessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscall": {
    "operationId": "postconversationscall",
    "functionName": "PostConversationsCall",
    "signature": "PostConversationsCall(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallCommand",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new CallCommand(); // CallCommand | Conversation\n\n            try\n            { \n                // Place a new call as part of a callback conversation.\n                Conversation result = apiInstance.PostConversationsCall(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCall: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallparticipantcoach": {
    "operationId": "postconversationscallparticipantcoach",
    "functionName": "PostConversationsCallParticipantCoach",
    "signature": "PostConversationsCallParticipantCoach(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallParticipantCoachExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Listen in on the conversation from the point of view of a given participant while speaking to just the given participant.\n                apiInstance.PostConversationsCallParticipantCoach(conversationId, participantId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallParticipantCoach: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallparticipantconsult": {
    "operationId": "postconversationscallparticipantconsult",
    "functionName": "PostConversationsCallParticipantConsult",
    "signature": "PostConversationsCallParticipantConsult(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConsultTransfer",
        "required": "true"
      }
    ],
    "return": "ConsultTransferResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallParticipantConsultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new ConsultTransfer(); // ConsultTransfer | Destination address & initial speak to\n\n            try\n            { \n                // Initiate and update consult transfer\n                ConsultTransferResponse result = apiInstance.PostConversationsCallParticipantConsult(conversationId, participantId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallParticipantConsult: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallparticipantmonitor": {
    "operationId": "postconversationscallparticipantmonitor",
    "functionName": "PostConversationsCallParticipantMonitor",
    "signature": "PostConversationsCallParticipantMonitor(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallParticipantMonitorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n\n            try\n            { \n                // Listen in on the conversation from the point of view of a given participant.\n                apiInstance.PostConversationsCallParticipantMonitor(conversationId, participantId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallParticipantMonitor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallparticipantreplace": {
    "operationId": "postconversationscallparticipantreplace",
    "functionName": "PostConversationsCallParticipantReplace",
    "signature": "PostConversationsCallParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsCallParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallparticipants": {
    "operationId": "postconversationscallparticipants",
    "functionName": "PostConversationsCallParticipants",
    "signature": "PostConversationsCallParticipants(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Conversation",
        "required": "true"
      }
    ],
    "return": "Conversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallParticipantsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Conversation(); // Conversation | Conversation\n\n            try\n            { \n                // Add participants to a conversation\n                Conversation result = apiInstance.PostConversationsCallParticipants(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallParticipants: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallbackparticipantreplace": {
    "operationId": "postconversationscallbackparticipantreplace",
    "functionName": "PostConversationsCallbackParticipantReplace",
    "signature": "PostConversationsCallbackParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallbackParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsCallbackParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallbackParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallbacks": {
    "operationId": "postconversationscallbacks",
    "functionName": "PostConversationsCallbacks",
    "signature": "PostConversationsCallbacks(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCallbackCommand",
        "required": "true"
      }
    ],
    "return": "CreateCallbackResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallbacksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new CreateCallbackCommand(); // CreateCallbackCommand | Callback\n\n            try\n            { \n                // Create a Callback\n                CreateCallbackResponse result = apiInstance.PostConversationsCallbacks(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallbacks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallbacksbulkdisconnect": {
    "operationId": "postconversationscallbacksbulkdisconnect",
    "functionName": "PostConversationsCallbacksBulkDisconnect",
    "signature": "PostConversationsCallbacksBulkDisconnect(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkCallbackDisconnectRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallbacksBulkDisconnectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new BulkCallbackDisconnectRequest(); // BulkCallbackDisconnectRequest | BulkCallbackDisconnectRequest\n\n            try\n            { \n                // Disconnect multiple scheduled callbacks\n                apiInstance.PostConversationsCallbacksBulkDisconnect(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallbacksBulkDisconnect: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscallbacksbulkupdate": {
    "operationId": "postconversationscallbacksbulkupdate",
    "functionName": "PostConversationsCallbacksBulkUpdate",
    "signature": "PostConversationsCallbacksBulkUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkCallbackPatchRequest",
        "required": "true"
      }
    ],
    "return": "BulkCallbackPatchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallbacksBulkUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new BulkCallbackPatchRequest(); // BulkCallbackPatchRequest | BulkCallbackPatchRequest\n\n            try\n            { \n                // Update multiple scheduled callbacks\n                BulkCallbackPatchResponse result = apiInstance.PostConversationsCallbacksBulkUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCallbacksBulkUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscalls": {
    "operationId": "postconversationscalls",
    "functionName": "PostConversationsCalls",
    "signature": "PostConversationsCalls(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateCallRequest",
        "required": "true"
      }
    ],
    "return": "CreateCallResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCallsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new CreateCallRequest(); // CreateCallRequest | Call request\n\n            try\n            { \n                // Create a call conversation\n                CreateCallResponse result = apiInstance.PostConversationsCalls(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCalls: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationschatcommunicationmessages": {
    "operationId": "postconversationschatcommunicationmessages",
    "functionName": "PostConversationsChatCommunicationMessages",
    "signature": "PostConversationsChatCommunicationMessages(conversationId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateWebChatMessageRequest",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsChatCommunicationMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new CreateWebChatMessageRequest(); // CreateWebChatMessageRequest | Message\n\n            try\n            { \n                // Send a message on behalf of a communication in a chat conversation.\n                WebChatMessage result = apiInstance.PostConversationsChatCommunicationMessages(conversationId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsChatCommunicationMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationschatcommunicationtyping": {
    "operationId": "postconversationschatcommunicationtyping",
    "functionName": "PostConversationsChatCommunicationTyping",
    "signature": "PostConversationsChatCommunicationTyping(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatTyping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsChatCommunicationTypingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n\n            try\n            { \n                // Send a typing-indicator on behalf of a communication in a chat conversation.\n                WebChatTyping result = apiInstance.PostConversationsChatCommunicationTyping(conversationId, communicationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsChatCommunicationTyping: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationschatparticipantreplace": {
    "operationId": "postconversationschatparticipantreplace",
    "functionName": "PostConversationsChatParticipantReplace",
    "signature": "PostConversationsChatParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsChatParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsChatParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsChatParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationschats": {
    "operationId": "postconversationschats",
    "functionName": "PostConversationsChats",
    "signature": "PostConversationsChats(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateWebChatRequest",
        "required": "true"
      }
    ],
    "return": "ChatConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsChatsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new CreateWebChatRequest(); // CreateWebChatRequest | Create web chat request\n\n            try\n            { \n                // Create a web chat conversation\n                ChatConversation result = apiInstance.PostConversationsChats(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsChats: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationscobrowsesessionparticipantreplace": {
    "operationId": "postconversationscobrowsesessionparticipantreplace",
    "functionName": "PostConversationsCobrowsesessionParticipantReplace",
    "signature": "PostConversationsCobrowsesessionParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsCobrowsesessionParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest |  (optional) \n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsCobrowsesessionParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsCobrowsesessionParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemailinboundmessages": {
    "operationId": "postconversationsemailinboundmessages",
    "functionName": "PostConversationsEmailInboundmessages",
    "signature": "PostConversationsEmailInboundmessages(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundMessageRequest",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailInboundmessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new InboundMessageRequest(); // InboundMessageRequest | Send external email reply\n\n            try\n            { \n                // Send an email to an external conversation. An external conversation is one where the provider is not PureCloud based. This endpoint allows the sender of the external email to reply or send a new message to the existing conversation. The new message will be treated as part of the existing conversation and chained to it.\n                EmailConversation result = apiInstance.PostConversationsEmailInboundmessages(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmailInboundmessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemailmessages": {
    "operationId": "postconversationsemailmessages",
    "functionName": "PostConversationsEmailMessages",
    "signature": "PostConversationsEmailMessages(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailMessage",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new EmailMessage(); // EmailMessage | Reply\n\n            try\n            { \n                // Send an email reply\n                EmailMessage result = apiInstance.PostConversationsEmailMessages(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmailMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemailmessagesdraftattachmentscopy": {
    "operationId": "postconversationsemailmessagesdraftattachmentscopy",
    "functionName": "PostConversationsEmailMessagesDraftAttachmentsCopy",
    "signature": "PostConversationsEmailMessagesDraftAttachmentsCopy(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyAttachmentsRequest",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailMessagesDraftAttachmentsCopyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new CopyAttachmentsRequest(); // CopyAttachmentsRequest | Copy Attachment Request\n\n            try\n            { \n                // Copy attachments from an email message to the current draft.\n                EmailMessage result = apiInstance.PostConversationsEmailMessagesDraftAttachmentsCopy(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmailMessagesDraftAttachmentsCopy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemailparticipantreplace": {
    "operationId": "postconversationsemailparticipantreplace",
    "functionName": "PostConversationsEmailParticipantReplace",
    "signature": "PostConversationsEmailParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsEmailParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmailParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemails": {
    "operationId": "postconversationsemails",
    "functionName": "PostConversationsEmails",
    "signature": "PostConversationsEmails(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateEmailRequest",
        "required": "true"
      }
    ],
    "return": "EmailConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new CreateEmailRequest(); // CreateEmailRequest | Create email request\n\n            try\n            { \n                // Create an email conversation\n                EmailConversation result = apiInstance.PostConversationsEmails(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsemailsagentless": {
    "operationId": "postconversationsemailsagentless",
    "functionName": "PostConversationsEmailsAgentless",
    "signature": "PostConversationsEmailsAgentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AgentlessEmailSendRequestDto",
        "required": "true"
      }
    ],
    "return": "AgentlessEmailSendResponseDto",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsEmailsAgentlessExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new AgentlessEmailSendRequestDto(); // AgentlessEmailSendRequestDto | Create agentless email request\n\n            try\n            { \n                // Create an email conversation, per API\n                AgentlessEmailSendResponseDto result = apiInstance.PostConversationsEmailsAgentless(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsEmailsAgentless: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsfaxes": {
    "operationId": "postconversationsfaxes",
    "functionName": "PostConversationsFaxes",
    "signature": "PostConversationsFaxes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FaxSendRequest",
        "required": "true"
      }
    ],
    "return": "FaxSendResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsFaxesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new FaxSendRequest(); // FaxSendRequest | Fax\n\n            try\n            { \n                // Create Fax Conversation\n                FaxSendResponse result = apiInstance.PostConversationsFaxes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsFaxes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationskeyconfigurations": {
    "operationId": "postconversationskeyconfigurations",
    "functionName": "PostConversationsKeyconfigurations",
    "signature": "PostConversationsKeyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsKeyconfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new ConversationEncryptionConfiguration(); // ConversationEncryptionConfiguration | Encryption Configuration\n\n            try\n            { \n                // Setup configurations for encryption key creation\n                ConversationEncryptionConfiguration result = apiInstance.PostConversationsKeyconfigurations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsKeyconfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationskeyconfigurationsvalidate": {
    "operationId": "postconversationskeyconfigurationsvalidate",
    "functionName": "PostConversationsKeyconfigurationsValidate",
    "signature": "PostConversationsKeyconfigurationsValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsKeyconfigurationsValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new ConversationEncryptionConfiguration(); // ConversationEncryptionConfiguration | Encryption Configuration\n\n            try\n            { \n                // Validate encryption key configurations without saving it\n                ConversationEncryptionConfiguration result = apiInstance.PostConversationsKeyconfigurationsValidate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsKeyconfigurationsValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagecommunicationmessages": {
    "operationId": "postconversationsmessagecommunicationmessages",
    "functionName": "PostConversationsMessageCommunicationMessages",
    "signature": "PostConversationsMessageCommunicationMessages(conversationId, communicationId, body, useNormalizedMessage)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AdditionalMessage",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "MessageData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessageCommunicationMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new AdditionalMessage(); // AdditionalMessage | Message\n            var useNormalizedMessage = true;  // bool? | If true, response removes deprecated fields (textBody, media, stickers) (optional)  (default to false)\n\n            try\n            { \n                // Send message\n                MessageData result = apiInstance.PostConversationsMessageCommunicationMessages(conversationId, communicationId, body, useNormalizedMessage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessageCommunicationMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagecommunicationmessagesmedia": {
    "operationId": "postconversationsmessagecommunicationmessagesmedia",
    "functionName": "PostConversationsMessageCommunicationMessagesMedia",
    "signature": "PostConversationsMessageCommunicationMessagesMedia(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessageMediaData",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessageCommunicationMessagesMediaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n\n            try\n            { \n                // Create media\n                MessageMediaData result = apiInstance.PostConversationsMessageCommunicationMessagesMedia(conversationId, communicationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessageCommunicationMessagesMedia: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagecommunicationtyping": {
    "operationId": "postconversationsmessagecommunicationtyping",
    "functionName": "PostConversationsMessageCommunicationTyping",
    "signature": "PostConversationsMessageCommunicationTyping(conversationId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessageTypingEventRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessageCommunicationTypingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new MessageTypingEventRequest(); // MessageTypingEventRequest | MessageTypingEvent\n\n            try\n            { \n                // Send message typing event\n                apiInstance.PostConversationsMessageCommunicationTyping(conversationId, communicationId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessageCommunicationTyping: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagemessagesbulk": {
    "operationId": "postconversationsmessagemessagesbulk",
    "functionName": "PostConversationsMessageMessagesBulk",
    "signature": "PostConversationsMessageMessagesBulk(conversationId, useNormalizedMessage, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "useNormalizedMessage",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "TextMessageListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessageMessagesBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | \n            var useNormalizedMessage = true;  // bool? | If true, response removes deprecated fields (textBody, media, stickers) (optional)  (default to false)\n            var body = new List<string>(); // List<string> | messageIds (optional) \n\n            try\n            { \n                // Get messages in batch\n                TextMessageListing result = apiInstance.PostConversationsMessageMessagesBulk(conversationId, useNormalizedMessage, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessageMessagesBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessageparticipantreplace": {
    "operationId": "postconversationsmessageparticipantreplace",
    "functionName": "PostConversationsMessageParticipantReplace",
    "signature": "PostConversationsMessageParticipantReplace(conversationId, participantId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TransferRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessageParticipantReplaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var body = new TransferRequest(); // TransferRequest | Transfer request\n\n            try\n            { \n                // Replace this participant with the specified user and/or address\n                apiInstance.PostConversationsMessageParticipantReplace(conversationId, participantId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessageParticipantReplace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessages": {
    "operationId": "postconversationsmessages",
    "functionName": "PostConversationsMessages",
    "signature": "PostConversationsMessages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateOutboundMessagingConversationRequest",
        "required": "true"
      }
    ],
    "return": "MessageConversation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new CreateOutboundMessagingConversationRequest(); // CreateOutboundMessagingConversationRequest | Create outbound messaging conversation\n\n            try\n            { \n                // Create an outbound messaging conversation.\n                MessageConversation result = apiInstance.PostConversationsMessages(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagesagentless": {
    "operationId": "postconversationsmessagesagentless",
    "functionName": "PostConversationsMessagesAgentless",
    "signature": "PostConversationsMessagesAgentless(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SendAgentlessOutboundMessageRequest",
        "required": "true"
      }
    ],
    "return": "SendAgentlessOutboundMessageResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagesAgentlessExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new SendAgentlessOutboundMessageRequest(); // SendAgentlessOutboundMessageRequest | Create agentless outbound messaging request\n\n            try\n            { \n                // Send an agentless outbound message\n                SendAgentlessOutboundMessageResponse result = apiInstance.PostConversationsMessagesAgentless(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagesAgentless: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagesinboundopen": {
    "operationId": "postconversationsmessagesinboundopen",
    "functionName": "PostConversationsMessagesInboundOpen",
    "signature": "PostConversationsMessagesInboundOpen(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OpenNormalizedMessage",
        "required": "true"
      }
    ],
    "return": "OpenNormalizedMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagesInboundOpenExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new OpenNormalizedMessage(); // OpenNormalizedMessage | NormalizedMessage\n\n            try\n            { \n                // Send an inbound Open Message\n                OpenNormalizedMessage result = apiInstance.PostConversationsMessagesInboundOpen(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagesInboundOpen: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingintegrationsfacebook": {
    "operationId": "postconversationsmessagingintegrationsfacebook",
    "functionName": "PostConversationsMessagingIntegrationsFacebook",
    "signature": "PostConversationsMessagingIntegrationsFacebook(body)",
    "parameters": [
      {
        "name": "body",
        "type": "FacebookIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "FacebookIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingIntegrationsFacebookExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new FacebookIntegrationRequest(); // FacebookIntegrationRequest | FacebookIntegrationRequest\n\n            try\n            { \n                // Create a Facebook Integration\n                FacebookIntegration result = apiInstance.PostConversationsMessagingIntegrationsFacebook(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingIntegrationsFacebook: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingintegrationsline": {
    "operationId": "postconversationsmessagingintegrationsline",
    "functionName": "PostConversationsMessagingIntegrationsLine",
    "signature": "PostConversationsMessagingIntegrationsLine(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LineIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "LineIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingIntegrationsLineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new LineIntegrationRequest(); // LineIntegrationRequest | LineIntegrationRequest\n\n            try\n            { \n                // Create a LINE messenger Integration\n                LineIntegration result = apiInstance.PostConversationsMessagingIntegrationsLine(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingIntegrationsLine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingintegrationsopen": {
    "operationId": "postconversationsmessagingintegrationsopen",
    "functionName": "PostConversationsMessagingIntegrationsOpen",
    "signature": "PostConversationsMessagingIntegrationsOpen(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OpenIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "OpenIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingIntegrationsOpenExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new OpenIntegrationRequest(); // OpenIntegrationRequest | OpenIntegrationRequest\n\n            try\n            { \n                // Create an Open messaging integration\n                OpenIntegration result = apiInstance.PostConversationsMessagingIntegrationsOpen(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingIntegrationsOpen: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingintegrationstwitter": {
    "operationId": "postconversationsmessagingintegrationstwitter",
    "functionName": "PostConversationsMessagingIntegrationsTwitter",
    "signature": "PostConversationsMessagingIntegrationsTwitter(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TwitterIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "TwitterIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingIntegrationsTwitterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new TwitterIntegrationRequest(); // TwitterIntegrationRequest | TwitterIntegrationRequest\n\n            try\n            { \n                // Create a Twitter Integration\n                TwitterIntegration result = apiInstance.PostConversationsMessagingIntegrationsTwitter(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingIntegrationsTwitter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingintegrationswhatsapp": {
    "operationId": "postconversationsmessagingintegrationswhatsapp",
    "functionName": "PostConversationsMessagingIntegrationsWhatsapp",
    "signature": "PostConversationsMessagingIntegrationsWhatsapp(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WhatsAppIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "WhatsAppIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingIntegrationsWhatsappExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new WhatsAppIntegrationRequest(); // WhatsAppIntegrationRequest | WhatsAppIntegrationRequest\n\n            try\n            { \n                // Create a WhatsApp Integration\n                WhatsAppIntegration result = apiInstance.PostConversationsMessagingIntegrationsWhatsapp(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingIntegrationsWhatsapp: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationsmessagingsupportedcontent": {
    "operationId": "postconversationsmessagingsupportedcontent",
    "functionName": "PostConversationsMessagingSupportedcontent",
    "signature": "PostConversationsMessagingSupportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationsMessagingSupportedcontentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new SupportedContent(); // SupportedContent | SupportedContent\n\n            try\n            { \n                // Create a Supported Content profile\n                SupportedContent result = apiInstance.PostConversationsMessagingSupportedcontent(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PostConversationsMessagingSupportedcontent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationparticipantflaggedreason": {
    "operationId": "putconversationparticipantflaggedreason",
    "functionName": "PutConversationParticipantFlaggedreason",
    "signature": "PutConversationParticipantFlaggedreason(conversationId, participantId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationParticipantFlaggedreasonExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var participantId = \"participantId_example\";  // string | participant ID\n\n            try\n            { \n                // Set flagged reason on conversation participant to indicate bad conversation quality.\n                apiInstance.PutConversationParticipantFlaggedreason(conversationId, participantId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationParticipantFlaggedreason: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsecureattributes": {
    "operationId": "putconversationsecureattributes",
    "functionName": "PutConversationSecureattributes",
    "signature": "PutConversationSecureattributes(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationSecureAttributes",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationSecureattributesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var body = new ConversationSecureAttributes(); // ConversationSecureAttributes | Conversation Secure Attributes\n\n            try\n            { \n                // Set the secure attributes on a conversation.\n                string result = apiInstance.PutConversationSecureattributes(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationSecureattributes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationtags": {
    "operationId": "putconversationtags",
    "functionName": "PutConversationTags",
    "signature": "PutConversationTags(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationTagsUpdate",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationTagsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversation ID\n            var body = new ConversationTagsUpdate(); // ConversationTagsUpdate | Conversation Tags\n\n            try\n            { \n                // Update the tags on a conversation.\n                string result = apiInstance.PutConversationTags(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationTags: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationscallparticipantcommunicationuuidata": {
    "operationId": "putconversationscallparticipantcommunicationuuidata",
    "functionName": "PutConversationsCallParticipantCommunicationUuidata",
    "signature": "PutConversationsCallParticipantCommunicationUuidata(conversationId, participantId, communicationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "participantId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetUuiDataRequest",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsCallParticipantCommunicationUuidataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var participantId = \"participantId_example\";  // string | participantId\n            var communicationId = \"communicationId_example\";  // string | communicationId\n            var body = new SetUuiDataRequest(); // SetUuiDataRequest | UUIData Request\n\n            try\n            { \n                // Set uuiData to be sent on future commands.\n                Object result = apiInstance.PutConversationsCallParticipantCommunicationUuidata(conversationId, participantId, communicationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsCallParticipantCommunicationUuidata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationscallrecordingstate": {
    "operationId": "putconversationscallrecordingstate",
    "functionName": "PutConversationsCallRecordingstate",
    "signature": "PutConversationsCallRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsCallRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsCallRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsCallRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationscallbackrecordingstate": {
    "operationId": "putconversationscallbackrecordingstate",
    "functionName": "PutConversationsCallbackRecordingstate",
    "signature": "PutConversationsCallbackRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsCallbackRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsCallbackRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsCallbackRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationschatrecordingstate": {
    "operationId": "putconversationschatrecordingstate",
    "functionName": "PutConversationsChatRecordingstate",
    "signature": "PutConversationsChatRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsChatRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsChatRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsChatRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationscobrowsesessionrecordingstate": {
    "operationId": "putconversationscobrowsesessionrecordingstate",
    "functionName": "PutConversationsCobrowsesessionRecordingstate",
    "signature": "PutConversationsCobrowsesessionRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsCobrowsesessionRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsCobrowsesessionRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsCobrowsesessionRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsemailmessagesdraft": {
    "operationId": "putconversationsemailmessagesdraft",
    "functionName": "PutConversationsEmailMessagesDraft",
    "signature": "PutConversationsEmailMessagesDraft(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailMessage",
        "required": "true"
      }
    ],
    "return": "EmailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsEmailMessagesDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new EmailMessage(); // EmailMessage | Draft\n\n            try\n            { \n                // Update conversation draft reply\n                EmailMessage result = apiInstance.PutConversationsEmailMessagesDraft(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsEmailMessagesDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsemailrecordingstate": {
    "operationId": "putconversationsemailrecordingstate",
    "functionName": "PutConversationsEmailRecordingstate",
    "signature": "PutConversationsEmailRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsEmailRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsEmailRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsEmailRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationskeyconfiguration": {
    "operationId": "putconversationskeyconfiguration",
    "functionName": "PutConversationsKeyconfiguration",
    "signature": "PutConversationsKeyconfiguration(keyconfigurationsId, body)",
    "parameters": [
      {
        "name": "keyconfigurationsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "ConversationEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsKeyconfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var keyconfigurationsId = \"keyconfigurationsId_example\";  // string | Key Configurations Id\n            var body = new ConversationEncryptionConfiguration(); // ConversationEncryptionConfiguration | Encryption key configuration metadata\n\n            try\n            { \n                // Update the encryption key configurations\n                ConversationEncryptionConfiguration result = apiInstance.PutConversationsKeyconfiguration(keyconfigurationsId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsKeyconfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsmessagerecordingstate": {
    "operationId": "putconversationsmessagerecordingstate",
    "functionName": "PutConversationsMessageRecordingstate",
    "signature": "PutConversationsMessageRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsMessageRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsMessageRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsMessageRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsmessagingintegrationslineintegrationid": {
    "operationId": "putconversationsmessagingintegrationslineintegrationid",
    "functionName": "PutConversationsMessagingIntegrationsLineIntegrationId",
    "signature": "PutConversationsMessagingIntegrationsLineIntegrationId(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LineIntegrationRequest",
        "required": "true"
      }
    ],
    "return": "LineIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsMessagingIntegrationsLineIntegrationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration ID\n            var body = new LineIntegrationRequest(); // LineIntegrationRequest | LineIntegrationRequest\n\n            try\n            { \n                // Update a LINE messenger integration\n                LineIntegration result = apiInstance.PutConversationsMessagingIntegrationsLineIntegrationId(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsMessagingIntegrationsLineIntegrationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsmessagingsupportedcontentdefault": {
    "operationId": "putconversationsmessagingsupportedcontentdefault",
    "functionName": "PutConversationsMessagingSupportedcontentDefault",
    "signature": "PutConversationsMessagingSupportedcontentDefault(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContentReference",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsMessagingSupportedcontentDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new SupportedContentReference(); // SupportedContentReference | SupportedContent\n\n            try\n            { \n                // Set the organization's default supported content profile that may be assigned to an integration when it is created.\n                SupportedContent result = apiInstance.PutConversationsMessagingSupportedcontentDefault(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsMessagingSupportedcontentDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsmessagingthreadingtimeline": {
    "operationId": "putconversationsmessagingthreadingtimeline",
    "functionName": "PutConversationsMessagingThreadingtimeline",
    "signature": "PutConversationsMessagingThreadingtimeline(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationThreadingWindow",
        "required": "true"
      }
    ],
    "return": "ConversationThreadingWindow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsMessagingThreadingtimelineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var body = new ConversationThreadingWindow(); // ConversationThreadingWindow | ConversationThreadingWindowRequest\n\n            try\n            { \n                // Update conversation threading window timeline for each messaging type\n                ConversationThreadingWindow result = apiInstance.PutConversationsMessagingThreadingtimeline(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsMessagingThreadingtimeline: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsscreensharerecordingstate": {
    "operationId": "putconversationsscreensharerecordingstate",
    "functionName": "PutConversationsScreenshareRecordingstate",
    "signature": "PutConversationsScreenshareRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsScreenshareRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsScreenshareRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsScreenshareRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationssocialrecordingstate": {
    "operationId": "putconversationssocialrecordingstate",
    "functionName": "PutConversationsSocialRecordingstate",
    "signature": "PutConversationsSocialRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsSocialRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsSocialRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsSocialRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationsvideorecordingstate": {
    "operationId": "putconversationsvideorecordingstate",
    "functionName": "PutConversationsVideoRecordingstate",
    "signature": "PutConversationsVideoRecordingstate(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetRecordingState",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationsVideoRecordingstateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ConversationsApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new SetRecordingState(); // SetRecordingState | SetRecordingState\n\n            try\n            { \n                // Update a conversation by setting its recording state\n                string result = apiInstance.PutConversationsVideoRecordingstate(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Conversations.PutConversationsVideoRecordingstate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdataextensionscoretype": {
    "operationId": "getdataextensionscoretype",
    "functionName": "GetDataextensionsCoretype",
    "signature": "GetDataextensionsCoretype(coretypeName)",
    "parameters": [
      {
        "name": "coretypeName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Coretype",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDataextensionsCoretypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new DataExtensionsApi();\n            var coretypeName = \"coretypeName_example\";  // string | The core type's name\n\n            try\n            { \n                // Get a specific named core type.\n                Coretype result = apiInstance.GetDataextensionsCoretype(coretypeName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling DataExtensions.GetDataextensionsCoretype: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdataextensionscoretypes": {
    "operationId": "getdataextensionscoretypes",
    "functionName": "GetDataextensionsCoretypes",
    "signature": "GetDataextensionsCoretypes()",
    "return": "CoretypeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDataextensionsCoretypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new DataExtensionsApi();\n\n            try\n            { \n                // Get the core types from which all schemas are built.\n                CoretypeListing result = apiInstance.GetDataextensionsCoretypes();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling DataExtensions.GetDataextensionsCoretypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdataextensionslimits": {
    "operationId": "getdataextensionslimits",
    "functionName": "GetDataextensionsLimits",
    "signature": "GetDataextensionsLimits()",
    "return": "SchemaQuantityLimits",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDataextensionsLimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new DataExtensionsApi();\n\n            try\n            { \n                // Get quantitative limits on schemas\n                SchemaQuantityLimits result = apiInstance.GetDataextensionsLimits();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling DataExtensions.GetDataextensionsLimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdownload": {
    "operationId": "getdownload",
    "functionName": "GetDownload",
    "signature": "GetDownload(downloadId, contentDisposition, issueRedirect, redirectToAuth)",
    "parameters": [
      {
        "name": "downloadId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contentDisposition",
        "type": "string",
        "required": "false"
      },
      {
        "name": "issueRedirect",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "redirectToAuth",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "UrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDownloadExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new DownloadsApi();\n            var downloadId = \"downloadId_example\";  // string | Download ID\n            var contentDisposition = \"contentDisposition_example\";  // string |  (optional) \n            var issueRedirect = true;  // bool? |  (optional)  (default to true)\n            var redirectToAuth = true;  // bool? |  (optional)  (default to true)\n\n            try\n            { \n                // Issues a redirect to a signed secure download URL for specified download\n                UrlResponse result = apiInstance.GetDownload(downloadId, contentDisposition, issueRedirect, redirectToAuth);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Downloads.GetDownload: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posteventsconversations": {
    "operationId": "posteventsconversations",
    "functionName": "PostEventsConversations",
    "signature": "PostEventsConversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchConversationEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostEventsConversationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new EventsApi();\n            var body = new BatchConversationEventRequest(); // BatchConversationEventRequest | batchRequest\n\n            try\n            { \n                // Publish Conversation Batch Events\n                BatchEventResponse result = apiInstance.PostEventsConversations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Events.PostEventsConversations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posteventsuserspresence": {
    "operationId": "posteventsuserspresence",
    "functionName": "PostEventsUsersPresence",
    "signature": "PostEventsUsersPresence(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchUserPresenceEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostEventsUsersPresenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new EventsApi();\n            var body = new BatchUserPresenceEventRequest(); // BatchUserPresenceEventRequest | batchRequest\n\n            try\n            { \n                // Publish User Presence Status Batch Events\n                BatchEventResponse result = apiInstance.PostEventsUsersPresence(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Events.PostEventsUsersPresence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posteventsusersroutingstatus": {
    "operationId": "posteventsusersroutingstatus",
    "functionName": "PostEventsUsersRoutingstatus",
    "signature": "PostEventsUsersRoutingstatus(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchUserRoutingStatusEventRequest",
        "required": "true"
      }
    ],
    "return": "BatchEventResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostEventsUsersRoutingstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new EventsApi();\n            var body = new BatchUserRoutingStatusEventRequest(); // BatchUserRoutingStatusEventRequest | batchRequest\n\n            try\n            { \n                // Publish Agent Routing Status Batch Events\n                BatchEventResponse result = apiInstance.PostEventsUsersRoutingstatus(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Events.PostEventsUsersRoutingstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactscontact": {
    "operationId": "deleteexternalcontactscontact",
    "functionName": "DeleteExternalcontactsContact",
    "signature": "DeleteExternalcontactsContact(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n\n            try\n            { \n                // Delete an external contact\n                Object result = apiInstance.DeleteExternalcontactsContact(contactId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactscontactnote": {
    "operationId": "deleteexternalcontactscontactnote",
    "functionName": "DeleteExternalcontactsContactNote",
    "signature": "DeleteExternalcontactsContactNote(contactId, noteId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsContactNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact Id\n            var noteId = \"noteId_example\";  // string | Note Id\n\n            try\n            { \n                // Delete a note for an external contact\n                Object result = apiInstance.DeleteExternalcontactsContactNote(contactId, noteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsContactNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactscontactsschema": {
    "operationId": "deleteexternalcontactscontactsschema",
    "functionName": "DeleteExternalcontactsContactsSchema",
    "signature": "DeleteExternalcontactsContactsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsContactsSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Delete a schema\n                apiInstance.DeleteExternalcontactsContactsSchema(schemaId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsContactsSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactsorganization": {
    "operationId": "deleteexternalcontactsorganization",
    "functionName": "DeleteExternalcontactsOrganization",
    "signature": "DeleteExternalcontactsOrganization(externalOrganizationId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsOrganizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n\n            try\n            { \n                // Delete an external organization\n                Object result = apiInstance.DeleteExternalcontactsOrganization(externalOrganizationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsOrganization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactsorganizationnote": {
    "operationId": "deleteexternalcontactsorganizationnote",
    "functionName": "DeleteExternalcontactsOrganizationNote",
    "signature": "DeleteExternalcontactsOrganizationNote(externalOrganizationId, noteId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsOrganizationNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization Id\n            var noteId = \"noteId_example\";  // string | Note Id\n\n            try\n            { \n                // Delete a note for an external organization\n                Object result = apiInstance.DeleteExternalcontactsOrganizationNote(externalOrganizationId, noteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsOrganizationNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactsorganizationtrustor": {
    "operationId": "deleteexternalcontactsorganizationtrustor",
    "functionName": "DeleteExternalcontactsOrganizationTrustor",
    "signature": "DeleteExternalcontactsOrganizationTrustor(externalOrganizationId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsOrganizationTrustorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n\n            try\n            { \n                // Unlink the Trustor for this External Organization\n                apiInstance.DeleteExternalcontactsOrganizationTrustor(externalOrganizationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsOrganizationTrustor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteexternalcontactsrelationship": {
    "operationId": "deleteexternalcontactsrelationship",
    "functionName": "DeleteExternalcontactsRelationship",
    "signature": "DeleteExternalcontactsRelationship(relationshipId)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteExternalcontactsRelationshipExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var relationshipId = \"relationshipId_example\";  // string | Relationship Id\n\n            try\n            { \n                // Delete a relationship\n                Object result = apiInstance.DeleteExternalcontactsRelationship(relationshipId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.DeleteExternalcontactsRelationship: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontact": {
    "operationId": "getexternalcontactscontact",
    "functionName": "GetExternalcontactsContact",
    "signature": "GetExternalcontactsContact(contactId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (externalOrganization,externalDataSources) (optional) \n\n            try\n            { \n                // Fetch an external contact\n                ExternalContact result = apiInstance.GetExternalcontactsContact(contactId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactidentifiers": {
    "operationId": "getexternalcontactscontactidentifiers",
    "functionName": "GetExternalcontactsContactIdentifiers",
    "signature": "GetExternalcontactsContactIdentifiers(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactIdentifiersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n\n            try\n            { \n                // List the identifiers for a contact\n                EntityListing result = apiInstance.GetExternalcontactsContactIdentifiers(contactId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactIdentifiers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactjourneysessions": {
    "operationId": "getexternalcontactscontactjourneysessions",
    "functionName": "GetExternalcontactsContactJourneySessions",
    "signature": "GetExternalcontactsContactJourneySessions(contactId, pageSize, after, includeMerged)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeMerged",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "SessionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactJourneySessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var includeMerged = true;  // bool? | Indicates whether to return sessions from all external contacts in the merge-set of the given one. (optional) \n\n            try\n            { \n                // Retrieve all sessions for a given external contact.\n                SessionListing result = apiInstance.GetExternalcontactsContactJourneySessions(contactId, pageSize, after, includeMerged);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactJourneySessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactnote": {
    "operationId": "getexternalcontactscontactnote",
    "functionName": "GetExternalcontactsContactNote",
    "signature": "GetExternalcontactsContactNote(contactId, noteId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact Id\n            var noteId = \"noteId_example\";  // string | Note Id\n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // Fetch a note for an external contact\n                Note result = apiInstance.GetExternalcontactsContactNote(contactId, noteId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactnotes": {
    "operationId": "getexternalcontactscontactnotes",
    "functionName": "GetExternalcontactsContactNotes",
    "signature": "GetExternalcontactsContactNotes(contactId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "NoteListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact Id\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // List notes for an external contact\n                NoteListing result = apiInstance.GetExternalcontactsContactNotes(contactId, pageSize, pageNumber, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactunresolved": {
    "operationId": "getexternalcontactscontactunresolved",
    "functionName": "GetExternalcontactsContactUnresolved",
    "signature": "GetExternalcontactsContactUnresolved(contactId, expand)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactUnresolvedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (externalOrganization,externalDataSources) (optional) \n\n            try\n            { \n                // Fetch an unresolved external contact\n                ExternalContact result = apiInstance.GetExternalcontactsContactUnresolved(contactId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactUnresolved: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontacts": {
    "operationId": "getexternalcontactscontacts",
    "functionName": "GetExternalcontactsContacts",
    "signature": "GetExternalcontactsContacts(pageSize, pageNumber, q, sortOrder, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ContactListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var q = \"q_example\";  // string | User supplied search keywords (no special syntax is currently supported) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // Search for external contacts\n                ContactListing result = apiInstance.GetExternalcontactsContacts(pageSize, pageNumber, q, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactsschema": {
    "operationId": "getexternalcontactscontactsschema",
    "functionName": "GetExternalcontactsContactsSchema",
    "signature": "GetExternalcontactsContactsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactsSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Get a schema\n                DataSchema result = apiInstance.GetExternalcontactsContactsSchema(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactsSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactsschemaversion": {
    "operationId": "getexternalcontactscontactsschemaversion",
    "functionName": "GetExternalcontactsContactsSchemaVersion",
    "signature": "GetExternalcontactsContactsSchemaVersion(schemaId, versionId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactsSchemaVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n            var versionId = \"versionId_example\";  // string | Schema version\n\n            try\n            { \n                // Get a specific version of a schema\n                DataSchema result = apiInstance.GetExternalcontactsContactsSchemaVersion(schemaId, versionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactsSchemaVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactsschemaversions": {
    "operationId": "getexternalcontactscontactsschemaversions",
    "functionName": "GetExternalcontactsContactsSchemaVersions",
    "signature": "GetExternalcontactsContactsSchemaVersions(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactsSchemaVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Get all versions of an external contact's schema\n                DataSchema result = apiInstance.GetExternalcontactsContactsSchemaVersions(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactsSchemaVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactscontactsschemas": {
    "operationId": "getexternalcontactscontactsschemas",
    "functionName": "GetExternalcontactsContactsSchemas",
    "signature": "GetExternalcontactsContactsSchemas()",
    "return": "DataSchemaListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsContactsSchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n\n            try\n            { \n                // Get a list of schemas.\n                DataSchemaListing result = apiInstance.GetExternalcontactsContactsSchemas();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsContactsSchemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganization": {
    "operationId": "getexternalcontactsorganization",
    "functionName": "GetExternalcontactsOrganization",
    "signature": "GetExternalcontactsOrganization(externalOrganizationId, expand, includeTrustors)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeTrustors",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ExternalOrganization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n            var expand = \"expand_example\";  // string | which fields, if any, to expand (externalDataSources) (optional) \n            var includeTrustors = true;  // bool? | (true or false) whether or not to include trustor information embedded in the externalOrganization (optional) \n\n            try\n            { \n                // Fetch an external organization\n                ExternalOrganization result = apiInstance.GetExternalcontactsOrganization(externalOrganizationId, expand, includeTrustors);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationcontacts": {
    "operationId": "getexternalcontactsorganizationcontacts",
    "functionName": "GetExternalcontactsOrganizationContacts",
    "signature": "GetExternalcontactsOrganizationContacts(externalOrganizationId, pageSize, pageNumber, q, sortOrder, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ContactListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var q = \"q_example\";  // string | User supplied search keywords (no special syntax is currently supported) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // Search for external contacts in an external organization\n                ContactListing result = apiInstance.GetExternalcontactsOrganizationContacts(externalOrganizationId, pageSize, pageNumber, q, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationnote": {
    "operationId": "getexternalcontactsorganizationnote",
    "functionName": "GetExternalcontactsOrganizationNote",
    "signature": "GetExternalcontactsOrganizationNote(externalOrganizationId, noteId, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization Id\n            var noteId = \"noteId_example\";  // string | Note Id\n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // Fetch a note for an external organization\n                Note result = apiInstance.GetExternalcontactsOrganizationNote(externalOrganizationId, noteId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationnotes": {
    "operationId": "getexternalcontactsorganizationnotes",
    "functionName": "GetExternalcontactsOrganizationNotes",
    "signature": "GetExternalcontactsOrganizationNotes(externalOrganizationId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "NoteListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization Id\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n\n            try\n            { \n                // List notes for an external organization\n                NoteListing result = apiInstance.GetExternalcontactsOrganizationNotes(externalOrganizationId, pageSize, pageNumber, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationrelationships": {
    "operationId": "getexternalcontactsorganizationrelationships",
    "functionName": "GetExternalcontactsOrganizationRelationships",
    "signature": "GetExternalcontactsOrganizationRelationships(externalOrganizationId, pageSize, pageNumber, expand, sortOrder)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "RelationshipListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationRelationshipsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | which fields, if any, to expand (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n\n            try\n            { \n                // Fetch a relationship for an external organization\n                RelationshipListing result = apiInstance.GetExternalcontactsOrganizationRelationships(externalOrganizationId, pageSize, pageNumber, expand, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationRelationships: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizations": {
    "operationId": "getexternalcontactsorganizations",
    "functionName": "GetExternalcontactsOrganizations",
    "signature": "GetExternalcontactsOrganizations(pageSize, pageNumber, q, trustorId, sortOrder, expand, includeTrustors)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "q",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trustorId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "includeTrustors",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ExternalOrganizationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var pageSize = 56;  // int? | Page size (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 20)\n            var pageNumber = 56;  // int? | Page number (limited to fetching first 1,000 records; pageNumber * pageSize must be <= 1,000) (optional)  (default to 1)\n            var q = \"q_example\";  // string | Search query (optional) \n            var trustorId = new List<string>(); // List<string> | Search for external organizations by trustorIds (limit 25). If supplied, the 'q' parameters is ignored. Items are returned in the order requested (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var expand = new List<string>(); // List<string> | which fields, if any, to expand (optional) \n            var includeTrustors = true;  // bool? | (true or false) whether or not to include trustor information embedded in the externalOrganization (optional) \n\n            try\n            { \n                // Search for external organizations\n                ExternalOrganizationListing result = apiInstance.GetExternalcontactsOrganizations(pageSize, pageNumber, q, trustorId, sortOrder, expand, includeTrustors);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationsschema": {
    "operationId": "getexternalcontactsorganizationsschema",
    "functionName": "GetExternalcontactsOrganizationsSchema",
    "signature": "GetExternalcontactsOrganizationsSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationsSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Get a schema\n                DataSchema result = apiInstance.GetExternalcontactsOrganizationsSchema(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationsSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationsschemaversion": {
    "operationId": "getexternalcontactsorganizationsschemaversion",
    "functionName": "GetExternalcontactsOrganizationsSchemaVersion",
    "signature": "GetExternalcontactsOrganizationsSchemaVersion(schemaId, versionId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationsSchemaVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n            var versionId = \"versionId_example\";  // string | Schema version\n\n            try\n            { \n                // Get a specific version of a schema\n                DataSchema result = apiInstance.GetExternalcontactsOrganizationsSchemaVersion(schemaId, versionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationsSchemaVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationsschemaversions": {
    "operationId": "getexternalcontactsorganizationsschemaversions",
    "functionName": "GetExternalcontactsOrganizationsSchemaVersions",
    "signature": "GetExternalcontactsOrganizationsSchemaVersions(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationsSchemaVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Get all versions of an external organization's schema\n                DataSchema result = apiInstance.GetExternalcontactsOrganizationsSchemaVersions(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationsSchemaVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsorganizationsschemas": {
    "operationId": "getexternalcontactsorganizationsschemas",
    "functionName": "GetExternalcontactsOrganizationsSchemas",
    "signature": "GetExternalcontactsOrganizationsSchemas()",
    "return": "DataSchemaListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsOrganizationsSchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n\n            try\n            { \n                // Get a list of schemas.\n                DataSchemaListing result = apiInstance.GetExternalcontactsOrganizationsSchemas();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsOrganizationsSchemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsrelationship": {
    "operationId": "getexternalcontactsrelationship",
    "functionName": "GetExternalcontactsRelationship",
    "signature": "GetExternalcontactsRelationship(relationshipId, expand)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Relationship",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsRelationshipExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var relationshipId = \"relationshipId_example\";  // string | Relationship Id\n            var expand = \"expand_example\";  // string | which fields, if any, to expand (optional) \n\n            try\n            { \n                // Fetch a relationship\n                Relationship result = apiInstance.GetExternalcontactsRelationship(relationshipId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsRelationship: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsreversewhitepageslookup": {
    "operationId": "getexternalcontactsreversewhitepageslookup",
    "functionName": "GetExternalcontactsReversewhitepageslookup",
    "signature": "GetExternalcontactsReversewhitepageslookup(lookupVal, expand)",
    "parameters": [
      {
        "name": "lookupVal",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ReverseWhitepagesLookupResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsReversewhitepageslookupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var lookupVal = \"lookupVal_example\";  // string | User supplied value to lookup contacts/externalOrganizations (supports email addresses, e164 phone numbers, Twitter screen names)\n            var expand = new List<string>(); // List<string> | which field, if any, to expand (optional) \n\n            try\n            { \n                // Look up contacts and externalOrganizations based on an attribute. Maximum of 25 values returned.\n                ReverseWhitepagesLookupResult result = apiInstance.GetExternalcontactsReversewhitepageslookup(lookupVal, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsReversewhitepageslookup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsscancontacts": {
    "operationId": "getexternalcontactsscancontacts",
    "functionName": "GetExternalcontactsScanContacts",
    "signature": "GetExternalcontactsScanContacts(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CursorContactListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsScanContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var limit = 56;  // int? | The number of contacts per page; must be between 10 and 200, default is 100) (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional) \n\n            try\n            { \n                // Scan for external contacts using paging\n                CursorContactListing result = apiInstance.GetExternalcontactsScanContacts(limit, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsScanContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsscannotes": {
    "operationId": "getexternalcontactsscannotes",
    "functionName": "GetExternalcontactsScanNotes",
    "signature": "GetExternalcontactsScanNotes(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CursorNoteListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsScanNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var limit = 56;  // int? | The number of notes per page; must be between 10 and 200, default is 100) (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional) \n\n            try\n            { \n                // Scan for notes using paging\n                CursorNoteListing result = apiInstance.GetExternalcontactsScanNotes(limit, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsScanNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsscanorganizations": {
    "operationId": "getexternalcontactsscanorganizations",
    "functionName": "GetExternalcontactsScanOrganizations",
    "signature": "GetExternalcontactsScanOrganizations(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CursorOrganizationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsScanOrganizationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var limit = 56;  // int? | The number of organizations per page; must be between 10 and 200, default is 100) (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional) \n\n            try\n            { \n                // Scan for external organizations using paging\n                CursorOrganizationListing result = apiInstance.GetExternalcontactsScanOrganizations(limit, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsScanOrganizations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getexternalcontactsscanrelationships": {
    "operationId": "getexternalcontactsscanrelationships",
    "functionName": "GetExternalcontactsScanRelationships",
    "signature": "GetExternalcontactsScanRelationships(limit, cursor)",
    "parameters": [
      {
        "name": "limit",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CursorRelationshipListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetExternalcontactsScanRelationshipsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var limit = 56;  // int? | The number of relationships per page; must be between 10 and 200, default is 100) (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page), each page returns a new cursor with a 24h TTL (optional) \n\n            try\n            { \n                // Scan for relationships\n                CursorRelationshipListing result = apiInstance.GetExternalcontactsScanRelationships(limit, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.GetExternalcontactsScanRelationships: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchexternalcontactscontactidentifiers": {
    "operationId": "patchexternalcontactscontactidentifiers",
    "functionName": "PatchExternalcontactsContactIdentifiers",
    "signature": "PatchExternalcontactsContactIdentifiers(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IdentifierClaimRequest",
        "required": "true"
      }
    ],
    "return": "ContactIdentifier",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchExternalcontactsContactIdentifiersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n            var body = new IdentifierClaimRequest(); // IdentifierClaimRequest | ClaimRequest\n\n            try\n            { \n                // Claim or release identifiers for a contact\n                ContactIdentifier result = apiInstance.PatchExternalcontactsContactIdentifiers(contactId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PatchExternalcontactsContactIdentifiers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkcontacts": {
    "operationId": "postexternalcontactsbulkcontacts",
    "functionName": "PostExternalcontactsBulkContacts",
    "signature": "PostExternalcontactsBulkContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchContactsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Contact ids\n\n            try\n            { \n                // Bulk fetch contacts\n                BulkFetchContactsResponse result = apiInstance.PostExternalcontactsBulkContacts(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkcontactsadd": {
    "operationId": "postexternalcontactsbulkcontactsadd",
    "functionName": "PostExternalcontactsBulkContactsAdd",
    "signature": "PostExternalcontactsBulkContactsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkContactsRequest",
        "required": "true"
      }
    ],
    "return": "BulkContactsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkContactsAddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkContactsRequest(); // BulkContactsRequest | Contacts\n\n            try\n            { \n                // Bulk add contacts\n                BulkContactsResponse result = apiInstance.PostExternalcontactsBulkContactsAdd(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkContactsAdd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkcontactsremove": {
    "operationId": "postexternalcontactsbulkcontactsremove",
    "functionName": "PostExternalcontactsBulkContactsRemove",
    "signature": "PostExternalcontactsBulkContactsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkContactsRemoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Contact ids\n\n            try\n            { \n                // Bulk remove contacts\n                BulkDeleteResponse result = apiInstance.PostExternalcontactsBulkContactsRemove(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkContactsRemove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkcontactsunresolved": {
    "operationId": "postexternalcontactsbulkcontactsunresolved",
    "functionName": "PostExternalcontactsBulkContactsUnresolved",
    "signature": "PostExternalcontactsBulkContactsUnresolved(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchContactsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkContactsUnresolvedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Contact ids\n\n            try\n            { \n                // Bulk fetch unresolved ancestor contacts\n                BulkFetchContactsResponse result = apiInstance.PostExternalcontactsBulkContactsUnresolved(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkContactsUnresolved: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkcontactsupdate": {
    "operationId": "postexternalcontactsbulkcontactsupdate",
    "functionName": "PostExternalcontactsBulkContactsUpdate",
    "signature": "PostExternalcontactsBulkContactsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkContactsRequest",
        "required": "true"
      }
    ],
    "return": "BulkContactsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkContactsUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkContactsRequest(); // BulkContactsRequest | Contacts\n\n            try\n            { \n                // Bulk update contacts\n                BulkContactsResponse result = apiInstance.PostExternalcontactsBulkContactsUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkContactsUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulknotes": {
    "operationId": "postexternalcontactsbulknotes",
    "functionName": "PostExternalcontactsBulkNotes",
    "signature": "PostExternalcontactsBulkNotes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchNotesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Note ids\n\n            try\n            { \n                // Bulk fetch notes\n                BulkFetchNotesResponse result = apiInstance.PostExternalcontactsBulkNotes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulknotesadd": {
    "operationId": "postexternalcontactsbulknotesadd",
    "functionName": "PostExternalcontactsBulkNotesAdd",
    "signature": "PostExternalcontactsBulkNotesAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkNotesRequest",
        "required": "true"
      }
    ],
    "return": "BulkNotesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkNotesAddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkNotesRequest(); // BulkNotesRequest | Notes\n\n            try\n            { \n                // Bulk add notes\n                BulkNotesResponse result = apiInstance.PostExternalcontactsBulkNotesAdd(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkNotesAdd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulknotesremove": {
    "operationId": "postexternalcontactsbulknotesremove",
    "functionName": "PostExternalcontactsBulkNotesRemove",
    "signature": "PostExternalcontactsBulkNotesRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkNotesRemoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Note ids\n\n            try\n            { \n                // Bulk remove notes\n                BulkDeleteResponse result = apiInstance.PostExternalcontactsBulkNotesRemove(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkNotesRemove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulknotesupdate": {
    "operationId": "postexternalcontactsbulknotesupdate",
    "functionName": "PostExternalcontactsBulkNotesUpdate",
    "signature": "PostExternalcontactsBulkNotesUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkNotesRequest",
        "required": "true"
      }
    ],
    "return": "BulkNotesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkNotesUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkNotesRequest(); // BulkNotesRequest | Notes\n\n            try\n            { \n                // Bulk update notes\n                BulkNotesResponse result = apiInstance.PostExternalcontactsBulkNotesUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkNotesUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkorganizations": {
    "operationId": "postexternalcontactsbulkorganizations",
    "functionName": "PostExternalcontactsBulkOrganizations",
    "signature": "PostExternalcontactsBulkOrganizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchOrganizationsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkOrganizationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Organizations ids\n\n            try\n            { \n                // Bulk fetch organizations\n                BulkFetchOrganizationsResponse result = apiInstance.PostExternalcontactsBulkOrganizations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkOrganizations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkorganizationsadd": {
    "operationId": "postexternalcontactsbulkorganizationsadd",
    "functionName": "PostExternalcontactsBulkOrganizationsAdd",
    "signature": "PostExternalcontactsBulkOrganizationsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkOrganizationsRequest",
        "required": "true"
      }
    ],
    "return": "BulkOrganizationsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkOrganizationsAddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkOrganizationsRequest(); // BulkOrganizationsRequest | Organizations\n\n            try\n            { \n                // Bulk add organizations\n                BulkOrganizationsResponse result = apiInstance.PostExternalcontactsBulkOrganizationsAdd(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkOrganizationsAdd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkorganizationsremove": {
    "operationId": "postexternalcontactsbulkorganizationsremove",
    "functionName": "PostExternalcontactsBulkOrganizationsRemove",
    "signature": "PostExternalcontactsBulkOrganizationsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkOrganizationsRemoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Organization ids\n\n            try\n            { \n                // Bulk remove organizations\n                BulkDeleteResponse result = apiInstance.PostExternalcontactsBulkOrganizationsRemove(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkOrganizationsRemove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkorganizationsupdate": {
    "operationId": "postexternalcontactsbulkorganizationsupdate",
    "functionName": "PostExternalcontactsBulkOrganizationsUpdate",
    "signature": "PostExternalcontactsBulkOrganizationsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkOrganizationsRequest",
        "required": "true"
      }
    ],
    "return": "BulkOrganizationsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkOrganizationsUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkOrganizationsRequest(); // BulkOrganizationsRequest | Organizations\n\n            try\n            { \n                // Bulk update organizations\n                BulkOrganizationsResponse result = apiInstance.PostExternalcontactsBulkOrganizationsUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkOrganizationsUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkrelationships": {
    "operationId": "postexternalcontactsbulkrelationships",
    "functionName": "PostExternalcontactsBulkRelationships",
    "signature": "PostExternalcontactsBulkRelationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkFetchRelationshipsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkRelationshipsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Relationships ids\n\n            try\n            { \n                // Bulk fetch relationships\n                BulkFetchRelationshipsResponse result = apiInstance.PostExternalcontactsBulkRelationships(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkRelationships: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkrelationshipsadd": {
    "operationId": "postexternalcontactsbulkrelationshipsadd",
    "functionName": "PostExternalcontactsBulkRelationshipsAdd",
    "signature": "PostExternalcontactsBulkRelationshipsAdd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkRelationshipsRequest",
        "required": "true"
      }
    ],
    "return": "BulkRelationshipsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkRelationshipsAddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkRelationshipsRequest(); // BulkRelationshipsRequest | Relationships\n\n            try\n            { \n                // Bulk add relationships\n                BulkRelationshipsResponse result = apiInstance.PostExternalcontactsBulkRelationshipsAdd(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkRelationshipsAdd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkrelationshipsremove": {
    "operationId": "postexternalcontactsbulkrelationshipsremove",
    "functionName": "PostExternalcontactsBulkRelationshipsRemove",
    "signature": "PostExternalcontactsBulkRelationshipsRemove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkIdsRequest",
        "required": "true"
      }
    ],
    "return": "BulkDeleteResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkRelationshipsRemoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkIdsRequest(); // BulkIdsRequest | Relationships ids\n\n            try\n            { \n                // Bulk remove relationships\n                BulkDeleteResponse result = apiInstance.PostExternalcontactsBulkRelationshipsRemove(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkRelationshipsRemove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsbulkrelationshipsupdate": {
    "operationId": "postexternalcontactsbulkrelationshipsupdate",
    "functionName": "PostExternalcontactsBulkRelationshipsUpdate",
    "signature": "PostExternalcontactsBulkRelationshipsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BulkRelationshipsRequest",
        "required": "true"
      }
    ],
    "return": "BulkRelationshipsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsBulkRelationshipsUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new BulkRelationshipsRequest(); // BulkRelationshipsRequest | Relationships\n\n            try\n            { \n                // Bulk update relationships\n                BulkRelationshipsResponse result = apiInstance.PostExternalcontactsBulkRelationshipsUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsBulkRelationshipsUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactscontactnotes": {
    "operationId": "postexternalcontactscontactnotes",
    "functionName": "PostExternalcontactsContactNotes",
    "signature": "PostExternalcontactsContactNotes(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsContactNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact Id\n            var body = new Note(); // Note | ExternalContact\n\n            try\n            { \n                // Create a note for an external contact\n                Note result = apiInstance.PostExternalcontactsContactNotes(contactId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsContactNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactscontactpromotion": {
    "operationId": "postexternalcontactscontactpromotion",
    "functionName": "PostExternalcontactsContactPromotion",
    "signature": "PostExternalcontactsContactPromotion(contactId)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsContactPromotionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n\n            try\n            { \n                // Promote an observed contact (ephemeral or identified) to a curated contact\n                ExternalContact result = apiInstance.PostExternalcontactsContactPromotion(contactId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsContactPromotion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactscontacts": {
    "operationId": "postexternalcontactscontacts",
    "functionName": "PostExternalcontactsContacts",
    "signature": "PostExternalcontactsContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalContact",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new ExternalContact(); // ExternalContact | ExternalContact\n\n            try\n            { \n                // Create an external contact\n                ExternalContact result = apiInstance.PostExternalcontactsContacts(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactscontactsschemas": {
    "operationId": "postexternalcontactscontactsschemas",
    "functionName": "PostExternalcontactsContactsSchemas",
    "signature": "PostExternalcontactsContactsSchemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsContactsSchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new DataSchema(); // DataSchema | Schema\n\n            try\n            { \n                // Create a schema\n                DataSchema result = apiInstance.PostExternalcontactsContactsSchemas(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsContactsSchemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsidentifierlookup": {
    "operationId": "postexternalcontactsidentifierlookup",
    "functionName": "PostExternalcontactsIdentifierlookup",
    "signature": "PostExternalcontactsIdentifierlookup(identifier)",
    "parameters": [
      {
        "name": "identifier",
        "type": "ContactIdentifier",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsIdentifierlookupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var identifier = new ContactIdentifier(); // ContactIdentifier | \n\n            try\n            { \n                // Fetch a contact using an identifier type and value.\n                ExternalContact result = apiInstance.PostExternalcontactsIdentifierlookup(identifier);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsIdentifierlookup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsmergecontacts": {
    "operationId": "postexternalcontactsmergecontacts",
    "functionName": "PostExternalcontactsMergeContacts",
    "signature": "PostExternalcontactsMergeContacts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MergeRequest",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsMergeContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new MergeRequest(); // MergeRequest | MergeRequest\n\n            try\n            { \n                // Merge two contacts into a new contact record\n                ExternalContact result = apiInstance.PostExternalcontactsMergeContacts(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsMergeContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsorganizationnotes": {
    "operationId": "postexternalcontactsorganizationnotes",
    "functionName": "PostExternalcontactsOrganizationNotes",
    "signature": "PostExternalcontactsOrganizationNotes(externalOrganizationId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsOrganizationNotesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization Id\n            var body = new Note(); // Note | ExternalContact\n\n            try\n            { \n                // Create a note for an external organization\n                Note result = apiInstance.PostExternalcontactsOrganizationNotes(externalOrganizationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsOrganizationNotes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsorganizations": {
    "operationId": "postexternalcontactsorganizations",
    "functionName": "PostExternalcontactsOrganizations",
    "signature": "PostExternalcontactsOrganizations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalOrganization",
        "required": "true"
      }
    ],
    "return": "ExternalOrganization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsOrganizationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new ExternalOrganization(); // ExternalOrganization | ExternalOrganization\n\n            try\n            { \n                // Create an external organization\n                ExternalOrganization result = apiInstance.PostExternalcontactsOrganizations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsOrganizations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsorganizationsschemas": {
    "operationId": "postexternalcontactsorganizationsschemas",
    "functionName": "PostExternalcontactsOrganizationsSchemas",
    "signature": "PostExternalcontactsOrganizationsSchemas(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsOrganizationsSchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new DataSchema(); // DataSchema | Schema\n\n            try\n            { \n                // Create a schema\n                DataSchema result = apiInstance.PostExternalcontactsOrganizationsSchemas(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsOrganizationsSchemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postexternalcontactsrelationships": {
    "operationId": "postexternalcontactsrelationships",
    "functionName": "PostExternalcontactsRelationships",
    "signature": "PostExternalcontactsRelationships(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostExternalcontactsRelationshipsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var body = new Relationship(); // Relationship | Relationship\n\n            try\n            { \n                // Create a relationship\n                Relationship result = apiInstance.PostExternalcontactsRelationships(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PostExternalcontactsRelationships: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactscontact": {
    "operationId": "putexternalcontactscontact",
    "functionName": "PutExternalcontactsContact",
    "signature": "PutExternalcontactsContact(contactId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalContact",
        "required": "true"
      }
    ],
    "return": "ExternalContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact ID\n            var body = new ExternalContact(); // ExternalContact | ExternalContact\n\n            try\n            { \n                // Update an external contact\n                ExternalContact result = apiInstance.PutExternalcontactsContact(contactId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactscontactnote": {
    "operationId": "putexternalcontactscontactnote",
    "functionName": "PutExternalcontactsContactNote",
    "signature": "PutExternalcontactsContactNote(contactId, noteId, body)",
    "parameters": [
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsContactNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var contactId = \"contactId_example\";  // string | ExternalContact Id\n            var noteId = \"noteId_example\";  // string | Note Id\n            var body = new Note(); // Note | Note\n\n            try\n            { \n                // Update a note for an external contact\n                Note result = apiInstance.PutExternalcontactsContactNote(contactId, noteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsContactNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactscontactsschema": {
    "operationId": "putexternalcontactscontactsschema",
    "functionName": "PutExternalcontactsContactsSchema",
    "signature": "PutExternalcontactsContactsSchema(schemaId, body)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsContactsSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n            var body = new DataSchema(); // DataSchema | Data Schema\n\n            try\n            { \n                // Update a schema\n                DataSchema result = apiInstance.PutExternalcontactsContactsSchema(schemaId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsContactsSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsconversation": {
    "operationId": "putexternalcontactsconversation",
    "functionName": "PutExternalcontactsConversation",
    "signature": "PutExternalcontactsConversation(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ConversationAssociation",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsConversationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var body = new ConversationAssociation(); // ConversationAssociation | ConversationAssociation\n\n            try\n            { \n                // Associate/disassociate an external contact with a conversation\n                apiInstance.PutExternalcontactsConversation(conversationId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsConversation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsorganization": {
    "operationId": "putexternalcontactsorganization",
    "functionName": "PutExternalcontactsOrganization",
    "signature": "PutExternalcontactsOrganization(externalOrganizationId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalOrganization",
        "required": "true"
      }
    ],
    "return": "ExternalOrganization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsOrganizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n            var body = new ExternalOrganization(); // ExternalOrganization | ExternalOrganization\n\n            try\n            { \n                // Update an external organization\n                ExternalOrganization result = apiInstance.PutExternalcontactsOrganization(externalOrganizationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsOrganization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsorganizationnote": {
    "operationId": "putexternalcontactsorganizationnote",
    "functionName": "PutExternalcontactsOrganizationNote",
    "signature": "PutExternalcontactsOrganizationNote(externalOrganizationId, noteId, body)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "noteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Note",
        "required": "true"
      }
    ],
    "return": "Note",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsOrganizationNoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization Id\n            var noteId = \"noteId_example\";  // string | Note Id\n            var body = new Note(); // Note | Note\n\n            try\n            { \n                // Update a note for an external organization\n                Note result = apiInstance.PutExternalcontactsOrganizationNote(externalOrganizationId, noteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsOrganizationNote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsorganizationtrustortrustorid": {
    "operationId": "putexternalcontactsorganizationtrustortrustorid",
    "functionName": "PutExternalcontactsOrganizationTrustorTrustorId",
    "signature": "PutExternalcontactsOrganizationTrustorTrustorId(externalOrganizationId, trustorId)",
    "parameters": [
      {
        "name": "externalOrganizationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trustorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ExternalOrganizationTrustorLink",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsOrganizationTrustorTrustorIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var externalOrganizationId = \"externalOrganizationId_example\";  // string | External Organization ID\n            var trustorId = \"trustorId_example\";  // string | Trustor ID\n\n            try\n            { \n                // Links a Trustor with an External Organization\n                ExternalOrganizationTrustorLink result = apiInstance.PutExternalcontactsOrganizationTrustorTrustorId(externalOrganizationId, trustorId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsOrganizationTrustorTrustorId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsorganizationsschema": {
    "operationId": "putexternalcontactsorganizationsschema",
    "functionName": "PutExternalcontactsOrganizationsSchema",
    "signature": "PutExternalcontactsOrganizationsSchema(schemaId, body)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DataSchema",
        "required": "true"
      }
    ],
    "return": "DataSchema",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsOrganizationsSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n            var body = new DataSchema(); // DataSchema | Data Schema\n\n            try\n            { \n                // Update a schema\n                DataSchema result = apiInstance.PutExternalcontactsOrganizationsSchema(schemaId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsOrganizationsSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putexternalcontactsrelationship": {
    "operationId": "putexternalcontactsrelationship",
    "functionName": "PutExternalcontactsRelationship",
    "signature": "PutExternalcontactsRelationship(relationshipId, body)",
    "parameters": [
      {
        "name": "relationshipId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Relationship",
        "required": "true"
      }
    ],
    "return": "Relationship",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutExternalcontactsRelationshipExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ExternalContactsApi();\n            var relationshipId = \"relationshipId_example\";  // string | Relationship Id\n            var body = new Relationship(); // Relationship | Relationship\n\n            try\n            { \n                // Update a relationship\n                Relationship result = apiInstance.PutExternalcontactsRelationship(relationshipId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ExternalContacts.PutExternalcontactsRelationship: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletefaxdocument": {
    "operationId": "deletefaxdocument",
    "functionName": "DeleteFaxDocument",
    "signature": "DeleteFaxDocument(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteFaxDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n\n            try\n            { \n                // Delete a fax document.\n                apiInstance.DeleteFaxDocument(documentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.DeleteFaxDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getfaxdocument": {
    "operationId": "getfaxdocument",
    "functionName": "GetFaxDocument",
    "signature": "GetFaxDocument(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "FaxDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFaxDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n\n            try\n            { \n                // Get a document.\n                FaxDocument result = apiInstance.GetFaxDocument(documentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.GetFaxDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getfaxdocumentcontent": {
    "operationId": "getfaxdocumentcontent",
    "functionName": "GetFaxDocumentContent",
    "signature": "GetFaxDocumentContent(documentId)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DownloadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFaxDocumentContentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n\n            try\n            { \n                // Download a fax document.\n                DownloadResponse result = apiInstance.GetFaxDocumentContent(documentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.GetFaxDocumentContent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getfaxdocuments": {
    "operationId": "getfaxdocuments",
    "functionName": "GetFaxDocuments",
    "signature": "GetFaxDocuments(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "FaxDocumentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFaxDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of fax documents.\n                FaxDocumentEntityListing result = apiInstance.GetFaxDocuments(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.GetFaxDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getfaxsummary": {
    "operationId": "getfaxsummary",
    "functionName": "GetFaxSummary",
    "signature": "GetFaxSummary()",
    "return": "FaxSummary",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFaxSummaryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n\n            try\n            { \n                // Get fax summary\n                FaxSummary result = apiInstance.GetFaxSummary();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.GetFaxSummary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putfaxdocument": {
    "operationId": "putfaxdocument",
    "functionName": "PutFaxDocument",
    "signature": "PutFaxDocument(documentId, body)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "FaxDocument",
        "required": "true"
      }
    ],
    "return": "FaxDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutFaxDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new FaxApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var body = new FaxDocument(); // FaxDocument | Document\n\n            try\n            { \n                // Update a fax document.\n                FaxDocument result = apiInstance.PutFaxDocument(documentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Fax.PutFaxDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteemployeeperformanceexternalmetricsdefinition": {
    "operationId": "deleteemployeeperformanceexternalmetricsdefinition",
    "functionName": "DeleteEmployeeperformanceExternalmetricsDefinition",
    "signature": "DeleteEmployeeperformanceExternalmetricsDefinition(metricId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteEmployeeperformanceExternalmetricsDefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricId = \"metricId_example\";  // string | Specifies the External Metric Definition ID\n\n            try\n            { \n                // Delete an External Metric Definition\n                apiInstance.DeleteEmployeeperformanceExternalmetricsDefinition(metricId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.DeleteEmployeeperformanceExternalmetricsDefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getemployeeperformanceexternalmetricsdefinition": {
    "operationId": "getemployeeperformanceexternalmetricsdefinition",
    "functionName": "GetEmployeeperformanceExternalmetricsDefinition",
    "signature": "GetEmployeeperformanceExternalmetricsDefinition(metricId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetEmployeeperformanceExternalmetricsDefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricId = \"metricId_example\";  // string | Specifies the External Metric Definition ID\n\n            try\n            { \n                // Get an External Metric Definition\n                ExternalMetricDefinition result = apiInstance.GetEmployeeperformanceExternalmetricsDefinition(metricId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetEmployeeperformanceExternalmetricsDefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getemployeeperformanceexternalmetricsdefinitions": {
    "operationId": "getemployeeperformanceexternalmetricsdefinitions",
    "functionName": "GetEmployeeperformanceExternalmetricsDefinitions",
    "signature": "GetEmployeeperformanceExternalmetricsDefinitions(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDefinitionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetEmployeeperformanceExternalmetricsDefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of External Metric Definitions of an organization, sorted by name in ascending order\n                ExternalMetricDefinitionListing result = apiInstance.GetEmployeeperformanceExternalmetricsDefinitions(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetEmployeeperformanceExternalmetricsDefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationleaderboard": {
    "operationId": "getgamificationleaderboard",
    "functionName": "GetGamificationLeaderboard",
    "signature": "GetGamificationLeaderboard(startWorkday, endWorkday, metricId)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationLeaderboardExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var startWorkday = new Date();  // String | Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var metricId = \"metricId_example\";  // string | Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given. (optional) \n\n            try\n            { \n                // Leaderboard of the requesting user's division or performance profile\n                Leaderboard result = apiInstance.GetGamificationLeaderboard(startWorkday, endWorkday, metricId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationLeaderboard: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationleaderboardall": {
    "operationId": "getgamificationleaderboardall",
    "functionName": "GetGamificationLeaderboardAll",
    "signature": "GetGamificationLeaderboardAll(filterType, filterId, startWorkday, endWorkday, metricId)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Leaderboard",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationLeaderboardAllExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var filterId = \"filterId_example\";  // string | ID for the filter type. For example, division or performance profile Id\n            var startWorkday = new Date();  // String | Start workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday to retrieve for the leaderboard. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var metricId = \"metricId_example\";  // string | Metric Id for which the leaderboard is to be generated. The total points is used if nothing is given. (optional) \n\n            try\n            { \n                // Leaderboard by filter type\n                Leaderboard result = apiInstance.GetGamificationLeaderboardAll(filterType, filterId, startWorkday, endWorkday, metricId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationLeaderboardAll: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationleaderboardallbestpoints": {
    "operationId": "getgamificationleaderboardallbestpoints",
    "functionName": "GetGamificationLeaderboardAllBestpoints",
    "signature": "GetGamificationLeaderboardAllBestpoints(filterType, filterId)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OverallBestPoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationLeaderboardAllBestpointsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var filterId = \"filterId_example\";  // string | ID for the filter type. For example, division or performance profile Id\n\n            try\n            { \n                // Best Points by division or performance profile\n                OverallBestPoints result = apiInstance.GetGamificationLeaderboardAllBestpoints(filterType, filterId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationLeaderboardAllBestpoints: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationleaderboardbestpoints": {
    "operationId": "getgamificationleaderboardbestpoints",
    "functionName": "GetGamificationLeaderboardBestpoints",
    "signature": "GetGamificationLeaderboardBestpoints()",
    "return": "OverallBestPoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationLeaderboardBestpointsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // Best Points of the requesting user's current performance profile or division\n                OverallBestPoints result = apiInstance.GetGamificationLeaderboardBestpoints();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationLeaderboardBestpoints: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationmetric": {
    "operationId": "getgamificationmetric",
    "functionName": "GetGamificationMetric",
    "signature": "GetGamificationMetric(metricId, workday, performanceProfileId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "performanceProfileId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationMetricExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricId = \"metricId_example\";  // string | metric Id\n            var workday = new Date();  // String | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var performanceProfileId = \"performanceProfileId_example\";  // string | The profile id of the metrics you are trying to retrieve. The DEFAULT profile is used if nothing is given. (optional) \n\n            try\n            { \n                // Gamified metric by id\n                Metric result = apiInstance.GetGamificationMetric(metricId, workday, performanceProfileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationMetric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationmetricdefinition": {
    "operationId": "getgamificationmetricdefinition",
    "functionName": "GetGamificationMetricdefinition",
    "signature": "GetGamificationMetricdefinition(metricDefinitionId)",
    "parameters": [
      {
        "name": "metricDefinitionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MetricDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationMetricdefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricDefinitionId = \"metricDefinitionId_example\";  // string | metric definition id\n\n            try\n            { \n                // Metric definition by id\n                MetricDefinition result = apiInstance.GetGamificationMetricdefinition(metricDefinitionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationMetricdefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationmetricdefinitions": {
    "operationId": "getgamificationmetricdefinitions",
    "functionName": "GetGamificationMetricdefinitions",
    "signature": "GetGamificationMetricdefinitions()",
    "return": "GetMetricDefinitionsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationMetricdefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // All metric definitions\n                GetMetricDefinitionsResponse result = apiInstance.GetGamificationMetricdefinitions();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationMetricdefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofile": {
    "operationId": "getgamificationprofile",
    "functionName": "GetGamificationProfile",
    "signature": "GetGamificationProfile(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfileExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n\n            try\n            { \n                // Performance profile by id\n                PerformanceProfile result = apiInstance.GetGamificationProfile(profileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfile: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilemembers": {
    "operationId": "getgamificationprofilemembers",
    "functionName": "GetGamificationProfileMembers",
    "signature": "GetGamificationProfileMembers(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MemberListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfileMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Profile Id\n\n            try\n            { \n                // Members of a given performance profile\n                MemberListing result = apiInstance.GetGamificationProfileMembers(profileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfileMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilemetric": {
    "operationId": "getgamificationprofilemetric",
    "functionName": "GetGamificationProfileMetric",
    "signature": "GetGamificationProfileMetric(profileId, metricId, workday)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfileMetricExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Performance Profile Id\n            var metricId = \"metricId_example\";  // string | Metric Id\n            var workday = new Date();  // String | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n\n            try\n            { \n                // Performance profile gamified metric by id\n                Metric result = apiInstance.GetGamificationProfileMetric(profileId, metricId, workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfileMetric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilemetrics": {
    "operationId": "getgamificationprofilemetrics",
    "functionName": "GetGamificationProfileMetrics",
    "signature": "GetGamificationProfileMetrics(profileId, expand, workday, metricIds)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "metricIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GetMetricResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfileMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Performance Profile Id\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var workday = new Date();  // String | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var metricIds = \"metricIds_example\";  // string | List of metric ids to filter the response (Optional, comma-separated). (optional) \n\n            try\n            { \n                // All gamified metrics for a given performance profile\n                GetMetricResponse result = apiInstance.GetGamificationProfileMetrics(profileId, expand, workday, metricIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfileMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilemetricsobjectivedetails": {
    "operationId": "getgamificationprofilemetricsobjectivedetails",
    "functionName": "GetGamificationProfileMetricsObjectivedetails",
    "signature": "GetGamificationProfileMetricsObjectivedetails(profileId, workday)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      }
    ],
    "return": "GetMetricsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfileMetricsObjectivedetailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Performance Profile Id\n            var workday = new Date();  // String | The objective query workday. If not specified, then it retrieves the current objective. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n\n            try\n            { \n                // All metrics for a given performance profile with objective details such as order and maxPoints\n                GetMetricsResponse result = apiInstance.GetGamificationProfileMetricsObjectivedetails(profileId, workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfileMetricsObjectivedetails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofiles": {
    "operationId": "getgamificationprofiles",
    "functionName": "GetGamificationProfiles",
    "signature": "GetGamificationProfiles()",
    "return": "GetProfilesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfilesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // All performance profiles\n                GetProfilesResponse result = apiInstance.GetGamificationProfiles();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfiles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilesuser": {
    "operationId": "getgamificationprofilesuser",
    "functionName": "GetGamificationProfilesUser",
    "signature": "GetGamificationProfilesUser(userId, workday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfilesUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var workday = new Date();  // String | Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n\n            try\n            { \n                // Performance profile of a user\n                PerformanceProfile result = apiInstance.GetGamificationProfilesUser(userId, workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfilesUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationprofilesusersme": {
    "operationId": "getgamificationprofilesusersme",
    "functionName": "GetGamificationProfilesUsersMe",
    "signature": "GetGamificationProfilesUsersMe(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "String",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationProfilesUsersMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var workday = new Date();  // String | Target querying workday. If not provided, then queries the current performance profile. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n\n            try\n            { \n                // Performance profile of the requesting user\n                PerformanceProfile result = apiInstance.GetGamificationProfilesUsersMe(workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationProfilesUsersMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecards": {
    "operationId": "getgamificationscorecards",
    "functionName": "GetGamificationScorecards",
    "signature": "GetGamificationScorecards(workday, expand)",
    "parameters": [
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkdayMetricListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var workday = new Date();  // String | Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Workday performance metrics of the requesting user\n                WorkdayMetricListing result = apiInstance.GetGamificationScorecards(workday, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecards: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsattendance": {
    "operationId": "getgamificationscorecardsattendance",
    "functionName": "GetGamificationScorecardsAttendance",
    "signature": "GetGamificationScorecardsAttendance(startWorkday, endWorkday)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "AttendanceStatusListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsAttendanceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // Attendance status metrics of the requesting user\n                AttendanceStatusListing result = apiInstance.GetGamificationScorecardsAttendance(startWorkday, endWorkday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsAttendance: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsbestpoints": {
    "operationId": "getgamificationscorecardsbestpoints",
    "functionName": "GetGamificationScorecardsBestpoints",
    "signature": "GetGamificationScorecardsBestpoints()",
    "return": "UserBestPoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsBestpointsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // Best points of the requesting user\n                UserBestPoints result = apiInstance.GetGamificationScorecardsBestpoints();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsBestpoints: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardspointsalltime": {
    "operationId": "getgamificationscorecardspointsalltime",
    "functionName": "GetGamificationScorecardsPointsAlltime",
    "signature": "GetGamificationScorecardsPointsAlltime(endWorkday)",
    "parameters": [
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "AllTimePoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsPointsAlltimeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // All-time points of the requesting user\n                AllTimePoints result = apiInstance.GetGamificationScorecardsPointsAlltime(endWorkday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsPointsAlltime: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardspointsaverage": {
    "operationId": "getgamificationscorecardspointsaverage",
    "functionName": "GetGamificationScorecardsPointsAverage",
    "signature": "GetGamificationScorecardsPointsAverage(workday)",
    "parameters": [
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "SingleWorkdayAveragePoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsPointsAverageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var workday = new Date();  // String | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // Average points of the requesting user's division or performance profile\n                SingleWorkdayAveragePoints result = apiInstance.GetGamificationScorecardsPointsAverage(workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsPointsAverage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardspointstrends": {
    "operationId": "getgamificationscorecardspointstrends",
    "functionName": "GetGamificationScorecardsPointsTrends",
    "signature": "GetGamificationScorecardsPointsTrends(startWorkday, endWorkday, dayOfWeek)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "dayOfWeek",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WorkdayPointsTrend",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsPointsTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var dayOfWeek = \"dayOfWeek_example\";  // string | Optional filter to specify which day of weeks to be included in the response (optional) \n\n            try\n            { \n                // Points trends of the requesting user\n                WorkdayPointsTrend result = apiInstance.GetGamificationScorecardsPointsTrends(startWorkday, endWorkday, dayOfWeek);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsPointsTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsprofilemetricuservaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricuservaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricUserValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricUserValuesTrends(profileId, metricId, userId, startWorkday, endWorkday, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "referenceWorkday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsProfileMetricUserValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n            var metricId = \"metricId_example\";  // string | metricId\n            var userId = \"userId_example\";  // string | \n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var referenceWorkday = new Date();  // String | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Average performance values trends by metric of a user\n                MetricValueTrendAverage result = apiInstance.GetGamificationScorecardsProfileMetricUserValuesTrends(profileId, metricId, userId, startWorkday, endWorkday, referenceWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsProfileMetricUserValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsprofilemetricusersvaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricusersvaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricUsersValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricUsersValuesTrends(profileId, metricId, filterType, startWorkday, endWorkday, filterId, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsProfileMetricUsersValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n            var metricId = \"metricId_example\";  // string | metricId\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var filterId = \"filterId_example\";  // string | ID for the filter type. Only required when filterType is Division. (optional) \n            var referenceWorkday = new Date();  // String | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Average performance values trends by metric of a division or a performance profile\n                MetricValueTrendAverage result = apiInstance.GetGamificationScorecardsProfileMetricUsersValuesTrends(profileId, metricId, filterType, startWorkday, endWorkday, filterId, referenceWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsProfileMetricUsersValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsprofilemetricvaluestrends": {
    "operationId": "getgamificationscorecardsprofilemetricvaluestrends",
    "functionName": "GetGamificationScorecardsProfileMetricValuesTrends",
    "signature": "GetGamificationScorecardsProfileMetricValuesTrends(profileId, metricId, startWorkday, endWorkday, filterType, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MetricValueTrendAverage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsProfileMetricValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n            var metricId = \"metricId_example\";  // string | metricId\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var filterType = \"filterType_example\";  // string | Filter type for the query request. If not set, returns the values trends of the requesting user (optional) \n            var referenceWorkday = new Date();  // String | Reference workday for the trend. Used to determine the associated metric definition. If not set, then the value of endWorkday is used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Average performance values trends by metric of the requesting user\n                MetricValueTrendAverage result = apiInstance.GetGamificationScorecardsProfileMetricValuesTrends(profileId, metricId, startWorkday, endWorkday, filterType, referenceWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsProfileMetricValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuser": {
    "operationId": "getgamificationscorecardsuser",
    "functionName": "GetGamificationScorecardsUser",
    "signature": "GetGamificationScorecardsUser(userId, workday, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkdayMetricListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var workday = new Date();  // String | Target querying workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Workday performance metrics for a user\n                WorkdayMetricListing result = apiInstance.GetGamificationScorecardsUser(userId, workday, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuserattendance": {
    "operationId": "getgamificationscorecardsuserattendance",
    "functionName": "GetGamificationScorecardsUserAttendance",
    "signature": "GetGamificationScorecardsUserAttendance(userId, startWorkday, endWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "AttendanceStatusListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserAttendanceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // Attendance status metrics for a user\n                AttendanceStatusListing result = apiInstance.GetGamificationScorecardsUserAttendance(userId, startWorkday, endWorkday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUserAttendance: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuserbestpoints": {
    "operationId": "getgamificationscorecardsuserbestpoints",
    "functionName": "GetGamificationScorecardsUserBestpoints",
    "signature": "GetGamificationScorecardsUserBestpoints(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserBestPoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserBestpointsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n\n            try\n            { \n                // Best points of a user\n                UserBestPoints result = apiInstance.GetGamificationScorecardsUserBestpoints(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUserBestpoints: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuserpointsalltime": {
    "operationId": "getgamificationscorecardsuserpointsalltime",
    "functionName": "GetGamificationScorecardsUserPointsAlltime",
    "signature": "GetGamificationScorecardsUserPointsAlltime(userId, endWorkday)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "AllTimePoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserPointsAlltimeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // All-time points for a user\n                AllTimePoints result = apiInstance.GetGamificationScorecardsUserPointsAlltime(userId, endWorkday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUserPointsAlltime: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuserpointstrends": {
    "operationId": "getgamificationscorecardsuserpointstrends",
    "functionName": "GetGamificationScorecardsUserPointsTrends",
    "signature": "GetGamificationScorecardsUserPointsTrends(userId, startWorkday, endWorkday, dayOfWeek)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "dayOfWeek",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WorkdayPointsTrend",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserPointsTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var dayOfWeek = \"dayOfWeek_example\";  // string | Optional filter to specify which day of weeks to be included in the response (optional) \n\n            try\n            { \n                // Points trend for a user\n                WorkdayPointsTrend result = apiInstance.GetGamificationScorecardsUserPointsTrends(userId, startWorkday, endWorkday, dayOfWeek);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUserPointsTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuservaluestrends": {
    "operationId": "getgamificationscorecardsuservaluestrends",
    "functionName": "GetGamificationScorecardsUserValuesTrends",
    "signature": "GetGamificationScorecardsUserValuesTrends(userId, startWorkday, endWorkday, timeZone)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUserValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var userId = \"userId_example\";  // string | \n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Values trends of a user\n                WorkdayValuesTrend result = apiInstance.GetGamificationScorecardsUserValuesTrends(userId, startWorkday, endWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUserValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsuserspointsaverage": {
    "operationId": "getgamificationscorecardsuserspointsaverage",
    "functionName": "GetGamificationScorecardsUsersPointsAverage",
    "signature": "GetGamificationScorecardsUsersPointsAverage(filterType, filterId, workday)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "SingleWorkdayAveragePoints",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUsersPointsAverageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var filterId = \"filterId_example\";  // string | ID for the filter type.\n            var workday = new Date();  // String | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // Workday average points by target group\n                SingleWorkdayAveragePoints result = apiInstance.GetGamificationScorecardsUsersPointsAverage(filterType, filterId, workday);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUsersPointsAverage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsusersvaluesaverage": {
    "operationId": "getgamificationscorecardsusersvaluesaverage",
    "functionName": "GetGamificationScorecardsUsersValuesAverage",
    "signature": "GetGamificationScorecardsUsersValuesAverage(filterType, filterId, workday, timeZone)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SingleWorkdayAverageValues",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUsersValuesAverageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var filterId = \"filterId_example\";  // string | ID for the filter type. For example, division Id\n            var workday = new Date();  // String | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Workday average values by target group\n                SingleWorkdayAverageValues result = apiInstance.GetGamificationScorecardsUsersValuesAverage(filterType, filterId, workday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUsersValuesAverage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsusersvaluestrends": {
    "operationId": "getgamificationscorecardsusersvaluestrends",
    "functionName": "GetGamificationScorecardsUsersValuesTrends",
    "signature": "GetGamificationScorecardsUsersValuesTrends(filterType, filterId, startWorkday, endWorkday, timeZone)",
    "parameters": [
      {
        "name": "filterType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "filterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsUsersValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var filterType = \"filterType_example\";  // string | Filter type for the query request.\n            var filterId = \"filterId_example\";  // string | ID for the filter type.\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Values trend by target group\n                WorkdayValuesTrend result = apiInstance.GetGamificationScorecardsUsersValuesTrends(filterType, filterId, startWorkday, endWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsUsersValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsvaluesaverage": {
    "operationId": "getgamificationscorecardsvaluesaverage",
    "functionName": "GetGamificationScorecardsValuesAverage",
    "signature": "GetGamificationScorecardsValuesAverage(workday, timeZone)",
    "parameters": [
      {
        "name": "workday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SingleWorkdayAverageValues",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsValuesAverageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var workday = new Date();  // String | The target workday. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Average values of the requesting user's division or performance profile\n                SingleWorkdayAverageValues result = apiInstance.GetGamificationScorecardsValuesAverage(workday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsValuesAverage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationscorecardsvaluestrends": {
    "operationId": "getgamificationscorecardsvaluestrends",
    "functionName": "GetGamificationScorecardsValuesTrends",
    "signature": "GetGamificationScorecardsValuesTrends(startWorkday, endWorkday, filterType, referenceWorkday, timeZone)",
    "parameters": [
      {
        "name": "startWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "endWorkday",
        "type": "String",
        "required": "true"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "referenceWorkday",
        "type": "String",
        "required": "false"
      },
      {
        "name": "timeZone",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WorkdayValuesTrend",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationScorecardsValuesTrendsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var startWorkday = new Date();  // String | Start workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var endWorkday = new Date();  // String | End workday of querying workdays range. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var filterType = \"filterType_example\";  // string | Filter type for the query request. If not set, then the request is for the requesting user. (optional) \n            var referenceWorkday = new Date();  // String | Reference workday for the trend. Used to determine the profile of the user as of this date. If not set, then the user's current profile will be used. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd (optional) \n            var timeZone = \"timeZone_example\";  // string | Timezone for the workday. Defaults to UTC (optional)  (default to \"UTC\")\n\n            try\n            { \n                // Values trends of the requesting user or group\n                WorkdayValuesTrend result = apiInstance.GetGamificationScorecardsValuesTrends(startWorkday, endWorkday, filterType, referenceWorkday, timeZone);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationScorecardsValuesTrends: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationstatus": {
    "operationId": "getgamificationstatus",
    "functionName": "GetGamificationStatus",
    "signature": "GetGamificationStatus()",
    "return": "GamificationStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationStatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // Gamification activation status\n                GamificationStatus result = apiInstance.GetGamificationStatus();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationStatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationtemplate": {
    "operationId": "getgamificationtemplate",
    "functionName": "GetGamificationTemplate",
    "signature": "GetGamificationTemplate(templateId)",
    "parameters": [
      {
        "name": "templateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ObjectiveTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var templateId = \"templateId_example\";  // string | template id\n\n            try\n            { \n                // Objective template by id\n                ObjectiveTemplate result = apiInstance.GetGamificationTemplate(templateId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgamificationtemplates": {
    "operationId": "getgamificationtemplates",
    "functionName": "GetGamificationTemplates",
    "signature": "GetGamificationTemplates()",
    "return": "GetTemplatesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGamificationTemplatesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n\n            try\n            { \n                // All objective templates\n                GetTemplatesResponse result = apiInstance.GetGamificationTemplates();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.GetGamificationTemplates: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchemployeeperformanceexternalmetricsdefinition": {
    "operationId": "patchemployeeperformanceexternalmetricsdefinition",
    "functionName": "PatchEmployeeperformanceExternalmetricsDefinition",
    "signature": "PatchEmployeeperformanceExternalmetricsDefinition(metricId, body)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExternalMetricDefinitionUpdateRequest",
        "required": "true"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchEmployeeperformanceExternalmetricsDefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricId = \"metricId_example\";  // string | Specifies the metric definition ID\n            var body = new ExternalMetricDefinitionUpdateRequest(); // ExternalMetricDefinitionUpdateRequest | The External Metric Definition parameters to be updated\n\n            try\n            { \n                // Update External Metric Definition\n                ExternalMetricDefinition result = apiInstance.PatchEmployeeperformanceExternalmetricsDefinition(metricId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PatchEmployeeperformanceExternalmetricsDefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postemployeeperformanceexternalmetricsdata": {
    "operationId": "postemployeeperformanceexternalmetricsdata",
    "functionName": "PostEmployeeperformanceExternalmetricsData",
    "signature": "PostEmployeeperformanceExternalmetricsData(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalMetricDataWriteRequest",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDataWriteResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostEmployeeperformanceExternalmetricsDataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var body = new ExternalMetricDataWriteRequest(); // ExternalMetricDataWriteRequest | The External Metric Data to be added (optional) \n\n            try\n            { \n                // Write External Metric Data\n                ExternalMetricDataWriteResponse result = apiInstance.PostEmployeeperformanceExternalmetricsData(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostEmployeeperformanceExternalmetricsData: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postemployeeperformanceexternalmetricsdefinitions": {
    "operationId": "postemployeeperformanceexternalmetricsdefinitions",
    "functionName": "PostEmployeeperformanceExternalmetricsDefinitions",
    "signature": "PostEmployeeperformanceExternalmetricsDefinitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExternalMetricDefinitionCreateRequest",
        "required": "false"
      }
    ],
    "return": "ExternalMetricDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostEmployeeperformanceExternalmetricsDefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var body = new ExternalMetricDefinitionCreateRequest(); // ExternalMetricDefinitionCreateRequest | The External Metric Definition to be created (optional) \n\n            try\n            { \n                // Create External Metric Definition\n                ExternalMetricDefinition result = apiInstance.PostEmployeeperformanceExternalmetricsDefinitions(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostEmployeeperformanceExternalmetricsDefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofileactivate": {
    "operationId": "postgamificationprofileactivate",
    "functionName": "PostGamificationProfileActivate",
    "signature": "PostGamificationProfileActivate(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileActivateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n\n            try\n            { \n                // Activate a performance profile\n                PerformanceProfile result = apiInstance.PostGamificationProfileActivate(profileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileActivate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofiledeactivate": {
    "operationId": "postgamificationprofiledeactivate",
    "functionName": "PostGamificationProfileDeactivate",
    "signature": "PostGamificationProfileDeactivate(profileId)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileDeactivateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n\n            try\n            { \n                // Deactivate a performance profile\n                PerformanceProfile result = apiInstance.PostGamificationProfileDeactivate(profileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileDeactivate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofilemembers": {
    "operationId": "postgamificationprofilemembers",
    "functionName": "PostGamificationProfileMembers",
    "signature": "PostGamificationProfileMembers(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AssignUsers",
        "required": "true"
      }
    ],
    "return": "Assignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Profile Id\n            var body = new AssignUsers(); // AssignUsers | assignUsers\n\n            try\n            { \n                // Assign members to a given performance profile\n                Assignment result = apiInstance.PostGamificationProfileMembers(profileId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofilemembersvalidate": {
    "operationId": "postgamificationprofilemembersvalidate",
    "functionName": "PostGamificationProfileMembersValidate",
    "signature": "PostGamificationProfileMembersValidate(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ValidateAssignUsers",
        "required": "true"
      }
    ],
    "return": "AssignmentValidation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileMembersValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Profile Id\n            var body = new ValidateAssignUsers(); // ValidateAssignUsers | memberAssignments\n\n            try\n            { \n                // Validate member assignment\n                AssignmentValidation result = apiInstance.PostGamificationProfileMembersValidate(profileId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileMembersValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofilemetriclink": {
    "operationId": "postgamificationprofilemetriclink",
    "functionName": "PostGamificationProfileMetricLink",
    "signature": "PostGamificationProfileMetricLink(sourceProfileId, sourceMetricId, body)",
    "parameters": [
      {
        "name": "sourceProfileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceMetricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TargetPerformanceProfile",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileMetricLinkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var sourceProfileId = \"sourceProfileId_example\";  // string | Source Performance Profile Id\n            var sourceMetricId = \"sourceMetricId_example\";  // string | Source Metric Id\n            var body = new TargetPerformanceProfile(); // TargetPerformanceProfile | linkedMetric\n\n            try\n            { \n                // Creates a linked metric\n                Metric result = apiInstance.PostGamificationProfileMetricLink(sourceProfileId, sourceMetricId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileMetricLink: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofilemetrics": {
    "operationId": "postgamificationprofilemetrics",
    "functionName": "PostGamificationProfileMetrics",
    "signature": "PostGamificationProfileMetrics(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateMetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfileMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Performance Profile Id\n            var body = new CreateMetric(); // CreateMetric | Metric\n\n            try\n            { \n                // Creates a gamified metric with a given metric definition and metric objective under in a performance profile\n                Metric result = apiInstance.PostGamificationProfileMetrics(profileId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfileMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgamificationprofiles": {
    "operationId": "postgamificationprofiles",
    "functionName": "PostGamificationProfiles",
    "signature": "PostGamificationProfiles(body, copyMetrics)",
    "parameters": [
      {
        "name": "body",
        "type": "CreatePerformanceProfile",
        "required": "true"
      },
      {
        "name": "copyMetrics",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGamificationProfilesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var body = new CreatePerformanceProfile(); // CreatePerformanceProfile | performanceProfile\n            var copyMetrics = true;  // bool? | Flag to copy metrics. If set to false, there will be no metrics associated with the new profile. If set to true or is absent (the default behavior), all metrics from the default profile will be copied over into the new profile. (optional)  (default to true)\n\n            try\n            { \n                // Create a new custom performance profile\n                PerformanceProfile result = apiInstance.PostGamificationProfiles(body, copyMetrics);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PostGamificationProfiles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgamificationmetric": {
    "operationId": "putgamificationmetric",
    "functionName": "PutGamificationMetric",
    "signature": "PutGamificationMetric(metricId, body, performanceProfileId)",
    "parameters": [
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateMetric",
        "required": "true"
      },
      {
        "name": "performanceProfileId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGamificationMetricExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var metricId = \"metricId_example\";  // string | metric Id\n            var body = new CreateMetric(); // CreateMetric | Metric\n            var performanceProfileId = \"performanceProfileId_example\";  // string | The profile id of the metrics you are trying to retrieve. The DEFAULT profile is used if nothing is given. (optional) \n\n            try\n            { \n                // Updates a metric\n                Metric result = apiInstance.PutGamificationMetric(metricId, body, performanceProfileId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PutGamificationMetric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgamificationprofile": {
    "operationId": "putgamificationprofile",
    "functionName": "PutGamificationProfile",
    "signature": "PutGamificationProfile(profileId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PerformanceProfile",
        "required": "false"
      }
    ],
    "return": "PerformanceProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGamificationProfileExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | performanceProfileId\n            var body = new PerformanceProfile(); // PerformanceProfile | performanceProfile (optional) \n\n            try\n            { \n                // Updates a performance profile\n                PerformanceProfile result = apiInstance.PutGamificationProfile(profileId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PutGamificationProfile: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgamificationprofilemetric": {
    "operationId": "putgamificationprofilemetric",
    "functionName": "PutGamificationProfileMetric",
    "signature": "PutGamificationProfileMetric(profileId, metricId, body)",
    "parameters": [
      {
        "name": "profileId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metricId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateMetric",
        "required": "true"
      }
    ],
    "return": "Metric",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGamificationProfileMetricExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var profileId = \"profileId_example\";  // string | Performance Profile Id\n            var metricId = \"metricId_example\";  // string | Metric Id\n            var body = new CreateMetric(); // CreateMetric | Metric\n\n            try\n            { \n                // Updates a metric in performance profile\n                Metric result = apiInstance.PutGamificationProfileMetric(profileId, metricId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PutGamificationProfileMetric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgamificationstatus": {
    "operationId": "putgamificationstatus",
    "functionName": "PutGamificationStatus",
    "signature": "PutGamificationStatus(status)",
    "parameters": [
      {
        "name": "status",
        "type": "GamificationStatus",
        "required": "true"
      }
    ],
    "return": "GamificationStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGamificationStatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GamificationApi();\n            var status = new GamificationStatus(); // GamificationStatus | Gamification status\n\n            try\n            { \n                // Update gamification activation status\n                GamificationStatus result = apiInstance.PutGamificationStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Gamification.PutGamificationStatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgdprrequest": {
    "operationId": "getgdprrequest",
    "functionName": "GetGdprRequest",
    "signature": "GetGdprRequest(requestId)",
    "parameters": [
      {
        "name": "requestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "GDPRRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGdprRequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeneralDataProtectionRegulationApi();\n            var requestId = \"requestId_example\";  // string | Request id\n\n            try\n            { \n                // Get an existing GDPR request\n                GDPRRequest result = apiInstance.GetGdprRequest(requestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling GeneralDataProtectionRegulation.GetGdprRequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgdprrequests": {
    "operationId": "getgdprrequests",
    "functionName": "GetGdprRequests",
    "signature": "GetGdprRequests(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "GDPRRequestEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGdprRequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeneralDataProtectionRegulationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get all GDPR requests\n                GDPRRequestEntityListing result = apiInstance.GetGdprRequests(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling GeneralDataProtectionRegulation.GetGdprRequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgdprsubjects": {
    "operationId": "getgdprsubjects",
    "functionName": "GetGdprSubjects",
    "signature": "GetGdprSubjects(searchType, searchValue)",
    "parameters": [
      {
        "name": "searchType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchValue",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "GDPRSubjectEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGdprSubjectsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeneralDataProtectionRegulationApi();\n            var searchType = \"searchType_example\";  // string | Search Type\n            var searchValue = \"searchValue_example\";  // string | Search Value\n\n            try\n            { \n                // Get GDPR subjects\n                GDPRSubjectEntityListing result = apiInstance.GetGdprSubjects(searchType, searchValue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling GeneralDataProtectionRegulation.GetGdprSubjects: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgdprrequests": {
    "operationId": "postgdprrequests",
    "functionName": "PostGdprRequests",
    "signature": "PostGdprRequests(body, deleteConfirmed)",
    "parameters": [
      {
        "name": "body",
        "type": "GDPRRequest",
        "required": "true"
      },
      {
        "name": "deleteConfirmed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "GDPRRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGdprRequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeneralDataProtectionRegulationApi();\n            var body = new GDPRRequest(); // GDPRRequest | GDPR request\n            var deleteConfirmed = true;  // bool? | Confirm delete (optional)  (default to false)\n\n            try\n            { \n                // Submit a new GDPR request\n                GDPRRequest result = apiInstance.PostGdprRequests(body, deleteConfirmed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling GeneralDataProtectionRegulation.PostGdprRequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgeolocationssettings": {
    "operationId": "getgeolocationssettings",
    "functionName": "GetGeolocationsSettings",
    "signature": "GetGeolocationsSettings()",
    "return": "GeolocationSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGeolocationsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeolocationApi();\n\n            try\n            { \n                // Get a organization's GeolocationSettings\n                GeolocationSettings result = apiInstance.GetGeolocationsSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Geolocation.GetGeolocationsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusergeolocation": {
    "operationId": "getusergeolocation",
    "functionName": "GetUserGeolocation",
    "signature": "GetUserGeolocation(userId, clientId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserGeolocationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | user Id\n            var clientId = \"clientId_example\";  // string | client Id\n\n            try\n            { \n                // Get a user's Geolocation\n                Geolocation result = apiInstance.GetUserGeolocation(userId, clientId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserGeolocation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchgeolocationssettings": {
    "operationId": "patchgeolocationssettings",
    "functionName": "PatchGeolocationsSettings",
    "signature": "PatchGeolocationsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GeolocationSettings",
        "required": "true"
      }
    ],
    "return": "GeolocationSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchGeolocationsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GeolocationApi();\n            var body = new GeolocationSettings(); // GeolocationSettings | Geolocation settings\n\n            try\n            { \n                // Patch a organization's GeolocationSettings\n                GeolocationSettings result = apiInstance.PatchGeolocationsSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Geolocation.PatchGeolocationsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchusergeolocation": {
    "operationId": "patchusergeolocation",
    "functionName": "PatchUserGeolocation",
    "signature": "PatchUserGeolocation(userId, clientId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Geolocation",
        "required": "true"
      }
    ],
    "return": "Geolocation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserGeolocationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | user Id\n            var clientId = \"clientId_example\";  // string | client Id\n            var body = new Geolocation(); // Geolocation | Geolocation\n\n            try\n            { \n                // Patch a user's Geolocation\n                Geolocation result = apiInstance.PatchUserGeolocation(userId, clientId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserGeolocation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletegreeting": {
    "operationId": "deletegreeting",
    "functionName": "DeleteGreeting",
    "signature": "DeleteGreeting(greetingId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteGreetingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var greetingId = \"greetingId_example\";  // string | Greeting ID\n\n            try\n            { \n                // Deletes a Greeting with the given GreetingId\n                apiInstance.DeleteGreeting(greetingId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.DeleteGreeting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgreeting": {
    "operationId": "getgreeting",
    "functionName": "GetGreeting",
    "signature": "GetGreeting(greetingId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGreetingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var greetingId = \"greetingId_example\";  // string | Greeting ID\n\n            try\n            { \n                // Get a Greeting with the given GreetingId\n                Greeting result = apiInstance.GetGreeting(greetingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGreeting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgreetingmedia": {
    "operationId": "getgreetingmedia",
    "functionName": "GetGreetingMedia",
    "signature": "GetGreetingMedia(greetingId, formatId)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GreetingMediaInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGreetingMediaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var greetingId = \"greetingId_example\";  // string | Greeting ID\n            var formatId = \"formatId_example\";  // string | The desired media format. (optional)  (default to WAV)\n\n            try\n            { \n                // Get media playback URI for this greeting\n                GreetingMediaInfo result = apiInstance.GetGreetingMedia(greetingId, formatId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGreetingMedia: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgreetings": {
    "operationId": "getgreetings",
    "functionName": "GetGreetings",
    "signature": "GetGreetings(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Gets an Organization's Greetings\n                DomainEntityListing result = apiInstance.GetGreetings(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgreetingsdefaults": {
    "operationId": "getgreetingsdefaults",
    "functionName": "GetGreetingsDefaults",
    "signature": "GetGreetingsDefaults()",
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n\n            try\n            { \n                // Get an Organization's DefaultGreetingList\n                DefaultGreetingList result = apiInstance.GetGreetingsDefaults();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupgreetings": {
    "operationId": "getgroupgreetings",
    "functionName": "GetGroupGreetings",
    "signature": "GetGroupGreetings(groupId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "GreetingListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of the Group's Greetings\n                GreetingListing result = apiInstance.GetGroupGreetings(groupId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGroupGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupgreetingsdefaults": {
    "operationId": "getgroupgreetingsdefaults",
    "functionName": "GetGroupGreetingsDefaults",
    "signature": "GetGroupGreetingsDefaults(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n\n            try\n            { \n                // Grabs the list of Default Greetings given a Group's ID\n                DefaultGreetingList result = apiInstance.GetGroupGreetingsDefaults(groupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetGroupGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusergreetings": {
    "operationId": "getusergreetings",
    "functionName": "GetUserGreetings",
    "signature": "GetUserGreetings(userId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "DomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of the User's Greetings\n                DomainEntityListing result = apiInstance.GetUserGreetings(userId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetUserGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusergreetingsdefaults": {
    "operationId": "getusergreetingsdefaults",
    "functionName": "GetUserGreetingsDefaults",
    "signature": "GetUserGreetingsDefaults(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Grabs the list of Default Greetings given a User's ID\n                DefaultGreetingList result = apiInstance.GetUserGreetingsDefaults(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.GetUserGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgreetings": {
    "operationId": "postgreetings",
    "functionName": "PostGreetings",
    "signature": "PostGreetings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var body = new Greeting(); // Greeting | The Greeting to create\n\n            try\n            { \n                // Create a Greeting for an Organization\n                Greeting result = apiInstance.PostGreetings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PostGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgroupgreetings": {
    "operationId": "postgroupgreetings",
    "functionName": "PostGroupGreetings",
    "signature": "PostGroupGreetings(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGroupGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var body = new Greeting(); // Greeting | The Greeting to create\n\n            try\n            { \n                // Creates a Greeting for a Group\n                Greeting result = apiInstance.PostGroupGreetings(groupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PostGroupGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postusergreetings": {
    "operationId": "postusergreetings",
    "functionName": "PostUserGreetings",
    "signature": "PostUserGreetings(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserGreetingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new Greeting(); // Greeting | The Greeting to create\n\n            try\n            { \n                // Creates a Greeting for a User\n                Greeting result = apiInstance.PostUserGreetings(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PostUserGreetings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgreeting": {
    "operationId": "putgreeting",
    "functionName": "PutGreeting",
    "signature": "PutGreeting(greetingId, body)",
    "parameters": [
      {
        "name": "greetingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Greeting",
        "required": "true"
      }
    ],
    "return": "Greeting",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGreetingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var greetingId = \"greetingId_example\";  // string | Greeting ID\n            var body = new Greeting(); // Greeting | The updated Greeting\n\n            try\n            { \n                // Updates the Greeting with the given GreetingId\n                Greeting result = apiInstance.PutGreeting(greetingId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PutGreeting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgreetingsdefaults": {
    "operationId": "putgreetingsdefaults",
    "functionName": "PutGreetingsDefaults",
    "signature": "PutGreetingsDefaults(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var body = new DefaultGreetingList(); // DefaultGreetingList | The updated defaultGreetingList\n\n            try\n            { \n                // Update an Organization's DefaultGreetingList\n                DefaultGreetingList result = apiInstance.PutGreetingsDefaults(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PutGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgroupgreetingsdefaults": {
    "operationId": "putgroupgreetingsdefaults",
    "functionName": "PutGroupGreetingsDefaults",
    "signature": "PutGroupGreetingsDefaults(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGroupGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var body = new DefaultGreetingList(); // DefaultGreetingList | The updated defaultGreetingList\n\n            try\n            { \n                // Updates the DefaultGreetingList of the specified Group\n                DefaultGreetingList result = apiInstance.PutGroupGreetingsDefaults(groupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PutGroupGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putusergreetingsdefaults": {
    "operationId": "putusergreetingsdefaults",
    "functionName": "PutUserGreetingsDefaults",
    "signature": "PutUserGreetingsDefaults(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DefaultGreetingList",
        "required": "true"
      }
    ],
    "return": "DefaultGreetingList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserGreetingsDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GreetingsApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new DefaultGreetingList(); // DefaultGreetingList | The updated defaultGreetingList\n\n            try\n            { \n                // Updates the DefaultGreetingList of the specified User\n                DefaultGreetingList result = apiInstance.PutUserGreetingsDefaults(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Greetings.PutUserGreetingsDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletegroup": {
    "operationId": "deletegroup",
    "functionName": "DeleteGroup",
    "signature": "DeleteGroup(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n\n            try\n            { \n                // Delete group\n                apiInstance.DeleteGroup(groupId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.DeleteGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletegroupmembers": {
    "operationId": "deletegroupmembers",
    "functionName": "DeleteGroupMembers",
    "signature": "DeleteGroupMembers(groupId, ids)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteGroupMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var ids = \"ids_example\";  // string | Comma separated list of userIds to remove\n\n            try\n            { \n                // Remove members\n                Object result = apiInstance.DeleteGroupMembers(groupId, ids);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.DeleteGroupMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getfieldconfig": {
    "operationId": "getfieldconfig",
    "functionName": "GetFieldconfig",
    "signature": "GetFieldconfig(type)",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "FieldConfig",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetFieldconfigExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var type = \"type_example\";  // string | Field type\n\n            try\n            { \n                // Fetch field config for an entity type\n                FieldConfig result = apiInstance.GetFieldconfig(type);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetFieldconfig: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroup": {
    "operationId": "getgroup",
    "functionName": "GetGroup",
    "signature": "GetGroup(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n\n            try\n            { \n                // Get group\n                Group result = apiInstance.GetGroup(groupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupindividuals": {
    "operationId": "getgroupindividuals",
    "functionName": "GetGroupIndividuals",
    "signature": "GetGroupIndividuals(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupIndividualsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n\n            try\n            { \n                // Get all individuals associated with the group\n                UserEntityListing result = apiInstance.GetGroupIndividuals(groupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetGroupIndividuals: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupmembers": {
    "operationId": "getgroupmembers",
    "functionName": "GetGroupMembers",
    "signature": "GetGroupMembers(groupId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get group members, includes individuals, owners, and dynamically included people\n                UserEntityListing result = apiInstance.GetGroupMembers(groupId, pageSize, pageNumber, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetGroupMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupprofile": {
    "operationId": "getgroupprofile",
    "functionName": "GetGroupProfile",
    "signature": "GetGroupProfile(groupId, fields)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GroupProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupProfileExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | groupId\n            var fields = \"fields_example\";  // string | Comma separated fields to return.  Allowable values can be found by querying /api/v2/fieldconfig?type=group and using the key for the elements returned by the fieldList (optional) \n\n            try\n            { \n                // Get group profile\n                GroupProfile result = apiInstance.GetGroupProfile(groupId, fields);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetGroupProfile: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroups": {
    "operationId": "getgroups",
    "functionName": "GetGroups",
    "signature": "GetGroups(pageSize, pageNumber, id, jabberId, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GroupEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | id (optional) \n            var jabberId = new List<string>(); // List<string> | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n\n            try\n            { \n                // Get a group list\n                GroupEntityListing result = apiInstance.GetGroups(pageSize, pageNumber, id, jabberId, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetGroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getgroupssearch": {
    "operationId": "getgroupssearch",
    "functionName": "GetGroupsSearch",
    "signature": "GetGroupsSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "GroupsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetGroupsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | expand (optional) \n\n            try\n            { \n                // Search groups using the q64 value returned from a previous search\n                GroupsSearchResponse result = apiInstance.GetGroupsSearch(q64, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.GetGroupsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getprofilesgroups": {
    "operationId": "getprofilesgroups",
    "functionName": "GetProfilesGroups",
    "signature": "GetProfilesGroups(pageSize, pageNumber, id, jabberId, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GroupProfileEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetProfilesGroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | id (optional) \n            var jabberId = new List<string>(); // List<string> | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n\n            try\n            { \n                // Get group profile listing\n                GroupProfileEntityListing result = apiInstance.GetProfilesGroups(pageSize, pageNumber, id, jabberId, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.GetProfilesGroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgroupmembers": {
    "operationId": "postgroupmembers",
    "functionName": "PostGroupMembers",
    "signature": "PostGroupMembers(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GroupMembersUpdate",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGroupMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var body = new GroupMembersUpdate(); // GroupMembersUpdate | Add members\n\n            try\n            { \n                // Add members\n                Object result = apiInstance.PostGroupMembers(groupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.PostGroupMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgroups": {
    "operationId": "postgroups",
    "functionName": "PostGroups",
    "signature": "PostGroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GroupCreate",
        "required": "true"
      }
    ],
    "return": "Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var body = new GroupCreate(); // GroupCreate | Group\n\n            try\n            { \n                // Create a group\n                Group result = apiInstance.PostGroups(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.PostGroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postgroupssearch": {
    "operationId": "postgroupssearch",
    "functionName": "PostGroupsSearch",
    "signature": "PostGroupsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GroupSearchRequest",
        "required": "true"
      }
    ],
    "return": "GroupsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostGroupsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var body = new GroupSearchRequest(); // GroupSearchRequest | Search request options\n\n            try\n            { \n                // Search groups\n                GroupsSearchResponse result = apiInstance.PostGroupsSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostGroupsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putgroup": {
    "operationId": "putgroup",
    "functionName": "PutGroup",
    "signature": "PutGroup(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GroupUpdate",
        "required": "false"
      }
    ],
    "return": "Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new GroupsApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var body = new GroupUpdate(); // GroupUpdate | Group (optional) \n\n            try\n            { \n                // Update group\n                Group result = apiInstance.PutGroup(groupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Groups.PutGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersadfs": {
    "operationId": "deleteidentityprovidersadfs",
    "functionName": "DeleteIdentityprovidersAdfs",
    "signature": "DeleteIdentityprovidersAdfs()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersAdfsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete ADFS Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersAdfs();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersAdfs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityproviderscic": {
    "operationId": "deleteidentityproviderscic",
    "functionName": "DeleteIdentityprovidersCic",
    "signature": "DeleteIdentityprovidersCic()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersCicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete Customer Interaction Center (CIC) Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersCic();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersCic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersgeneric": {
    "operationId": "deleteidentityprovidersgeneric",
    "functionName": "DeleteIdentityprovidersGeneric",
    "signature": "DeleteIdentityprovidersGeneric()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersGenericExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete Generic SAML Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersGeneric();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersGeneric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersgsuite": {
    "operationId": "deleteidentityprovidersgsuite",
    "functionName": "DeleteIdentityprovidersGsuite",
    "signature": "DeleteIdentityprovidersGsuite()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersGsuiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete G Suite Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersGsuite();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersGsuite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersidentitynow": {
    "operationId": "deleteidentityprovidersidentitynow",
    "functionName": "DeleteIdentityprovidersIdentitynow",
    "signature": "DeleteIdentityprovidersIdentitynow()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersIdentitynowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete IdentityNow Provider\n                Object result = apiInstance.DeleteIdentityprovidersIdentitynow();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersIdentitynow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersokta": {
    "operationId": "deleteidentityprovidersokta",
    "functionName": "DeleteIdentityprovidersOkta",
    "signature": "DeleteIdentityprovidersOkta()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersOktaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete Okta Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersOkta();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersOkta: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersonelogin": {
    "operationId": "deleteidentityprovidersonelogin",
    "functionName": "DeleteIdentityprovidersOnelogin",
    "signature": "DeleteIdentityprovidersOnelogin()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersOneloginExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete OneLogin Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersOnelogin();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersOnelogin: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityprovidersping": {
    "operationId": "deleteidentityprovidersping",
    "functionName": "DeleteIdentityprovidersPing",
    "signature": "DeleteIdentityprovidersPing()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersPingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete Ping Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersPing();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersPing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityproviderspurecloud": {
    "operationId": "deleteidentityproviderspurecloud",
    "functionName": "DeleteIdentityprovidersPurecloud",
    "signature": "DeleteIdentityprovidersPurecloud()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersPurecloudExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete PureCloud Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersPurecloud();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersPurecloud: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityproviderspureengage": {
    "operationId": "deleteidentityproviderspureengage",
    "functionName": "DeleteIdentityprovidersPureengage",
    "signature": "DeleteIdentityprovidersPureengage()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersPureengageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete PureEngage Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersPureengage();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersPureengage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteidentityproviderssalesforce": {
    "operationId": "deleteidentityproviderssalesforce",
    "functionName": "DeleteIdentityprovidersSalesforce",
    "signature": "DeleteIdentityprovidersSalesforce()",
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIdentityprovidersSalesforceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Delete Salesforce Identity Provider\n                Object result = apiInstance.DeleteIdentityprovidersSalesforce();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.DeleteIdentityprovidersSalesforce: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityproviders": {
    "operationId": "getidentityproviders",
    "functionName": "GetIdentityproviders",
    "signature": "GetIdentityproviders()",
    "return": "OAuthProviderEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // The list of identity providers\n                OAuthProviderEntityListing result = apiInstance.GetIdentityproviders();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityproviders: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersadfs": {
    "operationId": "getidentityprovidersadfs",
    "functionName": "GetIdentityprovidersAdfs",
    "signature": "GetIdentityprovidersAdfs()",
    "return": "ADFS",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersAdfsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get ADFS Identity Provider\n                ADFS result = apiInstance.GetIdentityprovidersAdfs();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersAdfs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityproviderscic": {
    "operationId": "getidentityproviderscic",
    "functionName": "GetIdentityprovidersCic",
    "signature": "GetIdentityprovidersCic()",
    "return": "CustomerInteractionCenter",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersCicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get Customer Interaction Center (CIC) Identity Provider\n                CustomerInteractionCenter result = apiInstance.GetIdentityprovidersCic();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersCic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersgeneric": {
    "operationId": "getidentityprovidersgeneric",
    "functionName": "GetIdentityprovidersGeneric",
    "signature": "GetIdentityprovidersGeneric()",
    "return": "GenericSAML",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersGenericExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get Generic SAML Identity Provider\n                GenericSAML result = apiInstance.GetIdentityprovidersGeneric();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersGeneric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersgsuite": {
    "operationId": "getidentityprovidersgsuite",
    "functionName": "GetIdentityprovidersGsuite",
    "signature": "GetIdentityprovidersGsuite()",
    "return": "GSuite",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersGsuiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get G Suite Identity Provider\n                GSuite result = apiInstance.GetIdentityprovidersGsuite();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersGsuite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersidentitynow": {
    "operationId": "getidentityprovidersidentitynow",
    "functionName": "GetIdentityprovidersIdentitynow",
    "signature": "GetIdentityprovidersIdentitynow()",
    "return": "IdentityNow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersIdentitynowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get IdentityNow Provider\n                IdentityNow result = apiInstance.GetIdentityprovidersIdentitynow();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersIdentitynow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersokta": {
    "operationId": "getidentityprovidersokta",
    "functionName": "GetIdentityprovidersOkta",
    "signature": "GetIdentityprovidersOkta()",
    "return": "Okta",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersOktaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get Okta Identity Provider\n                Okta result = apiInstance.GetIdentityprovidersOkta();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersOkta: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersonelogin": {
    "operationId": "getidentityprovidersonelogin",
    "functionName": "GetIdentityprovidersOnelogin",
    "signature": "GetIdentityprovidersOnelogin()",
    "return": "OneLogin",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersOneloginExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get OneLogin Identity Provider\n                OneLogin result = apiInstance.GetIdentityprovidersOnelogin();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersOnelogin: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityprovidersping": {
    "operationId": "getidentityprovidersping",
    "functionName": "GetIdentityprovidersPing",
    "signature": "GetIdentityprovidersPing()",
    "return": "PingIdentity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersPingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get Ping Identity Provider\n                PingIdentity result = apiInstance.GetIdentityprovidersPing();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersPing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityproviderspurecloud": {
    "operationId": "getidentityproviderspurecloud",
    "functionName": "GetIdentityprovidersPurecloud",
    "signature": "GetIdentityprovidersPurecloud()",
    "return": "PureCloudPlatform.Client.V2.Model.PureCloud",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersPurecloudExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get PureCloud Identity Provider\n                PureCloudPlatform.Client.V2.Model.PureCloud result = apiInstance.GetIdentityprovidersPurecloud();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersPurecloud: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityproviderspureengage": {
    "operationId": "getidentityproviderspureengage",
    "functionName": "GetIdentityprovidersPureengage",
    "signature": "GetIdentityprovidersPureengage()",
    "return": "PureEngage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersPureengageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get PureEngage Identity Provider\n                PureEngage result = apiInstance.GetIdentityprovidersPureengage();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersPureengage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getidentityproviderssalesforce": {
    "operationId": "getidentityproviderssalesforce",
    "functionName": "GetIdentityprovidersSalesforce",
    "signature": "GetIdentityprovidersSalesforce()",
    "return": "Salesforce",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIdentityprovidersSalesforceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n\n            try\n            { \n                // Get Salesforce Identity Provider\n                Salesforce result = apiInstance.GetIdentityprovidersSalesforce();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.GetIdentityprovidersSalesforce: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersadfs": {
    "operationId": "putidentityprovidersadfs",
    "functionName": "PutIdentityprovidersAdfs",
    "signature": "PutIdentityprovidersAdfs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ADFS",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersAdfsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new ADFS(); // ADFS | Provider\n\n            try\n            { \n                // Update/Create ADFS Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersAdfs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersAdfs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityproviderscic": {
    "operationId": "putidentityproviderscic",
    "functionName": "PutIdentityprovidersCic",
    "signature": "PutIdentityprovidersCic(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CustomerInteractionCenter",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersCicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new CustomerInteractionCenter(); // CustomerInteractionCenter | Provider\n\n            try\n            { \n                // Update/Create Customer Interaction Center (CIC) Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersCic(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersCic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersgeneric": {
    "operationId": "putidentityprovidersgeneric",
    "functionName": "PutIdentityprovidersGeneric",
    "signature": "PutIdentityprovidersGeneric(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GenericSAML",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersGenericExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new GenericSAML(); // GenericSAML | Provider\n\n            try\n            { \n                // Update/Create Generic SAML Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersGeneric(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersGeneric: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersgsuite": {
    "operationId": "putidentityprovidersgsuite",
    "functionName": "PutIdentityprovidersGsuite",
    "signature": "PutIdentityprovidersGsuite(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GSuite",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersGsuiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new GSuite(); // GSuite | Provider\n\n            try\n            { \n                // Update/Create G Suite Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersGsuite(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersGsuite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersidentitynow": {
    "operationId": "putidentityprovidersidentitynow",
    "functionName": "PutIdentityprovidersIdentitynow",
    "signature": "PutIdentityprovidersIdentitynow(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IdentityNow",
        "required": "true"
      }
    ],
    "return": "IdentityNow",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersIdentitynowExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new IdentityNow(); // IdentityNow | Provider\n\n            try\n            { \n                // Update/Create IdentityNow Provider\n                IdentityNow result = apiInstance.PutIdentityprovidersIdentitynow(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersIdentitynow: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersokta": {
    "operationId": "putidentityprovidersokta",
    "functionName": "PutIdentityprovidersOkta",
    "signature": "PutIdentityprovidersOkta(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Okta",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersOktaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new Okta(); // Okta | Provider\n\n            try\n            { \n                // Update/Create Okta Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersOkta(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersOkta: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersonelogin": {
    "operationId": "putidentityprovidersonelogin",
    "functionName": "PutIdentityprovidersOnelogin",
    "signature": "PutIdentityprovidersOnelogin(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OneLogin",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersOneloginExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new OneLogin(); // OneLogin | Provider\n\n            try\n            { \n                // Update/Create OneLogin Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersOnelogin(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersOnelogin: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityprovidersping": {
    "operationId": "putidentityprovidersping",
    "functionName": "PutIdentityprovidersPing",
    "signature": "PutIdentityprovidersPing(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PingIdentity",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersPingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new PingIdentity(); // PingIdentity | Provider\n\n            try\n            { \n                // Update/Create Ping Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersPing(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersPing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityproviderspurecloud": {
    "operationId": "putidentityproviderspurecloud",
    "functionName": "PutIdentityprovidersPurecloud",
    "signature": "PutIdentityprovidersPurecloud(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PureCloud",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersPurecloudExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new PureCloud(); // PureCloud | Provider\n\n            try\n            { \n                // Update/Create PureCloud Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersPurecloud(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersPurecloud: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityproviderspureengage": {
    "operationId": "putidentityproviderspureengage",
    "functionName": "PutIdentityprovidersPureengage",
    "signature": "PutIdentityprovidersPureengage(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PureEngage",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersPureengageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new PureEngage(); // PureEngage | Provider\n\n            try\n            { \n                // Update/Create PureEngage Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersPureengage(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersPureengage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putidentityproviderssalesforce": {
    "operationId": "putidentityproviderssalesforce",
    "functionName": "PutIdentityprovidersSalesforce",
    "signature": "PutIdentityprovidersSalesforce(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Salesforce",
        "required": "true"
      }
    ],
    "return": "OAuthProvider",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIdentityprovidersSalesforceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IdentityProviderApi();\n            var body = new Salesforce(); // Salesforce | Provider\n\n            try\n            { \n                // Update/Create Salesforce Identity Provider\n                OAuthProvider result = apiInstance.PutIdentityprovidersSalesforce(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling IdentityProvider.PutIdentityprovidersSalesforce: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteintegration": {
    "operationId": "deleteintegration",
    "functionName": "DeleteIntegration",
    "signature": "DeleteIntegration(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Integration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIntegrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration Id\n\n            try\n            { \n                // Delete integration.\n                Integration result = apiInstance.DeleteIntegration(integrationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.DeleteIntegration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteintegrationsaction": {
    "operationId": "deleteintegrationsaction",
    "functionName": "DeleteIntegrationsAction",
    "signature": "DeleteIntegrationsAction(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIntegrationsActionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n\n            try\n            { \n                // Delete an Action\n                apiInstance.DeleteIntegrationsAction(actionId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.DeleteIntegrationsAction: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteintegrationsactiondraft": {
    "operationId": "deleteintegrationsactiondraft",
    "functionName": "DeleteIntegrationsActionDraft",
    "signature": "DeleteIntegrationsActionDraft(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIntegrationsActionDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n\n            try\n            { \n                // Delete a Draft\n                apiInstance.DeleteIntegrationsActionDraft(actionId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.DeleteIntegrationsActionDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteintegrationscredential": {
    "operationId": "deleteintegrationscredential",
    "functionName": "DeleteIntegrationsCredential",
    "signature": "DeleteIntegrationsCredential(credentialId)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteIntegrationsCredentialExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var credentialId = \"credentialId_example\";  // string | Credential ID\n\n            try\n            { \n                // Delete a set of credentials\n                apiInstance.DeleteIntegrationsCredential(credentialId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.DeleteIntegrationsCredential: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegration": {
    "operationId": "getintegration",
    "functionName": "GetIntegration",
    "signature": "GetIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration Id\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // Get integration.\n                Integration result = apiInstance.GetIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationconfigcurrent": {
    "operationId": "getintegrationconfigcurrent",
    "functionName": "GetIntegrationConfigCurrent",
    "signature": "GetIntegrationConfigCurrent(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "IntegrationConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationConfigCurrentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration Id\n\n            try\n            { \n                // Get integration configuration.\n                IntegrationConfiguration result = apiInstance.GetIntegrationConfigCurrent(integrationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationConfigCurrent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrations": {
    "operationId": "getintegrations",
    "functionName": "GetIntegrations",
    "signature": "GetIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "IntegrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // List integrations\n                IntegrationEntityListing result = apiInstance.GetIntegrations(pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsaction": {
    "operationId": "getintegrationsaction",
    "functionName": "GetIntegrationsAction",
    "signature": "GetIntegrationsAction(actionId, expand, includeConfig)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeConfig",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var expand = \"expand_example\";  // string | Indicates a field in the response which should be expanded. (optional) \n            var includeConfig = \"includeConfig_example\";  // bool? | Return config in response. (optional)  (default to false)\n\n            try\n            { \n                // Retrieves a single Action matching id.\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.GetIntegrationsAction(actionId, expand, includeConfig);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsAction: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactiondraft": {
    "operationId": "getintegrationsactiondraft",
    "functionName": "GetIntegrationsActionDraft",
    "signature": "GetIntegrationsActionDraft(actionId, expand, includeConfig)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeConfig",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var expand = \"expand_example\";  // string | Indicates a field in the response which should be expanded. (optional) \n            var includeConfig = \"includeConfig_example\";  // bool? | Return config in response. (optional)  (default to false)\n\n            try\n            { \n                // Retrieve a Draft\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.GetIntegrationsActionDraft(actionId, expand, includeConfig);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactiondraftschema": {
    "operationId": "getintegrationsactiondraftschema",
    "functionName": "GetIntegrationsActionDraftSchema",
    "signature": "GetIntegrationsActionDraftSchema(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionDraftSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var fileName = \"fileName_example\";  // string | Name of schema file to be retrieved for this draft.\n\n            try\n            { \n                // Retrieve schema for a Draft based on filename.\n                JsonSchemaDocument result = apiInstance.GetIntegrationsActionDraftSchema(actionId, fileName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionDraftSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactiondrafttemplate": {
    "operationId": "getintegrationsactiondrafttemplate",
    "functionName": "GetIntegrationsActionDraftTemplate",
    "signature": "GetIntegrationsActionDraftTemplate(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionDraftTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var fileName = \"fileName_example\";  // string | Name of template file to be retrieved for this action draft.\n\n            try\n            { \n                // Retrieve templates for a Draft based on filename.\n                string result = apiInstance.GetIntegrationsActionDraftTemplate(actionId, fileName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionDraftTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactiondraftvalidation": {
    "operationId": "getintegrationsactiondraftvalidation",
    "functionName": "GetIntegrationsActionDraftValidation",
    "signature": "GetIntegrationsActionDraftValidation(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DraftValidationResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionDraftValidationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n\n            try\n            { \n                // Validate current Draft configuration.\n                DraftValidationResult result = apiInstance.GetIntegrationsActionDraftValidation(actionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionDraftValidation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactionschema": {
    "operationId": "getintegrationsactionschema",
    "functionName": "GetIntegrationsActionSchema",
    "signature": "GetIntegrationsActionSchema(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var fileName = \"fileName_example\";  // string | Name of schema file to be retrieved for this action.\n\n            try\n            { \n                // Retrieve schema for an action based on filename.\n                JsonSchemaDocument result = apiInstance.GetIntegrationsActionSchema(actionId, fileName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactiontemplate": {
    "operationId": "getintegrationsactiontemplate",
    "functionName": "GetIntegrationsActionTemplate",
    "signature": "GetIntegrationsActionTemplate(actionId, fileName)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var fileName = \"fileName_example\";  // string | Name of template file to be retrieved for this action.\n\n            try\n            { \n                // Retrieve text of templates for an action based on filename.\n                string result = apiInstance.GetIntegrationsActionTemplate(actionId, fileName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactions": {
    "operationId": "getintegrationsactions",
    "functionName": "GetIntegrationsActions",
    "signature": "GetIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeAuthActions",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ActionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var sortBy = \"sortBy_example\";  // string | Root level field name to sort on. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Direction to sort 'sortBy' field. (optional)  (default to asc)\n            var category = \"category_example\";  // string | Filter by category name. (optional) \n            var name = \"name_example\";  // string | Filter by partial or complete action name. (optional) \n            var ids = \"ids_example\";  // string | Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids. (optional) \n            var secure = \"secure_example\";  // string | Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions. (optional) \n            var includeAuthActions = \"includeAuthActions_example\";  // string | Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (optional)  (default to false)\n\n            try\n            { \n                // Retrieves all actions associated with filters passed in via query param.\n                ActionEntityListing result = apiInstance.GetIntegrationsActions(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactionscategories": {
    "operationId": "getintegrationsactionscategories",
    "functionName": "GetIntegrationsActionsCategories",
    "signature": "GetIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CategoryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionsCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var sortBy = \"sortBy_example\";  // string | Root level field name to sort on.  Only 'name' is supported on this endpoint. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Direction to sort 'sortBy' field. (optional)  (default to asc)\n            var secure = \"secure_example\";  // string | Filter to only include secure actions. True will only include actions marked secured. False will include only unsecure actions. Do not use filter if you want all Actions. (optional) \n\n            try\n            { \n                // Retrieves all categories of available Actions\n                CategoryEntityListing result = apiInstance.GetIntegrationsActionsCategories(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, secure);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionsCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsactionsdrafts": {
    "operationId": "getintegrationsactionsdrafts",
    "functionName": "GetIntegrationsActionsDrafts",
    "signature": "GetIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secure",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeAuthActions",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ActionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsActionsDraftsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var sortBy = \"sortBy_example\";  // string | Root level field name to sort on. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Direction to sort 'sortBy' field. (optional)  (default to asc)\n            var category = \"category_example\";  // string | Filter by category name. (optional) \n            var name = \"name_example\";  // string | Filter by partial or complete action name. (optional) \n            var ids = \"ids_example\";  // string | Filter by action Id. Can be a comma separated list to request multiple actions.  Limit of 50 Ids. (optional) \n            var secure = \"secure_example\";  // string | Filter based on 'secure' configuration option. True will only return actions marked as secure. False will return only non-secure actions. Do not use filter if you want all Actions. (optional) \n            var includeAuthActions = \"includeAuthActions_example\";  // string | Whether or not to include authentication actions in the response. These actions are not directly executable. Some integrations create them and will run them as needed to refresh authentication information for other actions. (optional)  (default to false)\n\n            try\n            { \n                // Retrieves all action drafts associated with the filters passed in via query param.\n                ActionEntityListing result = apiInstance.GetIntegrationsActionsDrafts(pageSize, pageNumber, nextPage, previousPage, sortBy, sortOrder, category, name, ids, secure, includeAuthActions);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsActionsDrafts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsbotconnectorintegrationidbot": {
    "operationId": "getintegrationsbotconnectorintegrationidbot",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBot",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "version",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "BotConnectorBot",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsBotconnectorIntegrationIdBotExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | The integration ID for this group of bots\n            var botId = \"botId_example\";  // string | The botID for this bot\n            var version = \"version_example\";  // string | Specific Version (optional) \n\n            try\n            { \n                // Get a specific botConnector bot, plus versions, for this integration\n                BotConnectorBot result = apiInstance.GetIntegrationsBotconnectorIntegrationIdBot(integrationId, botId, version);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsBotconnectorIntegrationIdBot: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsbotconnectorintegrationidbotversions": {
    "operationId": "getintegrationsbotconnectorintegrationidbotversions",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBotVersions",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "BotConnectorBotVersionSummaryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsBotconnectorIntegrationIdBotVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | The integration ID for this bot group\n            var botId = \"botId_example\";  // string | The botID for this bot\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a list of bot versions for a bot\n                BotConnectorBotVersionSummaryEntityListing result = apiInstance.GetIntegrationsBotconnectorIntegrationIdBotVersions(integrationId, botId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsBotconnectorIntegrationIdBotVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsbotconnectorintegrationidbots": {
    "operationId": "getintegrationsbotconnectorintegrationidbots",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBots",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBots(integrationId)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BotList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsBotconnectorIntegrationIdBotsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | The integration ID for this group of bots\n\n            try\n            { \n                // Get a list of botConnector bots for this integration\n                BotList result = apiInstance.GetIntegrationsBotconnectorIntegrationIdBots(integrationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsBotconnectorIntegrationIdBots: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsbotconnectorintegrationidbotssummaries": {
    "operationId": "getintegrationsbotconnectorintegrationidbotssummaries",
    "functionName": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries",
    "signature": "GetIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "BotConnectorBotSummaryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsBotconnectorIntegrationIdBotsSummariesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | The integration ID for this group of bots\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a summary list of botConnector bots for this integration\n                BotConnectorBotSummaryEntityListing result = apiInstance.GetIntegrationsBotconnectorIntegrationIdBotsSummaries(integrationId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsBotconnectorIntegrationIdBotsSummaries: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsclientapps": {
    "operationId": "getintegrationsclientapps",
    "functionName": "GetIntegrationsClientapps",
    "signature": "GetIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ClientAppEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsClientappsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // List permitted client app integrations for the logged in user\n                ClientAppEntityListing result = apiInstance.GetIntegrationsClientapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsClientapps: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsclientappsunifiedcommunications": {
    "operationId": "getintegrationsclientappsunifiedcommunications",
    "functionName": "GetIntegrationsClientappsUnifiedcommunications",
    "signature": "GetIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UCIntegrationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsClientappsUnifiedcommunicationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // UC integration client application configuration.\n                UCIntegrationListing result = apiInstance.GetIntegrationsClientappsUnifiedcommunications(pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsClientappsUnifiedcommunications: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationscredential": {
    "operationId": "getintegrationscredential",
    "functionName": "GetIntegrationsCredential",
    "signature": "GetIntegrationsCredential(credentialId)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Credential",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsCredentialExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var credentialId = \"credentialId_example\";  // string | Credential ID\n\n            try\n            { \n                // Get a single credential with sensitive fields redacted\n                Credential result = apiInstance.GetIntegrationsCredential(credentialId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsCredential: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationscredentials": {
    "operationId": "getintegrationscredentials",
    "functionName": "GetIntegrationsCredentials",
    "signature": "GetIntegrationsCredentials(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "CredentialInfoListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsCredentialsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // List multiple sets of credentials\n                CredentialInfoListing result = apiInstance.GetIntegrationsCredentials(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsCredentials: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationscredentialstypes": {
    "operationId": "getintegrationscredentialstypes",
    "functionName": "GetIntegrationsCredentialsTypes",
    "signature": "GetIntegrationsCredentialsTypes()",
    "return": "CredentialTypeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsCredentialsTypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n\n            try\n            { \n                // List all credential types\n                CredentialTypeListing result = apiInstance.GetIntegrationsCredentialsTypes();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsCredentialsTypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechdialogflowagent": {
    "operationId": "getintegrationsspeechdialogflowagent",
    "functionName": "GetIntegrationsSpeechDialogflowAgent",
    "signature": "GetIntegrationsSpeechDialogflowAgent(agentId)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DialogflowAgent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechDialogflowAgentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var agentId = \"agentId_example\";  // string | The agent ID\n\n            try\n            { \n                // Get details about a Dialogflow agent\n                DialogflowAgent result = apiInstance.GetIntegrationsSpeechDialogflowAgent(agentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechDialogflowAgent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechdialogflowagents": {
    "operationId": "getintegrationsspeechdialogflowagents",
    "functionName": "GetIntegrationsSpeechDialogflowAgents",
    "signature": "GetIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DialogflowAgentSummaryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechDialogflowAgentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var name = \"name_example\";  // string | Filter on agent name (optional) \n\n            try\n            { \n                // Get a list of Dialogflow agents in the customers' Google accounts\n                DialogflowAgentSummaryEntityListing result = apiInstance.GetIntegrationsSpeechDialogflowAgents(pageNumber, pageSize, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechDialogflowAgents: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechlexbotalias": {
    "operationId": "getintegrationsspeechlexbotalias",
    "functionName": "GetIntegrationsSpeechLexBotAlias",
    "signature": "GetIntegrationsSpeechLexBotAlias(aliasId)",
    "parameters": [
      {
        "name": "aliasId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LexBotAlias",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechLexBotAliasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var aliasId = \"aliasId_example\";  // string | The alias ID\n\n            try\n            { \n                // Get details about a Lex bot alias\n                LexBotAlias result = apiInstance.GetIntegrationsSpeechLexBotAlias(aliasId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechLexBotAlias: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechlexbotbotidaliases": {
    "operationId": "getintegrationsspeechlexbotbotidaliases",
    "functionName": "GetIntegrationsSpeechLexBotBotIdAliases",
    "signature": "GetIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name)",
    "parameters": [
      {
        "name": "botId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "status",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LexBotAliasEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechLexBotBotIdAliasesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var botId = \"botId_example\";  // string | The bot ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var status = \"status_example\";  // string | Filter on alias status (optional) \n            var name = \"name_example\";  // string | Filter on alias name (optional) \n\n            try\n            { \n                // Get a list of aliases for a bot in the customer's AWS accounts\n                LexBotAliasEntityListing result = apiInstance.GetIntegrationsSpeechLexBotBotIdAliases(botId, pageNumber, pageSize, status, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechLexBotBotIdAliases: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechlexbots": {
    "operationId": "getintegrationsspeechlexbots",
    "functionName": "GetIntegrationsSpeechLexBots",
    "signature": "GetIntegrationsSpeechLexBots(pageNumber, pageSize, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LexBotEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechLexBotsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var name = \"name_example\";  // string | Filter on bot name (optional) \n\n            try\n            { \n                // Get a list of Lex bots in the customers' AWS accounts\n                LexBotEntityListing result = apiInstance.GetIntegrationsSpeechLexBots(pageNumber, pageSize, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechLexBots: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechttsengine": {
    "operationId": "getintegrationsspeechttsengine",
    "functionName": "GetIntegrationsSpeechTtsEngine",
    "signature": "GetIntegrationsSpeechTtsEngine(engineId, includeVoices)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeVoices",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "TtsEngineEntity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechTtsEngineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var engineId = \"engineId_example\";  // string | The engine ID\n            var includeVoices = true;  // bool? | Include voices for the engine (optional)  (default to false)\n\n            try\n            { \n                // Get details about a TTS engine\n                TtsEngineEntity result = apiInstance.GetIntegrationsSpeechTtsEngine(engineId, includeVoices);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechTtsEngine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechttsenginevoice": {
    "operationId": "getintegrationsspeechttsenginevoice",
    "functionName": "GetIntegrationsSpeechTtsEngineVoice",
    "signature": "GetIntegrationsSpeechTtsEngineVoice(engineId, voiceId)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "voiceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TtsVoiceEntity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechTtsEngineVoiceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var engineId = \"engineId_example\";  // string | The engine ID\n            var voiceId = \"voiceId_example\";  // string | The voice ID\n\n            try\n            { \n                // Get details about a specific voice for a TTS engine\n                TtsVoiceEntity result = apiInstance.GetIntegrationsSpeechTtsEngineVoice(engineId, voiceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechTtsEngineVoice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechttsenginevoices": {
    "operationId": "getintegrationsspeechttsenginevoices",
    "functionName": "GetIntegrationsSpeechTtsEngineVoices",
    "signature": "GetIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "engineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TtsVoiceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechTtsEngineVoicesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var engineId = \"engineId_example\";  // string | The engine ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get a list of voices for a TTS engine\n                TtsVoiceEntityListing result = apiInstance.GetIntegrationsSpeechTtsEngineVoices(engineId, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechTtsEngineVoices: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechttsengines": {
    "operationId": "getintegrationsspeechttsengines",
    "functionName": "GetIntegrationsSpeechTtsEngines",
    "signature": "GetIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "includeVoices",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TtsEngineEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechTtsEnginesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var includeVoices = true;  // bool? | Include voices for the engine (optional)  (default to false)\n            var name = \"name_example\";  // string | Filter on engine name (optional) \n            var language = \"language_example\";  // string | Filter on supported language. If includeVoices=true then the voices are also filtered. (optional) \n\n            try\n            { \n                // Get a list of TTS engines enabled for org\n                TtsEngineEntityListing result = apiInstance.GetIntegrationsSpeechTtsEngines(pageNumber, pageSize, includeVoices, name, language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechTtsEngines: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsspeechttssettings": {
    "operationId": "getintegrationsspeechttssettings",
    "functionName": "GetIntegrationsSpeechTtsSettings",
    "signature": "GetIntegrationsSpeechTtsSettings()",
    "return": "TtsSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsSpeechTtsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n\n            try\n            { \n                // Get TTS settings for an org\n                TtsSettings result = apiInstance.GetIntegrationsSpeechTtsSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsSpeechTtsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationstype": {
    "operationId": "getintegrationstype",
    "functionName": "GetIntegrationsType",
    "signature": "GetIntegrationsType(typeId)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "IntegrationType",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsTypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var typeId = \"typeId_example\";  // string | Integration Type Id\n\n            try\n            { \n                // Get integration type.\n                IntegrationType result = apiInstance.GetIntegrationsType(typeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsType: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationstypeconfigschema": {
    "operationId": "getintegrationstypeconfigschema",
    "functionName": "GetIntegrationsTypeConfigschema",
    "signature": "GetIntegrationsTypeConfigschema(typeId, configType)",
    "parameters": [
      {
        "name": "typeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "configType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "JsonSchemaDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsTypeConfigschemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var typeId = \"typeId_example\";  // string | Integration Type Id\n            var configType = \"configType_example\";  // string | Config schema type\n\n            try\n            { \n                // Get properties config schema for an integration type.\n                JsonSchemaDocument result = apiInstance.GetIntegrationsTypeConfigschema(typeId, configType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsTypeConfigschema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationstypes": {
    "operationId": "getintegrationstypes",
    "functionName": "GetIntegrationsTypes",
    "signature": "GetIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "IntegrationTypeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsTypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n\n            try\n            { \n                // List integration types\n                IntegrationTypeEntityListing result = apiInstance.GetIntegrationsTypes(pageSize, pageNumber, sortBy, expand, nextPage, previousPage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsTypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getintegrationsuserapps": {
    "operationId": "getintegrationsuserapps",
    "functionName": "GetIntegrationsUserapps",
    "signature": "GetIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "appHost",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserAppEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIntegrationsUserappsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var appHost = \"appHost_example\";  // string | The type of UserApp to filter by (optional) \n\n            try\n            { \n                // List permitted user app integrations for the logged in user\n                UserAppEntityListing result = apiInstance.GetIntegrationsUserapps(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, appHost);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.GetIntegrationsUserapps: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchintegration": {
    "operationId": "patchintegration",
    "functionName": "PatchIntegration",
    "signature": "PatchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "Integration",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchIntegrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration Id\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var body = new Integration(); // Integration | Integration Update (optional) \n\n            try\n            { \n                // Update an integration.\n                Integration result = apiInstance.PatchIntegration(integrationId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PatchIntegration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchintegrationsaction": {
    "operationId": "patchintegrationsaction",
    "functionName": "PatchIntegrationsAction",
    "signature": "PatchIntegrationsAction(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateActionInput",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchIntegrationsActionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new UpdateActionInput(); // UpdateActionInput | Input used to patch the Action.\n\n            try\n            { \n                // Patch an Action\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PatchIntegrationsAction(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PatchIntegrationsAction: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchintegrationsactiondraft": {
    "operationId": "patchintegrationsactiondraft",
    "functionName": "PatchIntegrationsActionDraft",
    "signature": "PatchIntegrationsActionDraft(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateDraftInput",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchIntegrationsActionDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new UpdateDraftInput(); // UpdateDraftInput | Input used to patch the Action Draft.\n\n            try\n            { \n                // Update an existing Draft\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PatchIntegrationsActionDraft(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PatchIntegrationsActionDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrations": {
    "operationId": "postintegrations",
    "functionName": "PostIntegrations",
    "signature": "PostIntegrations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateIntegrationRequest",
        "required": "false"
      }
    ],
    "return": "Integration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var body = new CreateIntegrationRequest(); // CreateIntegrationRequest | Integration (optional) \n\n            try\n            { \n                // Create an integration.\n                Integration result = apiInstance.PostIntegrations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactiondraft": {
    "operationId": "postintegrationsactiondraft",
    "functionName": "PostIntegrationsActionDraft",
    "signature": "PostIntegrationsActionDraft(actionId)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n\n            try\n            { \n                // Create a new Draft from existing Action\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PostIntegrationsActionDraft(actionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactiondraftpublish": {
    "operationId": "postintegrationsactiondraftpublish",
    "functionName": "PostIntegrationsActionDraftPublish",
    "signature": "PostIntegrationsActionDraftPublish(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PublishDraftInput",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionDraftPublishExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new PublishDraftInput(); // PublishDraftInput | Input used to patch the Action.\n\n            try\n            { \n                // Publish a Draft and make it the active Action configuration\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PostIntegrationsActionDraftPublish(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionDraftPublish: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactiondrafttest": {
    "operationId": "postintegrationsactiondrafttest",
    "functionName": "PostIntegrationsActionDraftTest",
    "signature": "PostIntegrationsActionDraftTest(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "TestExecutionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionDraftTestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new Object(); // Object | Map of parameters used for variable substitution.\n\n            try\n            { \n                // Test the execution of a draft. Responses will show execution steps broken out with intermediate results to help in debugging.\n                TestExecutionResult result = apiInstance.PostIntegrationsActionDraftTest(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionDraftTest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactionexecute": {
    "operationId": "postintegrationsactionexecute",
    "functionName": "PostIntegrationsActionExecute",
    "signature": "PostIntegrationsActionExecute(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionExecuteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new Object(); // Object | Map of parameters used for variable substitution.\n\n            try\n            { \n                // Execute Action and return response from 3rd party.  Responses will follow the schemas defined on the Action for success and error.\n                Object result = apiInstance.PostIntegrationsActionExecute(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionExecute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactiontest": {
    "operationId": "postintegrationsactiontest",
    "functionName": "PostIntegrationsActionTest",
    "signature": "PostIntegrationsActionTest(actionId, body)",
    "parameters": [
      {
        "name": "actionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "TestExecutionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionTestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var actionId = \"actionId_example\";  // string | actionId\n            var body = new Object(); // Object | Map of parameters used for variable substitution.\n\n            try\n            { \n                // Test the execution of an action. Responses will show execution steps broken out with intermediate results to help in debugging.\n                TestExecutionResult result = apiInstance.PostIntegrationsActionTest(actionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionTest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactions": {
    "operationId": "postintegrationsactions",
    "functionName": "PostIntegrationsActions",
    "signature": "PostIntegrationsActions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PostActionInput",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var body = new PostActionInput(); // PostActionInput | Input used to create Action.\n\n            try\n            { \n                // Create a new Action\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PostIntegrationsActions(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationsactionsdrafts": {
    "operationId": "postintegrationsactionsdrafts",
    "functionName": "PostIntegrationsActionsDrafts",
    "signature": "PostIntegrationsActionsDrafts(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PostActionInput",
        "required": "true"
      }
    ],
    "return": "PureCloudPlatform.Client.V2.Model.Action",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsActionsDraftsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var body = new PostActionInput(); // PostActionInput | Input used to create Action Draft.\n\n            try\n            { \n                // Create a new Draft\n                PureCloudPlatform.Client.V2.Model.Action result = apiInstance.PostIntegrationsActionsDrafts(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsActionsDrafts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postintegrationscredentials": {
    "operationId": "postintegrationscredentials",
    "functionName": "PostIntegrationsCredentials",
    "signature": "PostIntegrationsCredentials(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "CredentialInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostIntegrationsCredentialsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var body = new Credential(); // Credential | Credential (optional) \n\n            try\n            { \n                // Create a set of credentials\n                CredentialInfo result = apiInstance.PostIntegrationsCredentials(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PostIntegrationsCredentials: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putintegrationconfigcurrent": {
    "operationId": "putintegrationconfigcurrent",
    "functionName": "PutIntegrationConfigCurrent",
    "signature": "PutIntegrationConfigCurrent(integrationId, body)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "IntegrationConfiguration",
        "required": "false"
      }
    ],
    "return": "IntegrationConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIntegrationConfigCurrentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | Integration Id\n            var body = new IntegrationConfiguration(); // IntegrationConfiguration | Integration Configuration (optional) \n\n            try\n            { \n                // Update integration configuration.\n                IntegrationConfiguration result = apiInstance.PutIntegrationConfigCurrent(integrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PutIntegrationConfigCurrent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putintegrationsbotconnectorintegrationidbots": {
    "operationId": "putintegrationsbotconnectorintegrationidbots",
    "functionName": "PutIntegrationsBotconnectorIntegrationIdBots",
    "signature": "PutIntegrationsBotconnectorIntegrationIdBots(integrationId, botList)",
    "parameters": [
      {
        "name": "integrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "botList",
        "type": "BotList",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIntegrationsBotconnectorIntegrationIdBotsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var integrationId = \"integrationId_example\";  // string | The integration ID for this group of bots\n            var botList = new BotList(); // BotList | \n\n            try\n            { \n                // Set a list of botConnector bots plus versions for this integration\n                apiInstance.PutIntegrationsBotconnectorIntegrationIdBots(integrationId, botList);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PutIntegrationsBotconnectorIntegrationIdBots: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putintegrationscredential": {
    "operationId": "putintegrationscredential",
    "functionName": "PutIntegrationsCredential",
    "signature": "PutIntegrationsCredential(credentialId, body)",
    "parameters": [
      {
        "name": "credentialId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Credential",
        "required": "false"
      }
    ],
    "return": "CredentialInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIntegrationsCredentialExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var credentialId = \"credentialId_example\";  // string | Credential ID\n            var body = new Credential(); // Credential | Credential (optional) \n\n            try\n            { \n                // Update a set of credentials\n                CredentialInfo result = apiInstance.PutIntegrationsCredential(credentialId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PutIntegrationsCredential: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putintegrationsspeechttssettings": {
    "operationId": "putintegrationsspeechttssettings",
    "functionName": "PutIntegrationsSpeechTtsSettings",
    "signature": "PutIntegrationsSpeechTtsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TtsSettings",
        "required": "true"
      }
    ],
    "return": "TtsSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutIntegrationsSpeechTtsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new IntegrationsApi();\n            var body = new TtsSettings(); // TtsSettings | Updated TtsSettings\n\n            try\n            { \n                // Update TTS settings for an org\n                TtsSettings result = apiInstance.PutIntegrationsSpeechTtsSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Integrations.PutIntegrationsSpeechTtsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletejourneyactionmap": {
    "operationId": "deletejourneyactionmap",
    "functionName": "DeleteJourneyActionmap",
    "signature": "DeleteJourneyActionmap(actionMapId)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteJourneyActionmapExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionMapId = \"actionMapId_example\";  // string | ID of the action map.\n\n            try\n            { \n                // Delete single action map.\n                apiInstance.DeleteJourneyActionmap(actionMapId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.DeleteJourneyActionmap: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletejourneyactiontemplate": {
    "operationId": "deletejourneyactiontemplate",
    "functionName": "DeleteJourneyActiontemplate",
    "signature": "DeleteJourneyActiontemplate(actionTemplateId, hardDelete)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "hardDelete",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteJourneyActiontemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionTemplateId = \"actionTemplateId_example\";  // string | ID of the action template.\n            var hardDelete = true;  // bool? | Determines whether Action Template should be soft-deleted (have it's state set to deleted) or hard-deleted (permanently removed). Set to false (soft-delete) by default. (optional) \n\n            try\n            { \n                // Delete a single action template.\n                apiInstance.DeleteJourneyActiontemplate(actionTemplateId, hardDelete);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.DeleteJourneyActiontemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletejourneyoutcome": {
    "operationId": "deletejourneyoutcome",
    "functionName": "DeleteJourneyOutcome",
    "signature": "DeleteJourneyOutcome(outcomeId)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteJourneyOutcomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var outcomeId = \"outcomeId_example\";  // string | ID of the outcome.\n\n            try\n            { \n                // Delete an outcome.\n                apiInstance.DeleteJourneyOutcome(outcomeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.DeleteJourneyOutcome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletejourneysegment": {
    "operationId": "deletejourneysegment",
    "functionName": "DeleteJourneySegment",
    "signature": "DeleteJourneySegment(segmentId)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteJourneySegmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var segmentId = \"segmentId_example\";  // string | ID of the segment.\n\n            try\n            { \n                // Delete a segment.\n                apiInstance.DeleteJourneySegment(segmentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.DeleteJourneySegment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactionmap": {
    "operationId": "getjourneyactionmap",
    "functionName": "GetJourneyActionmap",
    "signature": "GetJourneyActionmap(actionMapId)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ActionMap",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActionmapExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionMapId = \"actionMapId_example\";  // string | ID of the action map.\n\n            try\n            { \n                // Retrieve a single action map.\n                ActionMap result = apiInstance.GetJourneyActionmap(actionMapId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActionmap: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactionmaps": {
    "operationId": "getjourneyactionmaps",
    "functionName": "GetJourneyActionmaps",
    "signature": "GetJourneyActionmaps(pageNumber, pageSize, sortBy, filterField, filterValue, actionMapIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "filterField",
        "type": "string",
        "required": "false"
      },
      {
        "name": "filterValue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "actionMapIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ActionMapListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActionmapsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional) \n            var filterField = \"filterField_example\";  // string | Field to filter by (e.g. filterField=weight or filterField=action.actionTemplate.id). Requires 'filterField' to also be set. (optional) \n            var filterValue = \"filterValue_example\";  // string | Value to filter by. Requires 'filterValue' to also be set. (optional) \n            var actionMapIds = new List<string>(); // List<string> | IDs of action maps to return. Use of this parameter is not compatible with pagination, filtering, sorting or querying. A maximum of 100 action maps are allowed per request. (optional) \n            var queryFields = new List<string>(); // List<string> | Action Map field(s) to query on. Requires 'queryValue' to also be set. (optional) \n            var queryValue = \"queryValue_example\";  // string | Value to query on. Requires 'queryFields' to also be set. (optional) \n\n            try\n            { \n                // Retrieve all action maps.\n                ActionMapListing result = apiInstance.GetJourneyActionmaps(pageNumber, pageSize, sortBy, filterField, filterValue, actionMapIds, queryFields, queryValue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActionmaps: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactionmapsestimatesjob": {
    "operationId": "getjourneyactionmapsestimatesjob",
    "functionName": "GetJourneyActionmapsEstimatesJob",
    "signature": "GetJourneyActionmapsEstimatesJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActionmapsEstimatesJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var jobId = \"jobId_example\";  // string | ID of the job.\n\n            try\n            { \n                // Get status of job.\n                string result = apiInstance.GetJourneyActionmapsEstimatesJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActionmapsEstimatesJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactionmapsestimatesjobresults": {
    "operationId": "getjourneyactionmapsestimatesjobresults",
    "functionName": "GetJourneyActionmapsEstimatesJobResults",
    "signature": "GetJourneyActionmapsEstimatesJobResults(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ActionMapEstimateResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActionmapsEstimatesJobResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var jobId = \"jobId_example\";  // string | ID of the job.\n\n            try\n            { \n                // Get estimates from completed job.\n                ActionMapEstimateResult result = apiInstance.GetJourneyActionmapsEstimatesJobResults(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActionmapsEstimatesJobResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactiontarget": {
    "operationId": "getjourneyactiontarget",
    "functionName": "GetJourneyActiontarget",
    "signature": "GetJourneyActiontarget(actionTargetId)",
    "parameters": [
      {
        "name": "actionTargetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ActionTarget",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActiontargetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionTargetId = \"actionTargetId_example\";  // string | ID of the action target.\n\n            try\n            { \n                // Retrieve a single action target.\n                ActionTarget result = apiInstance.GetJourneyActiontarget(actionTargetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActiontarget: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactiontargets": {
    "operationId": "getjourneyactiontargets",
    "functionName": "GetJourneyActiontargets",
    "signature": "GetJourneyActiontargets(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ActionTargetListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActiontargetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Retrieve all action targets.\n                ActionTargetListing result = apiInstance.GetJourneyActiontargets(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActiontargets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactiontemplate": {
    "operationId": "getjourneyactiontemplate",
    "functionName": "GetJourneyActiontemplate",
    "signature": "GetJourneyActiontemplate(actionTemplateId)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ActionTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActiontemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionTemplateId = \"actionTemplateId_example\";  // string | ID of the action template.\n\n            try\n            { \n                // Retrieve a single action template.\n                ActionTemplate result = apiInstance.GetJourneyActiontemplate(actionTemplateId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActiontemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyactiontemplates": {
    "operationId": "getjourneyactiontemplates",
    "functionName": "GetJourneyActiontemplates",
    "signature": "GetJourneyActiontemplates(pageNumber, pageSize, sortBy, mediaType, state, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ActionTemplateListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyActiontemplatesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Field(s) to sort by. Prefix with '-' for descending (e.g. sortBy=name,-createdDate). (optional) \n            var mediaType = \"mediaType_example\";  // string | Media type (optional) \n            var state = \"state_example\";  // string | Action template state. (optional) \n            var queryFields = new List<string>(); // List<string> | ActionTemplate field(s) to query on. Requires 'queryValue' to also be set. (optional) \n            var queryValue = \"queryValue_example\";  // string | Value to query on. Requires 'queryFields' to also be set. (optional) \n\n            try\n            { \n                // Retrieve all action templates.\n                ActionTemplateListing result = apiInstance.GetJourneyActiontemplates(pageNumber, pageSize, sortBy, mediaType, state, queryFields, queryValue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyActiontemplates: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyoutcome": {
    "operationId": "getjourneyoutcome",
    "functionName": "GetJourneyOutcome",
    "signature": "GetJourneyOutcome(outcomeId)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Outcome",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyOutcomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var outcomeId = \"outcomeId_example\";  // string | ID of the outcome.\n\n            try\n            { \n                // Retrieve a single outcome.\n                Outcome result = apiInstance.GetJourneyOutcome(outcomeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyOutcome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneyoutcomes": {
    "operationId": "getjourneyoutcomes",
    "functionName": "GetJourneyOutcomes",
    "signature": "GetJourneyOutcomes(pageNumber, pageSize, sortBy, outcomeIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "outcomeIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OutcomeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneyOutcomesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional) \n            var outcomeIds = new List<string>(); // List<string> | IDs of outcomes to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 20 outcomes are allowed per request. (optional) \n            var queryFields = new List<string>(); // List<string> | Outcome field(s) to query on. Requires 'queryValue' to also be set. (optional) \n            var queryValue = \"queryValue_example\";  // string | Value to query on. Requires 'queryFields' to also be set. (optional) \n\n            try\n            { \n                // Retrieve all outcomes.\n                OutcomeListing result = apiInstance.GetJourneyOutcomes(pageNumber, pageSize, sortBy, outcomeIds, queryFields, queryValue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneyOutcomes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneysegment": {
    "operationId": "getjourneysegment",
    "functionName": "GetJourneySegment",
    "signature": "GetJourneySegment(segmentId)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "JourneySegment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneySegmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var segmentId = \"segmentId_example\";  // string | ID of the segment.\n\n            try\n            { \n                // Retrieve a single segment.\n                JourneySegment result = apiInstance.GetJourneySegment(segmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneySegment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneysegments": {
    "operationId": "getjourneysegments",
    "functionName": "GetJourneySegments",
    "signature": "GetJourneySegments(sortBy, pageSize, pageNumber, isActive, segmentIds, queryFields, queryValue)",
    "parameters": [
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "isActive",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "segmentIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryFields",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "queryValue",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SegmentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneySegmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var sortBy = \"sortBy_example\";  // string | Field(s) to sort by. The response can be sorted by any first level property on the Outcome response. Prefix with '-' for descending (e.g. sortBy=displayName,-createdDate). (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var isActive = true;  // bool? | Determines whether or not to show only active segments. (optional) \n            var segmentIds = new List<string>(); // List<string> | IDs of segments to return. Use of this parameter is not compatible with pagination, sorting or querying. A maximum of 100 segments are allowed per request. (optional) \n            var queryFields = new List<string>(); // List<string> | Segment field(s) to query on. Requires 'queryValue' to also be set. (optional) \n            var queryValue = \"queryValue_example\";  // string | Value to query on. Requires 'queryFields' to also be set. (optional) \n\n            try\n            { \n                // Retrieve all segments.\n                SegmentListing result = apiInstance.GetJourneySegments(sortBy, pageSize, pageNumber, isActive, segmentIds, queryFields, queryValue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneySegments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneysession": {
    "operationId": "getjourneysession",
    "functionName": "GetJourneySession",
    "signature": "GetJourneySession(sessionId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Session",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneySessionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var sessionId = \"sessionId_example\";  // string | ID of the session.\n\n            try\n            { \n                // Retrieve a single session.\n                Session result = apiInstance.GetJourneySession(sessionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneySession: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getjourneysessionoutcomescores": {
    "operationId": "getjourneysessionoutcomescores",
    "functionName": "GetJourneySessionOutcomescores",
    "signature": "GetJourneySessionOutcomescores(sessionId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutcomeScoresResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetJourneySessionOutcomescoresExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var sessionId = \"sessionId_example\";  // string | ID of the session.\n\n            try\n            { \n                // Retrieve latest outcome score associated with a session for all outcomes.\n                OutcomeScoresResult result = apiInstance.GetJourneySessionOutcomescores(sessionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.GetJourneySessionOutcomescores: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchjourneyactionmap": {
    "operationId": "patchjourneyactionmap",
    "functionName": "PatchJourneyActionmap",
    "signature": "PatchJourneyActionmap(actionMapId, body)",
    "parameters": [
      {
        "name": "actionMapId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionMap",
        "required": "false"
      }
    ],
    "return": "ActionMap",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchJourneyActionmapExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionMapId = \"actionMapId_example\";  // string | ID of the action map.\n            var body = new PatchActionMap(); // PatchActionMap |  (optional) \n\n            try\n            { \n                // Update single action map.\n                ActionMap result = apiInstance.PatchJourneyActionmap(actionMapId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PatchJourneyActionmap: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchjourneyactiontarget": {
    "operationId": "patchjourneyactiontarget",
    "functionName": "PatchJourneyActiontarget",
    "signature": "PatchJourneyActiontarget(actionTargetId, body)",
    "parameters": [
      {
        "name": "actionTargetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionTarget",
        "required": "false"
      }
    ],
    "return": "ActionTarget",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchJourneyActiontargetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionTargetId = \"actionTargetId_example\";  // string | ID of the action target.\n            var body = new PatchActionTarget(); // PatchActionTarget |  (optional) \n\n            try\n            { \n                // Update a single action target.\n                ActionTarget result = apiInstance.PatchJourneyActiontarget(actionTargetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PatchJourneyActiontarget: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchjourneyactiontemplate": {
    "operationId": "patchjourneyactiontemplate",
    "functionName": "PatchJourneyActiontemplate",
    "signature": "PatchJourneyActiontemplate(actionTemplateId, body)",
    "parameters": [
      {
        "name": "actionTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchActionTemplate",
        "required": "false"
      }
    ],
    "return": "ActionTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchJourneyActiontemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var actionTemplateId = \"actionTemplateId_example\";  // string | ID of the action template.\n            var body = new PatchActionTemplate(); // PatchActionTemplate |  (optional) \n\n            try\n            { \n                // Update a single action template.\n                ActionTemplate result = apiInstance.PatchJourneyActiontemplate(actionTemplateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PatchJourneyActiontemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchjourneyoutcome": {
    "operationId": "patchjourneyoutcome",
    "functionName": "PatchJourneyOutcome",
    "signature": "PatchJourneyOutcome(outcomeId, body)",
    "parameters": [
      {
        "name": "outcomeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchOutcome",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchJourneyOutcomeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var outcomeId = \"outcomeId_example\";  // string | ID of the outcome.\n            var body = new PatchOutcome(); // PatchOutcome |  (optional) \n\n            try\n            { \n                // Update an outcome.\n                Outcome result = apiInstance.PatchJourneyOutcome(outcomeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PatchJourneyOutcome: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchjourneysegment": {
    "operationId": "patchjourneysegment",
    "functionName": "PatchJourneySegment",
    "signature": "PatchJourneySegment(segmentId, body)",
    "parameters": [
      {
        "name": "segmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchSegment",
        "required": "false"
      }
    ],
    "return": "JourneySegment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchJourneySegmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var segmentId = \"segmentId_example\";  // string | ID of the segment.\n            var body = new PatchSegment(); // PatchSegment |  (optional) \n\n            try\n            { \n                // Update a segment.\n                JourneySegment result = apiInstance.PatchJourneySegment(segmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PatchJourneySegment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postjourneyactionmaps": {
    "operationId": "postjourneyactionmaps",
    "functionName": "PostJourneyActionmaps",
    "signature": "PostJourneyActionmaps(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionMap",
        "required": "false"
      }
    ],
    "return": "ActionMap",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostJourneyActionmapsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new ActionMap(); // ActionMap |  (optional) \n\n            try\n            { \n                // Create an action map.\n                ActionMap result = apiInstance.PostJourneyActionmaps(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostJourneyActionmaps: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postjourneyactionmapsestimatesjobs": {
    "operationId": "postjourneyactionmapsestimatesjobs",
    "functionName": "PostJourneyActionmapsEstimatesJobs",
    "signature": "PostJourneyActionmapsEstimatesJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionMapEstimateRequest",
        "required": "true"
      }
    ],
    "return": "EstimateJobAsyncResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostJourneyActionmapsEstimatesJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new ActionMapEstimateRequest(); // ActionMapEstimateRequest | audience estimator request\n\n            try\n            { \n                // Query for estimates\n                EstimateJobAsyncResponse result = apiInstance.PostJourneyActionmapsEstimatesJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostJourneyActionmapsEstimatesJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postjourneyactiontemplates": {
    "operationId": "postjourneyactiontemplates",
    "functionName": "PostJourneyActiontemplates",
    "signature": "PostJourneyActiontemplates(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ActionTemplate",
        "required": "false"
      }
    ],
    "return": "ActionTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostJourneyActiontemplatesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new ActionTemplate(); // ActionTemplate |  (optional) \n\n            try\n            { \n                // Create a single action template.\n                ActionTemplate result = apiInstance.PostJourneyActiontemplates(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostJourneyActiontemplates: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postjourneyoutcomes": {
    "operationId": "postjourneyoutcomes",
    "functionName": "PostJourneyOutcomes",
    "signature": "PostJourneyOutcomes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Outcome",
        "required": "false"
      }
    ],
    "return": "Outcome",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostJourneyOutcomesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new Outcome(); // Outcome |  (optional) \n\n            try\n            { \n                // Create an outcome.\n                Outcome result = apiInstance.PostJourneyOutcomes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostJourneyOutcomes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postjourneysegments": {
    "operationId": "postjourneysegments",
    "functionName": "PostJourneySegments",
    "signature": "PostJourneySegments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "JourneySegment",
        "required": "false"
      }
    ],
    "return": "JourneySegment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostJourneySegmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new JourneyApi();\n            var body = new JourneySegment(); // JourneySegment |  (optional) \n\n            try\n            { \n                // Create a segment.\n                JourneySegment result = apiInstance.PostJourneySegments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Journey.PostJourneySegments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebase": {
    "operationId": "deleteknowledgeknowledgebase",
    "functionName": "DeleteKnowledgeKnowledgebase",
    "signature": "DeleteKnowledgeKnowledgebase(knowledgeBaseId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n\n            try\n            { \n                // Delete knowledge base\n                KnowledgeBase result = apiInstance.DeleteKnowledgeKnowledgebase(knowledgeBaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebase: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebasecategory": {
    "operationId": "deleteknowledgeknowledgebasecategory",
    "functionName": "DeleteKnowledgeKnowledgebaseCategory",
    "signature": "DeleteKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var categoryId = \"categoryId_example\";  // string | Category ID\n\n            try\n            { \n                // Delete category\n                CategoryResponse result = apiInstance.DeleteKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebasedocument": {
    "operationId": "deleteknowledgeknowledgebasedocument",
    "functionName": "DeleteKnowledgeKnowledgebaseDocument",
    "signature": "DeleteKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID.\n            var documentId = \"documentId_example\";  // string | Document ID.\n\n            try\n            { \n                // Delete document.\n                apiInstance.DeleteKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebasedocumentvariation": {
    "operationId": "deleteknowledgeknowledgebasedocumentvariation",
    "functionName": "DeleteKnowledgeKnowledgebaseDocumentVariation",
    "signature": "DeleteKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseDocumentVariationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentVariationId = \"documentVariationId_example\";  // string | Globally unique identifier for a document variation.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for a document.\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for a knowledge base.\n\n            try\n            { \n                // Delete a variation for a document.\n                apiInstance.DeleteKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseDocumentVariation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaseexportjob": {
    "operationId": "deleteknowledgeknowledgebaseexportjob",
    "functionName": "DeleteKnowledgeKnowledgebaseExportJob",
    "signature": "DeleteKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseExportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var exportJobId = \"exportJobId_example\";  // string | Export job ID\n\n            try\n            { \n                // Delete export job\n                apiInstance.DeleteKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseExportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaseimportjob": {
    "operationId": "deleteknowledgeknowledgebaseimportjob",
    "functionName": "DeleteKnowledgeKnowledgebaseImportJob",
    "signature": "DeleteKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseImportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var importJobId = \"importJobId_example\";  // string | Import job ID\n\n            try\n            { \n                // Delete import job\n                apiInstance.DeleteKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseImportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaselabel": {
    "operationId": "deleteknowledgeknowledgebaselabel",
    "functionName": "DeleteKnowledgeKnowledgebaseLabel",
    "signature": "DeleteKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseLabelExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var labelId = \"labelId_example\";  // string | Label ID\n\n            try\n            { \n                // Delete label\n                LabelResponse result = apiInstance.DeleteKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseLabel: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaselanguagecategory": {
    "operationId": "deleteknowledgeknowledgebaselanguagecategory",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageCategory",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeCategory",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseLanguageCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var categoryId = \"categoryId_example\";  // string | Category ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n\n            try\n            { \n                // Delete category\n                KnowledgeCategory result = apiInstance.DeleteKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseLanguageCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaselanguagedocument": {
    "operationId": "deleteknowledgeknowledgebaselanguagedocument",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageDocument",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseLanguageDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n\n            try\n            { \n                // Delete document\n                KnowledgeDocument result = apiInstance.DeleteKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseLanguageDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "deleteknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "DeleteKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "DeleteKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteKnowledgeKnowledgebaseLanguageDocumentsImportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var importId = \"importId_example\";  // string | Import ID\n\n            try\n            { \n                // Delete import operation\n                apiInstance.DeleteKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.DeleteKnowledgeKnowledgebaseLanguageDocumentsImport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeguestsessioncategories": {
    "operationId": "getknowledgeguestsessioncategories",
    "functionName": "GetKnowledgeGuestSessionCategories",
    "signature": "GetKnowledgeGuestSessionCategories(sessionId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "parentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "isRoot",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "GuestCategoryResponseListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeGuestSessionCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var parentId = \"parentId_example\";  // string | If specified, retrieves the children categories by parent category ID. (optional) \n            var isRoot = true;  // bool? | If specified, retrieves only the root categories. (optional) \n            var name = \"name_example\";  // string | Filter to return the categories that starts with the given category name. (optional) \n            var sortBy = \"sortBy_example\";  // string | Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (optional)  (default to Name)\n            var expand = \"expand_example\";  // string | The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors. (optional) \n            var includeDocumentCount = true;  // bool? | If specified, retrieves the number of documents related to category. (optional) \n\n            try\n            { \n                // Get categories\n                GuestCategoryResponseListing result = apiInstance.GetKnowledgeGuestSessionCategories(sessionId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeGuestSessionCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeguestsessiondocument": {
    "operationId": "getknowledgeguestsessiondocument",
    "functionName": "GetKnowledgeGuestSessionDocument",
    "signature": "GetKnowledgeGuestSessionDocument(sessionId, documentId)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeGuestDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeGuestSessionDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var documentId = \"documentId_example\";  // string | Document ID\n\n            try\n            { \n                // Get a knowledge document by ID.\n                KnowledgeGuestDocument result = apiInstance.GetKnowledgeGuestSessionDocument(sessionId, documentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeGuestSessionDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeguestsessiondocuments": {
    "operationId": "getknowledgeguestsessiondocuments",
    "functionName": "GetKnowledgeGuestSessionDocuments",
    "signature": "GetKnowledgeGuestSessionDocuments(sessionId, categoryId, includeSubcategories, pageSize)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "includeSubcategories",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "KnowledgeGuestDocumentResponseListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeGuestSessionDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var categoryId = new List<string>(); // List<string> | If specified, retrieves documents associated with category ids, comma separated values expected. (optional) \n            var includeSubcategories = true;  // bool? | Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n\n            try\n            { \n                // Get documents.\n                KnowledgeGuestDocumentResponseListing result = apiInstance.GetKnowledgeGuestSessionDocuments(sessionId, categoryId, includeSubcategories, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeGuestSessionDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebase": {
    "operationId": "getknowledgeknowledgebase",
    "functionName": "GetKnowledgeKnowledgebase",
    "signature": "GetKnowledgeKnowledgebase(knowledgeBaseId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n\n            try\n            { \n                // Get knowledge base\n                KnowledgeBase result = apiInstance.GetKnowledgeKnowledgebase(knowledgeBaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebase: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasecategories": {
    "operationId": "getknowledgeknowledgebasecategories",
    "functionName": "GetKnowledgeKnowledgebaseCategories",
    "signature": "GetKnowledgeKnowledgebaseCategories(knowledgeBaseId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "parentId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "isRoot",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "CategoryResponseListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var parentId = \"parentId_example\";  // string | If specified, retrieves the children categories by parent category ID. (optional) \n            var isRoot = true;  // bool? | If specified, retrieves only the root categories. (optional) \n            var name = \"name_example\";  // string | Filter to return the categories that starts with the given category name. (optional) \n            var sortBy = \"sortBy_example\";  // string | Name: sort by category names alphabetically; Hierarchy: sort by the full path of hierarchical category names alphabetically (optional)  (default to Name)\n            var expand = \"expand_example\";  // string | The specified entity attribute will be filled. Supported value:\\\"Ancestors\\\": every ancestors will be filled via the parent attribute recursively,but only the id, name, parentId will be present for the ancestors. (optional) \n            var includeDocumentCount = true;  // bool? | If specified, retrieves the number of documents related to category. (optional) \n\n            try\n            { \n                // Get categories\n                CategoryResponseListing result = apiInstance.GetKnowledgeKnowledgebaseCategories(knowledgeBaseId, before, after, pageSize, parentId, isRoot, name, sortBy, expand, includeDocumentCount);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasecategory": {
    "operationId": "getknowledgeknowledgebasecategory",
    "functionName": "GetKnowledgeKnowledgebaseCategory",
    "signature": "GetKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var categoryId = \"categoryId_example\";  // string | Category ID\n\n            try\n            { \n                // Get category\n                CategoryResponse result = apiInstance.GetKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocument": {
    "operationId": "getknowledgeknowledgebasedocument",
    "functionName": "GetKnowledgeKnowledgebaseDocument",
    "signature": "GetKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, expand, state)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID.\n            var documentId = \"documentId_example\";  // string | Document ID.\n            var expand = new List<string>(); // List<string> | The specified entity attributes will be filled. Comma separated values expected. Max No. of variations that can be returned on expand is 20. (optional) \n            var state = \"state_example\";  // string | \\\"when state is \\\"Draft\\\", draft version of the document is returned,otherwise by default published version is returned in the response. (optional) \n\n            try\n            { \n                // Get document.\n                KnowledgeDocumentResponse result = apiInstance.GetKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, expand, state);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentvariation": {
    "operationId": "getknowledgeknowledgebasedocumentvariation",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVariation",
    "signature": "GetKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, documentState)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DocumentVariation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVariationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentVariationId = \"documentVariationId_example\";  // string | Globally unique identifier for a document variation.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for a document.\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for a knowledge base.\n            var documentState = \"documentState_example\";  // string | The state of the document. (optional) \n\n            try\n            { \n                // Get a variation for a document.\n                DocumentVariation result = apiInstance.GetKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, documentState);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVariation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentvariations": {
    "operationId": "getknowledgeknowledgebasedocumentvariations",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVariations",
    "signature": "GetKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, before, after, pageSize, documentState)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DocumentVariationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVariationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var documentState = \"documentState_example\";  // string | The state of the document. (optional) \n\n            try\n            { \n                // Get variations for a document.\n                DocumentVariationListing result = apiInstance.GetKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, before, after, pageSize, documentState);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVariations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentversion": {
    "operationId": "getknowledgeknowledgebasedocumentversion",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersion",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersion(knowledgeBaseId, documentId, versionId, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var versionId = \"versionId_example\";  // string | Globally unique identifier for the document version.\n            var expand = new List<string>(); // List<string> | The specified entity attributes will be filled. Comma separated values expected. (optional) \n\n            try\n            { \n                // Get document version.\n                KnowledgeDocumentVersion result = apiInstance.GetKnowledgeKnowledgebaseDocumentVersion(knowledgeBaseId, documentId, versionId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentversionvariation": {
    "operationId": "getknowledgeknowledgebasedocumentversionvariation",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersionVariation",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersionVariation(knowledgeBaseId, documentId, versionId, variationId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "variationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentVersionVariation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVersionVariationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var versionId = \"versionId_example\";  // string | Globally unique identifier for the document version.\n            var variationId = \"variationId_example\";  // string | Globally unique identifier for the document version variation.\n\n            try\n            { \n                // Get variation for the given document version.\n                KnowledgeDocumentVersionVariation result = apiInstance.GetKnowledgeKnowledgebaseDocumentVersionVariation(knowledgeBaseId, documentId, versionId, variationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVersionVariation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentversionvariations": {
    "operationId": "getknowledgeknowledgebasedocumentversionvariations",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersionVariations",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersionVariations(knowledgeBaseId, documentId, versionId, before, after, pageSize)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersionVariationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVersionVariationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var versionId = \"versionId_example\";  // string | Globally unique identifier for the document version.\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n\n            try\n            { \n                // Get variations for the given document version.\n                KnowledgeDocumentVersionVariationListing result = apiInstance.GetKnowledgeKnowledgebaseDocumentVersionVariations(knowledgeBaseId, documentId, versionId, before, after, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVersionVariations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocumentversions": {
    "operationId": "getknowledgeknowledgebasedocumentversions",
    "functionName": "GetKnowledgeKnowledgebaseDocumentVersions",
    "signature": "GetKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, before, after, pageSize, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentVersionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var expand = new List<string>(); // List<string> | The specified entity attributes will be filled. Comma separated values expected. (optional) \n\n            try\n            { \n                // Get document versions.\n                KnowledgeDocumentVersionListing result = apiInstance.GetKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, before, after, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocumentVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebasedocuments": {
    "operationId": "getknowledgeknowledgebasedocuments",
    "functionName": "GetKnowledgeKnowledgebaseDocuments",
    "signature": "GetKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "categoryId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "includeSubcategories",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeDrafts",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "labelIds",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentResponseListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var interval = \"interval_example\";  // string | Retrieves the documents modified in specified date and time range. If the after and before cursor parameters are within this interval, it would return valid data, otherwise it throws an error.The dates in the interval are represented in ISO-8601 format: YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ (optional) \n            var documentId = new List<string>(); // List<string> | Retrieves the specified documents, comma separated values expected. (optional) \n            var categoryId = new List<string>(); // List<string> | If specified, retrieves documents associated with category ids, comma separated values expected. (optional) \n            var includeSubcategories = true;  // bool? | Works along with 'categoryId' query parameter. If specified, retrieves documents associated with category ids and its children categories. (optional) \n            var includeDrafts = true;  // bool? | If includeDrafts is true, Documents in the draft state are also returned in the response. (optional) \n            var labelIds = new List<string>(); // List<string> | If specified, retrieves documents associated with label ids, comma separated values expected. (optional) \n            var expand = new List<string>(); // List<string> | The specified entity attributes will be filled. Comma separated values expected. (optional) \n\n            try\n            { \n                // Get documents.\n                KnowledgeDocumentResponseListing result = apiInstance.GetKnowledgeKnowledgebaseDocuments(knowledgeBaseId, before, after, pageSize, interval, documentId, categoryId, includeSubcategories, includeDrafts, labelIds, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaseexportjob": {
    "operationId": "getknowledgeknowledgebaseexportjob",
    "functionName": "GetKnowledgeKnowledgebaseExportJob",
    "signature": "GetKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "exportJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeExportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseExportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var exportJobId = \"exportJobId_example\";  // string | Export job ID\n\n            try\n            { \n                // Get export job report\n                KnowledgeExportJobResponse result = apiInstance.GetKnowledgeKnowledgebaseExportJob(knowledgeBaseId, exportJobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseExportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaseimportjob": {
    "operationId": "getknowledgeknowledgebaseimportjob",
    "functionName": "GetKnowledgeKnowledgebaseImportJob",
    "signature": "GetKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseImportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var importJobId = \"importJobId_example\";  // string | Import job ID\n\n            try\n            { \n                // Get import job report\n                KnowledgeImportJobResponse result = apiInstance.GetKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseImportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselabel": {
    "operationId": "getknowledgeknowledgebaselabel",
    "functionName": "GetKnowledgeKnowledgebaseLabel",
    "signature": "GetKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLabelExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var labelId = \"labelId_example\";  // string | Label ID\n\n            try\n            { \n                // Get label\n                LabelResponse result = apiInstance.GetKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLabel: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselabels": {
    "operationId": "getknowledgeknowledgebaselabels",
    "functionName": "GetKnowledgeKnowledgebaseLabels",
    "signature": "GetKnowledgeKnowledgebaseLabels(knowledgeBaseId, before, after, pageSize, name, includeDocumentCount)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeDocumentCount",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "LabelListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLabelsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var name = \"name_example\";  // string | Filter to return the labels that contains the given phrase in the name. (optional) \n            var includeDocumentCount = true;  // bool? | If specified, retrieves the number of documents related to label. (optional) \n\n            try\n            { \n                // Get labels\n                LabelListing result = apiInstance.GetKnowledgeKnowledgebaseLabels(knowledgeBaseId, before, after, pageSize, name, includeDocumentCount);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLabels: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagecategories": {
    "operationId": "getknowledgeknowledgebaselanguagecategories",
    "functionName": "GetKnowledgeKnowledgebaseLanguageCategories",
    "signature": "GetKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, before, after, limit, pageSize, name)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CategoryListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var name = \"name_example\";  // string | Filter to return the categories that starts with the given category name. (optional) \n\n            try\n            { \n                // Get categories\n                CategoryListing result = apiInstance.GetKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, before, after, limit, pageSize, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagecategory": {
    "operationId": "getknowledgeknowledgebaselanguagecategory",
    "functionName": "GetKnowledgeKnowledgebaseLanguageCategory",
    "signature": "GetKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var categoryId = \"categoryId_example\";  // string | Category ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n\n            try\n            { \n                // Get category\n                KnowledgeExtendedCategory result = apiInstance.GetKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagedocument": {
    "operationId": "getknowledgeknowledgebaselanguagedocument",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocument",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n\n            try\n            { \n                // Get document\n                KnowledgeDocument result = apiInstance.GetKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagedocuments": {
    "operationId": "getknowledgeknowledgebaselanguagedocuments",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, before, after, limit, pageSize, categories, title, sortBy, sortOrder, documentIds)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "categories",
        "type": "string",
        "required": "false"
      },
      {
        "name": "title",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "documentIds",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DocumentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var categories = \"categories_example\";  // string | Filter by categories ids, comma separated values expected. (optional) \n            var title = \"title_example\";  // string | Filter by document title. (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort Order. (optional) \n            var documentIds = new List<string>(); // List<string> | Comma-separated list of document identifiers to fetch by. (optional) \n\n            try\n            { \n                // Get documents\n                DocumentListing result = apiInstance.GetKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, before, after, limit, pageSize, categories, title, sortBy, sortOrder, documentIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "getknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "GetKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "GetKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageDocumentsImportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var importId = \"importId_example\";  // string | Import ID\n\n            try\n            { \n                // Get import operation report\n                KnowledgeImport result = apiInstance.GetKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageDocumentsImport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagetraining": {
    "operationId": "getknowledgeknowledgebaselanguagetraining",
    "functionName": "GetKnowledgeKnowledgebaseLanguageTraining",
    "signature": "GetKnowledgeKnowledgebaseLanguageTraining(knowledgeBaseId, languageCode, trainingId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trainingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageTrainingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var trainingId = \"trainingId_example\";  // string | Training ID\n\n            try\n            { \n                // Get training detail\n                KnowledgeTraining result = apiInstance.GetKnowledgeKnowledgebaseLanguageTraining(knowledgeBaseId, languageCode, trainingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageTraining: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaselanguagetrainings": {
    "operationId": "getknowledgeknowledgebaselanguagetrainings",
    "functionName": "GetKnowledgeKnowledgebaseLanguageTrainings",
    "signature": "GetKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode, before, after, limit, pageSize, knowledgeDocumentsState)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "knowledgeDocumentsState",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TrainingListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseLanguageTrainingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var knowledgeDocumentsState = \"knowledgeDocumentsState_example\";  // string | Return the training with the specified state of the trained documents. (optional) \n\n            try\n            { \n                // Get all trainings information for a knowledgebase\n                TrainingListing result = apiInstance.GetKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode, before, after, limit, pageSize, knowledgeDocumentsState);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseLanguageTrainings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaseunansweredgroup": {
    "operationId": "getknowledgeknowledgebaseunansweredgroup",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroup",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroup(knowledgeBaseId, groupId, app)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UnansweredGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseUnansweredGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var groupId = \"groupId_example\";  // string | The ID of the group to be retrieved.\n            var app = \"app_example\";  // string | The app value to be used for filtering phrases. (optional) \n\n            try\n            { \n                // Get knowledge base unanswered group for a particular groupId\n                UnansweredGroup result = apiInstance.GetKnowledgeKnowledgebaseUnansweredGroup(knowledgeBaseId, groupId, app);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseUnansweredGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaseunansweredgroupphrasegroup": {
    "operationId": "getknowledgeknowledgebaseunansweredgroupphrasegroup",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, app)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phraseGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UnansweredPhraseGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var groupId = \"groupId_example\";  // string | The ID of the group to be retrieved.\n            var phraseGroupId = \"phraseGroupId_example\";  // string | The ID of the phraseGroup to be retrieved.\n            var app = \"app_example\";  // string | The app value to be used for filtering phrases. (optional) \n\n            try\n            { \n                // Get knowledge base unanswered phrase group for a particular phraseGroupId\n                UnansweredPhraseGroup result = apiInstance.GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, app);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseUnansweredGroupPhrasegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebaseunansweredgroups": {
    "operationId": "getknowledgeknowledgebaseunansweredgroups",
    "functionName": "GetKnowledgeKnowledgebaseUnansweredGroups",
    "signature": "GetKnowledgeKnowledgebaseUnansweredGroups(knowledgeBaseId, app)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "app",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UnansweredGroups",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebaseUnansweredGroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var app = \"app_example\";  // string | The app value to be used for filtering phrases. (optional) \n\n            try\n            { \n                // Get knowledge base unanswered groups\n                UnansweredGroups result = apiInstance.GetKnowledgeKnowledgebaseUnansweredGroups(knowledgeBaseId, app);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebaseUnansweredGroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getknowledgeknowledgebases": {
    "operationId": "getknowledgeknowledgebases",
    "functionName": "GetKnowledgeKnowledgebases",
    "signature": "GetKnowledgeKnowledgebases(before, after, limit, pageSize, name, coreLanguage, published, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "coreLanguage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "published",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "KnowledgeBaseListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetKnowledgeKnowledgebasesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var name = \"name_example\";  // string | Filter by Name. (optional) \n            var coreLanguage = \"coreLanguage_example\";  // string | Filter by core language. (optional) \n            var published = true;  // bool? | Filter by published status. (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort Order. (optional) \n\n            try\n            { \n                // Get knowledge bases\n                KnowledgeBaseListing result = apiInstance.GetKnowledgeKnowledgebases(before, after, limit, pageSize, name, coreLanguage, published, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.GetKnowledgeKnowledgebases: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeguestsessiondocumentssearchsearchid": {
    "operationId": "patchknowledgeguestsessiondocumentssearchsearchid",
    "functionName": "PatchKnowledgeGuestSessionDocumentsSearchSearchId",
    "signature": "PatchKnowledgeGuestSessionDocumentsSearchSearchId(sessionId, searchId, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchUpdateRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeGuestSessionDocumentsSearchSearchIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var searchId = \"searchId_example\";  // string | Search Result ID\n            var body = new SearchUpdateRequest(); // SearchUpdateRequest | \n\n            try\n            { \n                // Update search result.\n                apiInstance.PatchKnowledgeGuestSessionDocumentsSearchSearchId(sessionId, searchId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeGuestSessionDocumentsSearchSearchId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebase": {
    "operationId": "patchknowledgeknowledgebase",
    "functionName": "PatchKnowledgeKnowledgebase",
    "signature": "PatchKnowledgeKnowledgebase(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeBase",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new KnowledgeBase(); // KnowledgeBase | \n\n            try\n            { \n                // Update knowledge base\n                KnowledgeBase result = apiInstance.PatchKnowledgeKnowledgebase(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebase: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebasecategory": {
    "operationId": "patchknowledgeknowledgebasecategory",
    "functionName": "PatchKnowledgeKnowledgebaseCategory",
    "signature": "PatchKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CategoryRequest",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var categoryId = \"categoryId_example\";  // string | Category ID\n            var body = new CategoryRequest(); // CategoryRequest | \n\n            try\n            { \n                // Update category\n                CategoryResponse result = apiInstance.PatchKnowledgeKnowledgebaseCategory(knowledgeBaseId, categoryId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebasedocument": {
    "operationId": "patchknowledgeknowledgebasedocument",
    "functionName": "PatchKnowledgeKnowledgebaseDocument",
    "signature": "PatchKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentReq",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID.\n            var documentId = \"documentId_example\";  // string | Document ID.\n            var body = new KnowledgeDocumentReq(); // KnowledgeDocumentReq | \n\n            try\n            { \n                // Update document.\n                KnowledgeDocumentResponse result = apiInstance.PatchKnowledgeKnowledgebaseDocument(knowledgeBaseId, documentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebasedocumentvariation": {
    "operationId": "patchknowledgeknowledgebasedocumentvariation",
    "functionName": "PatchKnowledgeKnowledgebaseDocumentVariation",
    "signature": "PatchKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "documentVariationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentVariation",
        "required": "true"
      }
    ],
    "return": "DocumentVariation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseDocumentVariationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentVariationId = \"documentVariationId_example\";  // string | Globally unique identifier for a document variation.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for a document.\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for a knowledge base.\n            var body = new DocumentVariation(); // DocumentVariation | \n\n            try\n            { \n                // Update a variation for a document.\n                DocumentVariation result = apiInstance.PatchKnowledgeKnowledgebaseDocumentVariation(documentVariationId, documentId, knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseDocumentVariation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebasedocumentssearchsearchid": {
    "operationId": "patchknowledgeknowledgebasedocumentssearchsearchid",
    "functionName": "PatchKnowledgeKnowledgebaseDocumentsSearchSearchId",
    "signature": "PatchKnowledgeKnowledgebaseDocumentsSearchSearchId(knowledgeBaseId, searchId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "searchId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchUpdateRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseDocumentsSearchSearchIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | The ID of knowledge base containing the documents to query.\n            var searchId = \"searchId_example\";  // string | Search Result ID\n            var body = new SearchUpdateRequest(); // SearchUpdateRequest |  (optional) \n\n            try\n            { \n                // Update search result.\n                apiInstance.PatchKnowledgeKnowledgebaseDocumentsSearchSearchId(knowledgeBaseId, searchId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseDocumentsSearchSearchId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaseimportjob": {
    "operationId": "patchknowledgeknowledgebaseimportjob",
    "functionName": "PatchKnowledgeKnowledgebaseImportJob",
    "signature": "PatchKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importJobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ImportStatusRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseImportJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var importJobId = \"importJobId_example\";  // string | Import job ID\n            var body = new ImportStatusRequest(); // ImportStatusRequest | \n\n            try\n            { \n                // Start import job\n                KnowledgeImportJobResponse result = apiInstance.PatchKnowledgeKnowledgebaseImportJob(knowledgeBaseId, importJobId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseImportJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaselabel": {
    "operationId": "patchknowledgeknowledgebaselabel",
    "functionName": "PatchKnowledgeKnowledgebaseLabel",
    "signature": "PatchKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "labelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LabelUpdateRequest",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseLabelExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var labelId = \"labelId_example\";  // string | Label ID\n            var body = new LabelUpdateRequest(); // LabelUpdateRequest | \n\n            try\n            { \n                // Update label\n                LabelResponse result = apiInstance.PatchKnowledgeKnowledgebaseLabel(knowledgeBaseId, labelId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseLabel: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaselanguagecategory": {
    "operationId": "patchknowledgeknowledgebaselanguagecategory",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageCategory",
    "signature": "PatchKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "categoryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeCategoryRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseLanguageCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var categoryId = \"categoryId_example\";  // string | Category ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new KnowledgeCategoryRequest(); // KnowledgeCategoryRequest | \n\n            try\n            { \n                // Update category\n                KnowledgeExtendedCategory result = apiInstance.PatchKnowledgeKnowledgebaseLanguageCategory(categoryId, knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseLanguageCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaselanguagedocument": {
    "operationId": "patchknowledgeknowledgebaselanguagedocument",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocument",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseLanguageDocumentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var documentId = \"documentId_example\";  // string | Document ID\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new KnowledgeDocumentRequest(); // KnowledgeDocumentRequest | \n\n            try\n            { \n                // Update document\n                KnowledgeDocument result = apiInstance.PatchKnowledgeKnowledgebaseLanguageDocument(documentId, knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseLanguageDocument: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaselanguagedocuments": {
    "operationId": "patchknowledgeknowledgebaselanguagedocuments",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<KnowledgeDocumentBulkRequest>",
        "required": "true"
      }
    ],
    "return": "DocumentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseLanguageDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new List<KnowledgeDocumentBulkRequest>(); // List<KnowledgeDocumentBulkRequest> | \n\n            try\n            { \n                // Update documents collection\n                DocumentListing result = apiInstance.PatchKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseLanguageDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaselanguagedocumentsimport": {
    "operationId": "patchknowledgeknowledgebaselanguagedocumentsimport",
    "functionName": "PatchKnowledgeKnowledgebaseLanguageDocumentsImport",
    "signature": "PatchKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "importId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ImportStatusRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseLanguageDocumentsImportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var importId = \"importId_example\";  // string | Import ID\n            var body = new ImportStatusRequest(); // ImportStatusRequest | \n\n            try\n            { \n                // Start import operation\n                KnowledgeImport result = apiInstance.PatchKnowledgeKnowledgebaseLanguageDocumentsImport(knowledgeBaseId, languageCode, importId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseLanguageDocumentsImport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchknowledgeknowledgebaseunansweredgroupphrasegroup": {
    "operationId": "patchknowledgeknowledgebaseunansweredgroupphrasegroup",
    "functionName": "PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup",
    "signature": "PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phraseGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UnansweredPhraseGroupPatchRequestBody",
        "required": "true"
      }
    ],
    "return": "UnansweredPhraseGroupUpdateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var groupId = \"groupId_example\";  // string | The ID of the group to be updated.\n            var phraseGroupId = \"phraseGroupId_example\";  // string | The ID of the phraseGroup to be updated.\n            var body = new UnansweredPhraseGroupPatchRequestBody(); // UnansweredPhraseGroupPatchRequestBody | Request body of the update unanswered group endpoint.\n\n            try\n            { \n                // Update a Knowledge base unanswered phrase group\n                UnansweredPhraseGroupUpdateResponse result = apiInstance.PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup(knowledgeBaseId, groupId, phraseGroupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PatchKnowledgeKnowledgebaseUnansweredGroupPhrasegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgedocumentuploads": {
    "operationId": "postknowledgedocumentuploads",
    "functionName": "PostKnowledgeDocumentuploads",
    "signature": "PostKnowledgeDocumentuploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeDocumentuploadsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var body = new UploadUrlRequest(); // UploadUrlRequest | query\n\n            try\n            { \n                // Creates a presigned URL for uploading a knowledge import file with a set of documents\n                UploadUrlResponse result = apiInstance.PostKnowledgeDocumentuploads(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostKnowledgeDocumentuploads: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeguestsessiondocumentssearch": {
    "operationId": "postknowledgeguestsessiondocumentssearch",
    "functionName": "PostKnowledgeGuestSessionDocumentsSearch",
    "signature": "PostKnowledgeGuestSessionDocumentsSearch(sessionId, expand, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentGuestSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentGuestSearch",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeGuestSessionDocumentsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var expand = new List<string>(); // List<string> | Fields, if any, to expand for each document in the search result matching the query. (optional) \n            var body = new KnowledgeDocumentGuestSearchRequest(); // KnowledgeDocumentGuestSearchRequest |  (optional) \n\n            try\n            { \n                // Search the documents in a guest session.\n                KnowledgeDocumentGuestSearch result = apiInstance.PostKnowledgeGuestSessionDocumentsSearch(sessionId, expand, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeGuestSessionDocumentsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeguestsessiondocumentssearchsuggestions": {
    "operationId": "postknowledgeguestsessiondocumentssearchsuggestions",
    "functionName": "PostKnowledgeGuestSessionDocumentsSearchSuggestions",
    "signature": "PostKnowledgeGuestSessionDocumentsSearchSuggestions(sessionId, body)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeGuestDocumentSuggestionRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeGuestDocumentSuggestion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeGuestSessionDocumentsSearchSuggestionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var sessionId = \"sessionId_example\";  // string | Knowledge guest session ID.\n            var body = new KnowledgeGuestDocumentSuggestionRequest(); // KnowledgeGuestDocumentSuggestionRequest |  (optional) \n\n            try\n            { \n                // Query the knowledge documents to provide suggestions for auto completion.\n                KnowledgeGuestDocumentSuggestion result = apiInstance.PostKnowledgeGuestSessionDocumentsSearchSuggestions(sessionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeGuestSessionDocumentsSearchSuggestions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeguestsessions": {
    "operationId": "postknowledgeguestsessions",
    "functionName": "PostKnowledgeGuestSessions",
    "signature": "PostKnowledgeGuestSessions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeGuestSession",
        "required": "true"
      }
    ],
    "return": "KnowledgeGuestSession",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeGuestSessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new KnowledgeApi();\n            var body = new KnowledgeGuestSession(); // KnowledgeGuestSession | \n\n            try\n            { \n                // Create guest session\n                KnowledgeGuestSession result = apiInstance.PostKnowledgeGuestSessions(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeGuestSessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasecategories": {
    "operationId": "postknowledgeknowledgebasecategories",
    "functionName": "PostKnowledgeKnowledgebaseCategories",
    "signature": "PostKnowledgeKnowledgebaseCategories(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CategoryRequest",
        "required": "true"
      }
    ],
    "return": "CategoryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new CategoryRequest(); // CategoryRequest | \n\n            try\n            { \n                // Create new category\n                CategoryResponse result = apiInstance.PostKnowledgeKnowledgebaseCategories(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasedocumentvariations": {
    "operationId": "postknowledgeknowledgebasedocumentvariations",
    "functionName": "PostKnowledgeKnowledgebaseDocumentVariations",
    "signature": "PostKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DocumentVariation",
        "required": "true"
      }
    ],
    "return": "DocumentVariation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseDocumentVariationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var body = new DocumentVariation(); // DocumentVariation | \n\n            try\n            { \n                // Create a variation for a document.\n                DocumentVariation result = apiInstance.PostKnowledgeKnowledgebaseDocumentVariations(knowledgeBaseId, documentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseDocumentVariations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasedocumentversions": {
    "operationId": "postknowledgeknowledgebasedocumentversions",
    "functionName": "PostKnowledgeKnowledgebaseDocumentVersions",
    "signature": "PostKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "documentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentVersion",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseDocumentVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Globally unique identifier for the knowledge base.\n            var documentId = \"documentId_example\";  // string | Globally unique identifier for the document.\n            var body = new KnowledgeDocumentVersion(); // KnowledgeDocumentVersion | \n\n            try\n            { \n                // Creates or restores a document version.\n                KnowledgeDocumentVersion result = apiInstance.PostKnowledgeKnowledgebaseDocumentVersions(knowledgeBaseId, documentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseDocumentVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasedocuments": {
    "operationId": "postknowledgeknowledgebasedocuments",
    "functionName": "PostKnowledgeKnowledgebaseDocuments",
    "signature": "PostKnowledgeKnowledgebaseDocuments(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentReq",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocumentResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new KnowledgeDocumentReq(); // KnowledgeDocumentReq | \n\n            try\n            { \n                // Create document.\n                KnowledgeDocumentResponse result = apiInstance.PostKnowledgeKnowledgebaseDocuments(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasedocumentssearch": {
    "operationId": "postknowledgeknowledgebasedocumentssearch",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsSearch",
    "signature": "PostKnowledgeKnowledgebaseDocumentsSearch(knowledgeBaseId, expand, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentSearch",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseDocumentsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | The ID of knowledge base containing the documents to query.\n            var expand = new List<string>(); // List<string> | Fields, if any, to expand for each document in the search result matching the query. (optional) \n            var body = new KnowledgeDocumentSearchRequest(); // KnowledgeDocumentSearchRequest |  (optional) \n\n            try\n            { \n                // Search the documents in a knowledge base.\n                KnowledgeDocumentSearch result = apiInstance.PostKnowledgeKnowledgebaseDocumentsSearch(knowledgeBaseId, expand, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseDocumentsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasedocumentssearchsuggestions": {
    "operationId": "postknowledgeknowledgebasedocumentssearchsuggestions",
    "functionName": "PostKnowledgeKnowledgebaseDocumentsSearchSuggestions",
    "signature": "PostKnowledgeKnowledgebaseDocumentsSearchSuggestions(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentSuggestionRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeDocumentSuggestion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseDocumentsSearchSuggestionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | The ID of knowledge base containing the documents to query.\n            var body = new KnowledgeDocumentSuggestionRequest(); // KnowledgeDocumentSuggestionRequest |  (optional) \n\n            try\n            { \n                // Query the knowledge documents to provide suggestions for auto completion.\n                KnowledgeDocumentSuggestion result = apiInstance.PostKnowledgeKnowledgebaseDocumentsSearchSuggestions(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseDocumentsSearchSuggestions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaseexportjobs": {
    "operationId": "postknowledgeknowledgebaseexportjobs",
    "functionName": "PostKnowledgeKnowledgebaseExportJobs",
    "signature": "PostKnowledgeKnowledgebaseExportJobs(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeExportJobRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseExportJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new KnowledgeExportJobRequest(); // KnowledgeExportJobRequest | \n\n            try\n            { \n                // Create export job\n                KnowledgeExportJobResponse result = apiInstance.PostKnowledgeKnowledgebaseExportJobs(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseExportJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaseimportjobs": {
    "operationId": "postknowledgeknowledgebaseimportjobs",
    "functionName": "PostKnowledgeKnowledgebaseImportJobs",
    "signature": "PostKnowledgeKnowledgebaseImportJobs(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeImportJobRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeImportJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseImportJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new KnowledgeImportJobRequest(); // KnowledgeImportJobRequest | \n\n            try\n            { \n                // Create import job\n                KnowledgeImportJobResponse result = apiInstance.PostKnowledgeKnowledgebaseImportJobs(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseImportJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselabels": {
    "operationId": "postknowledgeknowledgebaselabels",
    "functionName": "PostKnowledgeKnowledgebaseLabels",
    "signature": "PostKnowledgeKnowledgebaseLabels(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LabelCreateRequest",
        "required": "true"
      }
    ],
    "return": "LabelResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLabelsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new LabelCreateRequest(); // LabelCreateRequest | \n\n            try\n            { \n                // Create new label\n                LabelResponse result = apiInstance.PostKnowledgeKnowledgebaseLabels(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLabels: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselanguagecategories": {
    "operationId": "postknowledgeknowledgebaselanguagecategories",
    "functionName": "PostKnowledgeKnowledgebaseLanguageCategories",
    "signature": "PostKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeCategoryRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeExtendedCategory",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLanguageCategoriesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new KnowledgeCategoryRequest(); // KnowledgeCategoryRequest | \n\n            try\n            { \n                // Create new category\n                KnowledgeExtendedCategory result = apiInstance.PostKnowledgeKnowledgebaseLanguageCategories(knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLanguageCategories: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselanguagedocuments": {
    "operationId": "postknowledgeknowledgebaselanguagedocuments",
    "functionName": "PostKnowledgeKnowledgebaseLanguageDocuments",
    "signature": "PostKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeDocumentRequest",
        "required": "true"
      }
    ],
    "return": "KnowledgeDocument",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLanguageDocumentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new KnowledgeDocumentRequest(); // KnowledgeDocumentRequest | \n\n            try\n            { \n                // Create document\n                KnowledgeDocument result = apiInstance.PostKnowledgeKnowledgebaseLanguageDocuments(knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLanguageDocuments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselanguagedocumentsimports": {
    "operationId": "postknowledgeknowledgebaselanguagedocumentsimports",
    "functionName": "PostKnowledgeKnowledgebaseLanguageDocumentsImports",
    "signature": "PostKnowledgeKnowledgebaseLanguageDocumentsImports(knowledgeBaseId, languageCode, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeImport",
        "required": "true"
      }
    ],
    "return": "KnowledgeImport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLanguageDocumentsImportsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var body = new KnowledgeImport(); // KnowledgeImport | \n\n            try\n            { \n                // Create import operation\n                KnowledgeImport result = apiInstance.PostKnowledgeKnowledgebaseLanguageDocumentsImports(knowledgeBaseId, languageCode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLanguageDocumentsImports: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselanguagetrainingpromote": {
    "operationId": "postknowledgeknowledgebaselanguagetrainingpromote",
    "functionName": "PostKnowledgeKnowledgebaseLanguageTrainingPromote",
    "signature": "PostKnowledgeKnowledgebaseLanguageTrainingPromote(knowledgeBaseId, languageCode, trainingId)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trainingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLanguageTrainingPromoteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n            var trainingId = \"trainingId_example\";  // string | Training ID\n\n            try\n            { \n                // Promote trained documents from draft state to active.\n                KnowledgeTraining result = apiInstance.PostKnowledgeKnowledgebaseLanguageTrainingPromote(knowledgeBaseId, languageCode, trainingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLanguageTrainingPromote: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebaselanguagetrainings": {
    "operationId": "postknowledgeknowledgebaselanguagetrainings",
    "functionName": "PostKnowledgeKnowledgebaseLanguageTrainings",
    "signature": "PostKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageCode",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "KnowledgeTraining",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseLanguageTrainingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var languageCode = \"en-US\";  // string | Language code, format: iso2-LOCALE\n\n            try\n            { \n                // Trigger training\n                KnowledgeTraining result = apiInstance.PostKnowledgeKnowledgebaseLanguageTrainings(knowledgeBaseId, languageCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebaseLanguageTrainings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebasesearch": {
    "operationId": "postknowledgeknowledgebasesearch",
    "functionName": "PostKnowledgeKnowledgebaseSearch",
    "signature": "PostKnowledgeKnowledgebaseSearch(knowledgeBaseId, body)",
    "parameters": [
      {
        "name": "knowledgeBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "KnowledgeSearchRequest",
        "required": "false"
      }
    ],
    "return": "KnowledgeSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebaseSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var knowledgeBaseId = \"knowledgeBaseId_example\";  // string | Knowledge base ID\n            var body = new KnowledgeSearchRequest(); // KnowledgeSearchRequest |  (optional) \n\n            try\n            { \n                // Search Documents\n                KnowledgeSearchResponse result = apiInstance.PostKnowledgeKnowledgebaseSearch(knowledgeBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostKnowledgeKnowledgebaseSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postknowledgeknowledgebases": {
    "operationId": "postknowledgeknowledgebases",
    "functionName": "PostKnowledgeKnowledgebases",
    "signature": "PostKnowledgeKnowledgebases(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KnowledgeBase",
        "required": "true"
      }
    ],
    "return": "KnowledgeBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostKnowledgeKnowledgebasesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new KnowledgeApi();\n            var body = new KnowledgeBase(); // KnowledgeBase | \n\n            try\n            { \n                // Create new knowledge base\n                KnowledgeBase result = apiInstance.PostKnowledgeKnowledgebases(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Knowledge.PostKnowledgeKnowledgebases: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguageunderstandingdomain": {
    "operationId": "deletelanguageunderstandingdomain",
    "functionName": "DeleteLanguageunderstandingDomain",
    "signature": "DeleteLanguageunderstandingDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageunderstandingDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n\n            try\n            { \n                // Delete an NLU Domain.\n                apiInstance.DeleteLanguageunderstandingDomain(domainId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.DeleteLanguageunderstandingDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguageunderstandingdomainfeedbackfeedbackid": {
    "operationId": "deletelanguageunderstandingdomainfeedbackfeedbackid",
    "functionName": "DeleteLanguageunderstandingDomainFeedbackFeedbackId",
    "signature": "DeleteLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageunderstandingDomainFeedbackFeedbackIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var feedbackId = \"feedbackId_example\";  // string | ID of the Feedback\n\n            try\n            { \n                // Delete the feedback on the NLU Domain Version.\n                apiInstance.DeleteLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.DeleteLanguageunderstandingDomainFeedbackFeedbackId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguageunderstandingdomainversion": {
    "operationId": "deletelanguageunderstandingdomainversion",
    "functionName": "DeleteLanguageunderstandingDomainVersion",
    "signature": "DeleteLanguageunderstandingDomainVersion(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageunderstandingDomainVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n\n            try\n            { \n                // Delete an NLU Domain Version\n                apiInstance.DeleteLanguageunderstandingDomainVersion(domainId, domainVersionId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.DeleteLanguageunderstandingDomainVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguageunderstandingminer": {
    "operationId": "deletelanguageunderstandingminer",
    "functionName": "DeleteLanguageunderstandingMiner",
    "signature": "DeleteLanguageunderstandingMiner(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageunderstandingMinerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n\n            try\n            { \n                // Delete a miner.\n                apiInstance.DeleteLanguageunderstandingMiner(minerId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.DeleteLanguageunderstandingMiner: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguageunderstandingminerdraft": {
    "operationId": "deletelanguageunderstandingminerdraft",
    "functionName": "DeleteLanguageunderstandingMinerDraft",
    "signature": "DeleteLanguageunderstandingMinerDraft(minerId, draftId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageunderstandingMinerDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var draftId = \"draftId_example\";  // string | Draft ID\n\n            try\n            { \n                // Delete a draft\n                apiInstance.DeleteLanguageunderstandingMinerDraft(minerId, draftId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.DeleteLanguageunderstandingMinerDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomain": {
    "operationId": "getlanguageunderstandingdomain",
    "functionName": "GetLanguageunderstandingDomain",
    "signature": "GetLanguageunderstandingDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n\n            try\n            { \n                // Find an NLU Domain.\n                NluDomain result = apiInstance.GetLanguageunderstandingDomain(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomainfeedback": {
    "operationId": "getlanguageunderstandingdomainfeedback",
    "functionName": "GetLanguageunderstandingDomainFeedback",
    "signature": "GetLanguageunderstandingDomainFeedback(domainId, intentName, assessment, dateStart, dateEnd, includeDeleted, pageNumber, pageSize, enableCursorPagination, after, fields)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assessment",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dateStart",
        "type": "String",
        "required": "false"
      },
      {
        "name": "dateEnd",
        "type": "String",
        "required": "false"
      },
      {
        "name": "includeDeleted",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "enableCursorPagination",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "NluFeedbackListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainFeedbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var intentName = \"intentName_example\";  // string | The top intent name to retrieve feedback for. (optional) \n            var assessment = \"assessment_example\";  // string | The top assessment to retrieve feedback for. (optional) \n            var dateStart = new Date();  // String | Begin of time window as ISO-8601 date. (optional) \n            var dateEnd = new Date();  // String | End of time window as ISO-8601 date. (optional) \n            var includeDeleted = true;  // bool? | Whether to include soft-deleted items in the result. (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var enableCursorPagination = true;  // bool? | Enable Cursor Pagination (optional)  (default to false)\n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. This is considered only when enableCursorPagination=true (optional) \n            var fields = new List<string>(); // List<string> | Fields and properties to get, comma-separated (optional) \n\n            try\n            { \n                // Get all feedback in the given NLU Domain Version.\n                NluFeedbackListing result = apiInstance.GetLanguageunderstandingDomainFeedback(domainId, intentName, assessment, dateStart, dateEnd, includeDeleted, pageNumber, pageSize, enableCursorPagination, after, fields);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomainFeedback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomainfeedbackfeedbackid": {
    "operationId": "getlanguageunderstandingdomainfeedbackfeedbackid",
    "functionName": "GetLanguageunderstandingDomainFeedbackFeedbackId",
    "signature": "GetLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId, fields)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feedbackId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "fields",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "NluFeedbackResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainFeedbackFeedbackIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var feedbackId = \"feedbackId_example\";  // string | ID of the Feedback\n            var fields = new List<string>(); // List<string> | Fields and properties to get, comma-separated (optional) \n\n            try\n            { \n                // Find a Feedback\n                NluFeedbackResponse result = apiInstance.GetLanguageunderstandingDomainFeedbackFeedbackId(domainId, feedbackId, fields);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomainFeedbackFeedbackId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomainversion": {
    "operationId": "getlanguageunderstandingdomainversion",
    "functionName": "GetLanguageunderstandingDomainVersion",
    "signature": "GetLanguageunderstandingDomainVersion(domainId, domainVersionId, includeUtterances)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeUtterances",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "NluDomainVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n            var includeUtterances = true;  // bool? | Whether utterances for intent definition should be included when marshalling response. (optional) \n\n            try\n            { \n                // Find an NLU Domain Version.\n                NluDomainVersion result = apiInstance.GetLanguageunderstandingDomainVersion(domainId, domainVersionId, includeUtterances);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomainVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomainversionreport": {
    "operationId": "getlanguageunderstandingdomainversionreport",
    "functionName": "GetLanguageunderstandingDomainVersionReport",
    "signature": "GetLanguageunderstandingDomainVersionReport(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "NluDomainVersionQualityReport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainVersionReportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n\n            try\n            { \n                // Retrieved quality report for the specified NLU Domain Version\n                NluDomainVersionQualityReport result = apiInstance.GetLanguageunderstandingDomainVersionReport(domainId, domainVersionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomainVersionReport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomainversions": {
    "operationId": "getlanguageunderstandingdomainversions",
    "functionName": "GetLanguageunderstandingDomainVersions",
    "signature": "GetLanguageunderstandingDomainVersions(domainId, includeUtterances, pageNumber, pageSize)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeUtterances",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "NluDomainVersionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var includeUtterances = true;  // bool? | Whether utterances for intent definition should be included when marshalling response. (optional) \n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get all NLU Domain Versions for a given Domain.\n                NluDomainVersionListing result = apiInstance.GetLanguageunderstandingDomainVersions(domainId, includeUtterances, pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomainVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingdomains": {
    "operationId": "getlanguageunderstandingdomains",
    "functionName": "GetLanguageunderstandingDomains",
    "signature": "GetLanguageunderstandingDomains(pageNumber, pageSize)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "NluDomainListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n\n            try\n            { \n                // Get all NLU Domains.\n                NluDomainListing result = apiInstance.GetLanguageunderstandingDomains(pageNumber, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminer": {
    "operationId": "getlanguageunderstandingminer",
    "functionName": "GetLanguageunderstandingMiner",
    "signature": "GetLanguageunderstandingMiner(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n\n            try\n            { \n                // Get information about a miner.\n                Miner result = apiInstance.GetLanguageunderstandingMiner(minerId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMiner: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminerdraft": {
    "operationId": "getlanguageunderstandingminerdraft",
    "functionName": "GetLanguageunderstandingMinerDraft",
    "signature": "GetLanguageunderstandingMinerDraft(minerId, draftId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Draft",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinerDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var draftId = \"draftId_example\";  // string | Draft ID\n\n            try\n            { \n                // Get information about a draft.\n                Draft result = apiInstance.GetLanguageunderstandingMinerDraft(minerId, draftId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMinerDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminerdrafts": {
    "operationId": "getlanguageunderstandingminerdrafts",
    "functionName": "GetLanguageunderstandingMinerDrafts",
    "signature": "GetLanguageunderstandingMinerDrafts(minerId)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DraftListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinerDraftsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n\n            try\n            { \n                // Retrieve the list of drafts created.\n                DraftListing result = apiInstance.GetLanguageunderstandingMinerDrafts(minerId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMinerDrafts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminerintent": {
    "operationId": "getlanguageunderstandingminerintent",
    "functionName": "GetLanguageunderstandingMinerIntent",
    "signature": "GetLanguageunderstandingMinerIntent(minerId, intentId, expand)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "intentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MinerIntent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinerIntentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var intentId = \"intentId_example\";  // string | The ID of the intent to be retrieved.\n            var expand = \"expand_example\";  // string | Option to fetch utterances (optional) \n\n            try\n            { \n                // Get information about a mined intent\n                MinerIntent result = apiInstance.GetLanguageunderstandingMinerIntent(minerId, intentId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMinerIntent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminerintents": {
    "operationId": "getlanguageunderstandingminerintents",
    "functionName": "GetLanguageunderstandingMinerIntents",
    "signature": "GetLanguageunderstandingMinerIntents(minerId, expand)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MinedIntentsListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinerIntentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var expand = \"expand_example\";  // string | Option to fetch utterances. (optional) \n\n            try\n            { \n                // Retrieve a list of mined intents.\n                MinedIntentsListing result = apiInstance.GetLanguageunderstandingMinerIntents(minerId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMinerIntents: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguageunderstandingminers": {
    "operationId": "getlanguageunderstandingminers",
    "functionName": "GetLanguageunderstandingMiners",
    "signature": "GetLanguageunderstandingMiners()",
    "return": "MinerListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageunderstandingMinersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n\n            try\n            { \n                // Retrieve the list of miners created.\n                MinerListing result = apiInstance.GetLanguageunderstandingMiners();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.GetLanguageunderstandingMiners: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchlanguageunderstandingdomain": {
    "operationId": "patchlanguageunderstandingdomain",
    "functionName": "PatchLanguageunderstandingDomain",
    "signature": "PatchLanguageunderstandingDomain(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomain",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchLanguageunderstandingDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var body = new NluDomain(); // NluDomain | The updated NLU Domain.\n\n            try\n            { \n                // Update an NLU Domain.\n                NluDomain result = apiInstance.PatchLanguageunderstandingDomain(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PatchLanguageunderstandingDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchlanguageunderstandingminerdraft": {
    "operationId": "patchlanguageunderstandingminerdraft",
    "functionName": "PatchLanguageunderstandingMinerDraft",
    "signature": "PatchLanguageunderstandingMinerDraft(minerId, draftId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "draftId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DraftRequest",
        "required": "false"
      }
    ],
    "return": "Draft",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchLanguageunderstandingMinerDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var draftId = \"draftId_example\";  // string | Draft ID\n            var body = new DraftRequest(); // DraftRequest |  (optional) \n\n            try\n            { \n                // Save information for the draft. Either topic draft or intent draft should be sent.\n                Draft result = apiInstance.PatchLanguageunderstandingMinerDraft(minerId, draftId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PatchLanguageunderstandingMinerDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomainfeedback": {
    "operationId": "postlanguageunderstandingdomainfeedback",
    "functionName": "PostLanguageunderstandingDomainFeedback",
    "signature": "PostLanguageunderstandingDomainFeedback(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluFeedbackRequest",
        "required": "true"
      }
    ],
    "return": "NluFeedbackResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainFeedbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var body = new NluFeedbackRequest(); // NluFeedbackRequest | The Feedback to create.\n\n            try\n            { \n                // Create feedback for the NLU Domain Version.\n                NluFeedbackResponse result = apiInstance.PostLanguageunderstandingDomainFeedback(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomainFeedback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomainversiondetect": {
    "operationId": "postlanguageunderstandingdomainversiondetect",
    "functionName": "PostLanguageunderstandingDomainVersionDetect",
    "signature": "PostLanguageunderstandingDomainVersionDetect(domainId, domainVersionId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDetectionRequest",
        "required": "true"
      }
    ],
    "return": "NluDetectionResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainVersionDetectExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n            var body = new NluDetectionRequest(); // NluDetectionRequest | The input data to perform detection on.\n\n            try\n            { \n                // Detect intent, entities, etc. in the submitted text using the specified NLU domain version.\n                NluDetectionResponse result = apiInstance.PostLanguageunderstandingDomainVersionDetect(domainId, domainVersionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomainVersionDetect: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomainversionpublish": {
    "operationId": "postlanguageunderstandingdomainversionpublish",
    "functionName": "PostLanguageunderstandingDomainVersionPublish",
    "signature": "PostLanguageunderstandingDomainVersionPublish(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "NluDomainVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainVersionPublishExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n\n            try\n            { \n                // Publish the draft NLU Domain Version.\n                NluDomainVersion result = apiInstance.PostLanguageunderstandingDomainVersionPublish(domainId, domainVersionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomainVersionPublish: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomainversiontrain": {
    "operationId": "postlanguageunderstandingdomainversiontrain",
    "functionName": "PostLanguageunderstandingDomainVersionTrain",
    "signature": "PostLanguageunderstandingDomainVersionTrain(domainId, domainVersionId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "NluDomainVersionTrainingResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainVersionTrainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n\n            try\n            { \n                // Train the draft NLU Domain Version.\n                NluDomainVersionTrainingResponse result = apiInstance.PostLanguageunderstandingDomainVersionTrain(domainId, domainVersionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomainVersionTrain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomainversions": {
    "operationId": "postlanguageunderstandingdomainversions",
    "functionName": "PostLanguageunderstandingDomainVersions",
    "signature": "PostLanguageunderstandingDomainVersions(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomainVersion",
        "required": "true"
      }
    ],
    "return": "NluDomainVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var body = new NluDomainVersion(); // NluDomainVersion | The NLU Domain Version to create.\n\n            try\n            { \n                // Create an NLU Domain Version.\n                NluDomainVersion result = apiInstance.PostLanguageunderstandingDomainVersions(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomainVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingdomains": {
    "operationId": "postlanguageunderstandingdomains",
    "functionName": "PostLanguageunderstandingDomains",
    "signature": "PostLanguageunderstandingDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "NluDomain",
        "required": "true"
      }
    ],
    "return": "NluDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var body = new NluDomain(); // NluDomain | The NLU Domain to create.\n\n            try\n            { \n                // Create an NLU Domain.\n                NluDomain result = apiInstance.PostLanguageunderstandingDomains(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingminerdrafts": {
    "operationId": "postlanguageunderstandingminerdrafts",
    "functionName": "PostLanguageunderstandingMinerDrafts",
    "signature": "PostLanguageunderstandingMinerDrafts(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Draft",
        "required": "true"
      }
    ],
    "return": "Draft",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingMinerDraftsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var body = new Draft(); // Draft | Details for creating draft resource\n\n            try\n            { \n                // Create a new draft resource.\n                Draft result = apiInstance.PostLanguageunderstandingMinerDrafts(minerId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingMinerDrafts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingminerexecute": {
    "operationId": "postlanguageunderstandingminerexecute",
    "functionName": "PostLanguageunderstandingMinerExecute",
    "signature": "PostLanguageunderstandingMinerExecute(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MinerExecuteRequest",
        "required": "false"
      }
    ],
    "return": "Miner",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingMinerExecuteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var body = new MinerExecuteRequest(); // MinerExecuteRequest |  (optional) \n\n            try\n            { \n                // Start the mining process. Specify date range pair with mediaType, queueIds, participantType for mining data from Genesys Cloud. Specify only uploadKey for mining through an external file.\n                Miner result = apiInstance.PostLanguageunderstandingMinerExecute(minerId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingMinerExecute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingminers": {
    "operationId": "postlanguageunderstandingminers",
    "functionName": "PostLanguageunderstandingMiners",
    "signature": "PostLanguageunderstandingMiners(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Miner",
        "required": "true"
      }
    ],
    "return": "Miner",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingMinersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var body = new Miner(); // Miner | Details for creating a new miner resource.\n\n            try\n            { \n                // Create a unique miner.\n                Miner result = apiInstance.PostLanguageunderstandingMiners(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PostLanguageunderstandingMiners: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putlanguageunderstandingdomainversion": {
    "operationId": "putlanguageunderstandingdomainversion",
    "functionName": "PutLanguageunderstandingDomainVersion",
    "signature": "PutLanguageunderstandingDomainVersion(domainId, domainVersionId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "domainVersionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "NluDomainVersion",
        "required": "true"
      }
    ],
    "return": "NluDomainVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutLanguageunderstandingDomainVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguageUnderstandingApi();\n            var domainId = \"domainId_example\";  // string | ID of the NLU domain.\n            var domainVersionId = \"domainVersionId_example\";  // string | ID of the NLU domain version.\n            var body = new NluDomainVersion(); // NluDomainVersion | The updated NLU Domain Version.\n\n            try\n            { \n                // Update an NLU Domain Version.\n                NluDomainVersion result = apiInstance.PutLanguageunderstandingDomainVersion(domainId, domainVersionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling LanguageUnderstanding.PutLanguageunderstandingDomainVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelanguage": {
    "operationId": "deletelanguage",
    "functionName": "DeleteLanguage",
    "signature": "DeleteLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var languageId = \"languageId_example\";  // string | Language ID\n\n            try\n            { \n                // Delete Language (Deprecated)\n                apiInstance.DeleteLanguage(languageId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.DeleteLanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutinglanguage": {
    "operationId": "deleteroutinglanguage",
    "functionName": "DeleteRoutingLanguage",
    "signature": "DeleteRoutingLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingLanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var languageId = \"languageId_example\";  // string | Language ID\n\n            try\n            { \n                // Delete Language\n                apiInstance.DeleteRoutingLanguage(languageId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.DeleteRoutingLanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguage": {
    "operationId": "getlanguage",
    "functionName": "GetLanguage",
    "signature": "GetLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var languageId = \"languageId_example\";  // string | Language ID\n\n            try\n            { \n                // Get language (Deprecated)\n                Language result = apiInstance.GetLanguage(languageId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguages": {
    "operationId": "getlanguages",
    "functionName": "GetLanguages",
    "signature": "GetLanguages(pageSize, pageNumber, sortOrder, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LanguageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n            var name = \"name_example\";  // string | Name (optional) \n\n            try\n            { \n                // Get the list of supported languages. (Deprecated)\n                LanguageEntityListing result = apiInstance.GetLanguages(pageSize, pageNumber, sortOrder, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguagestranslations": {
    "operationId": "getlanguagestranslations",
    "functionName": "GetLanguagesTranslations",
    "signature": "GetLanguagesTranslations()",
    "return": "AvailableTranslations",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguagesTranslationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n\n            try\n            { \n                // Get all available languages for translation\n                AvailableTranslations result = apiInstance.GetLanguagesTranslations();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguagesTranslations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguagestranslationsbuiltin": {
    "operationId": "getlanguagestranslationsbuiltin",
    "functionName": "GetLanguagesTranslationsBuiltin",
    "signature": "GetLanguagesTranslationsBuiltin(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguagesTranslationsBuiltinExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var language = \"language_example\";  // string | The language of the builtin translation to retrieve\n\n            try\n            { \n                // Get the builtin translation for a language\n                Dictionary<string, Object> result = apiInstance.GetLanguagesTranslationsBuiltin(language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguagesTranslationsBuiltin: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguagestranslationsorganization": {
    "operationId": "getlanguagestranslationsorganization",
    "functionName": "GetLanguagesTranslationsOrganization",
    "signature": "GetLanguagesTranslationsOrganization(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguagesTranslationsOrganizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var language = \"language_example\";  // string | The language of the translation to retrieve for the organization\n\n            try\n            { \n                // Get effective translation for an organization by language\n                Dictionary<string, Object> result = apiInstance.GetLanguagesTranslationsOrganization(language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguagesTranslationsOrganization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlanguagestranslationsuser": {
    "operationId": "getlanguagestranslationsuser",
    "functionName": "GetLanguagesTranslationsUser",
    "signature": "GetLanguagesTranslationsUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLanguagesTranslationsUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var userId = \"userId_example\";  // string | The user id\n\n            try\n            { \n                // Get effective language translation for a user\n                Dictionary<string, Object> result = apiInstance.GetLanguagesTranslationsUser(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetLanguagesTranslationsUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutinglanguage": {
    "operationId": "getroutinglanguage",
    "functionName": "GetRoutingLanguage",
    "signature": "GetRoutingLanguage(languageId)",
    "parameters": [
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingLanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var languageId = \"languageId_example\";  // string | Language ID\n\n            try\n            { \n                // Get language\n                Language result = apiInstance.GetRoutingLanguage(languageId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.GetRoutingLanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguages": {
    "operationId": "postlanguages",
    "functionName": "PostLanguages",
    "signature": "PostLanguages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LanguagesApi();\n            var body = new Language(); // Language | Language\n\n            try\n            { \n                // Create Language (Deprecated)\n                Language result = apiInstance.PostLanguages(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Languages.PostLanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelearningassignment": {
    "operationId": "deletelearningassignment",
    "functionName": "DeleteLearningAssignment",
    "signature": "DeleteLearningAssignment(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLearningAssignmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var assignmentId = \"assignmentId_example\";  // string | The Learning Assignment ID\n\n            try\n            { \n                // Delete a learning assignment\n                apiInstance.DeleteLearningAssignment(assignmentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.DeleteLearningAssignment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelearningmodule": {
    "operationId": "deletelearningmodule",
    "functionName": "DeleteLearningModule",
    "signature": "DeleteLearningModule(moduleId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLearningModuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n\n            try\n            { \n                // Delete a learning module\n                apiInstance.DeleteLearningModule(moduleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.DeleteLearningModule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningassignment": {
    "operationId": "getlearningassignment",
    "functionName": "GetLearningAssignment",
    "signature": "GetLearningAssignment(assignmentId, expand)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningAssignmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var assignmentId = \"assignmentId_example\";  // string | The ID of Learning Assignment\n            var expand = new List<string>(); // List<string> | Fields to expand in response (optional) \n\n            try\n            { \n                // Get Learning Assignment\n                LearningAssignment result = apiInstance.GetLearningAssignment(assignmentId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningAssignment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningassignments": {
    "operationId": "getlearningassignments",
    "functionName": "GetLearningAssignments",
    "signature": "GetLearningAssignments(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, userId, types, states, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "minPercentageScore",
        "type": "float?",
        "required": "false"
      },
      {
        "name": "maxPercentageScore",
        "type": "float?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "types",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "states",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentsDomainEntity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningAssignmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | Specifies the ID of the learning module. Fetch assignments for learning module ID (optional) \n            var interval = \"interval_example\";  // string | Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned (optional)  (default to Any)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pass = \"pass_example\";  // string | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned (optional)  (default to Any)\n            var minPercentageScore = 3.4F;  // float? | The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional) \n            var maxPercentageScore = 3.4F;  // float? | The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Specifies result set sort order; if not specified, default sort order is descending (Desc) (optional)  (default to Desc)\n            var sortBy = \"sortBy_example\";  // string | Specifies which field to sort the results by, default sort is by recommendedCompletionDate (optional) \n            var userId = new List<string>(); // List<string> | Specifies the list of user IDs to be queried, up to 100 user IDs. (optional) \n            var types = new List<string>(); // List<string> | Specifies the assignment types, currently not supported and will be ignored. For now, all learning assignments regardless of types will be returned (optional) \n            var states = new List<string>(); // List<string> | Specifies the assignment states to filter by (optional) \n            var expand = new List<string>(); // List<string> | Specifies the expand option for returning additional information (optional) \n\n            try\n            { \n                // List of Learning module Assignments\n                LearningAssignmentsDomainEntity result = apiInstance.GetLearningAssignments(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, userId, types, states, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningAssignments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningassignmentsme": {
    "operationId": "getlearningassignmentsme",
    "functionName": "GetLearningAssignmentsMe",
    "signature": "GetLearningAssignmentsMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, types, states, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pass",
        "type": "string",
        "required": "false"
      },
      {
        "name": "minPercentageScore",
        "type": "float?",
        "required": "false"
      },
      {
        "name": "maxPercentageScore",
        "type": "float?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "states",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentsDomainEntity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningAssignmentsMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | Specifies the ID of the learning module. Fetch assignments for learning module ID (optional) \n            var interval = \"interval_example\";  // string | Specifies the range of dueDates to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Specifies if only the non-overdue (overdue is \\\"False\\\") or overdue (overdue is \\\"True\\\") assignments are returned. If overdue is \\\"Any\\\" or if the overdue parameter is not supplied, all assignments are returned (optional)  (default to Any)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pass = \"pass_example\";  // string | Specifies if only the failed (pass is \\\"False\\\") or passed (pass is \\\"True\\\") assignments (completed with assessment)are returned. If pass is \\\"Any\\\" or if the pass parameter is not supplied, all assignments are returned (optional)  (default to Any)\n            var minPercentageScore = 3.4F;  // float? | The minimum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional) \n            var maxPercentageScore = 3.4F;  // float? | The maximum assessment score for an assignment (completed with assessment) to be included in the results (inclusive) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Specifies result set sort order; if not specified, default sort order is descending (Desc) (optional)  (default to Desc)\n            var sortBy = \"sortBy_example\";  // string | Specifies which field to sort the results by, default sort is by recommendedCompletionDate (optional) \n            var types = new List<string>(); // List<string> | Specifies the assignment types, currently not supported and will be ignored. For now, all learning assignments regardless of types will be returned (optional) \n            var states = new List<string>(); // List<string> | Specifies the assignment states to filter by (optional) \n            var expand = new List<string>(); // List<string> | Specifies the expand option for returning additional information (optional) \n\n            try\n            { \n                // List of Learning Assignments assigned to current user\n                LearningAssignmentsDomainEntity result = apiInstance.GetLearningAssignmentsMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, pass, minPercentageScore, maxPercentageScore, sortOrder, sortBy, types, states, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningAssignmentsMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodule": {
    "operationId": "getlearningmodule",
    "functionName": "GetLearningModule",
    "signature": "GetLearningModule(moduleId, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningModule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var expand = new List<string>(); // List<string> | Fields to expand in response(case insensitive) (optional) \n\n            try\n            { \n                // Get a learning module\n                LearningModule result = apiInstance.GetLearningModule(moduleId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodulejob": {
    "operationId": "getlearningmodulejob",
    "functionName": "GetLearningModuleJob",
    "signature": "GetLearningModuleJob(moduleId, jobId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningModuleJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModuleJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var jobId = \"jobId_example\";  // string | The ID of the learning module job\n\n            try\n            { \n                // Get a specific Learning Module job status\n                LearningModuleJobResponse result = apiInstance.GetLearningModuleJob(moduleId, jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModuleJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodulerule": {
    "operationId": "getlearningmodulerule",
    "functionName": "GetLearningModuleRule",
    "signature": "GetLearningModuleRule(moduleId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningModuleRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModuleRuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n\n            try\n            { \n                // Get a learning module rule\n                LearningModuleRule result = apiInstance.GetLearningModuleRule(moduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModuleRule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmoduleversion": {
    "operationId": "getlearningmoduleversion",
    "functionName": "GetLearningModuleVersion",
    "signature": "GetLearningModuleVersion(moduleId, versionId, expand)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningModule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModuleVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var versionId = \"versionId_example\";  // string | The version of learning module\n            var expand = new List<string>(); // List<string> | Fields to expand in response(case insensitive) (optional) \n\n            try\n            { \n                // Get specific version of a published module\n                LearningModule result = apiInstance.GetLearningModuleVersion(moduleId, versionId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModuleVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodules": {
    "operationId": "getlearningmodules",
    "functionName": "GetLearningModules",
    "signature": "GetLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished)",
    "parameters": [
      {
        "name": "isArchived",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "types",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "searchTerm",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "isPublished",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LearningModulesDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var isArchived = true;  // bool? | Archive status (optional)  (default to false)\n            var types = new List<string>(); // List<string> | Specifies the module types. (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to ascending)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to name)\n            var searchTerm = \"searchTerm_example\";  // string | Search Term (searchable by name) (optional) \n            var expand = new List<string>(); // List<string> | Fields to expand in response(case insensitive) (optional) \n            var isPublished = \"isPublished_example\";  // string | Specifies if only the Unpublished (isPublished is \\\"False\\\") or Published (isPublished is \\\"True\\\") modules are returned. If isPublished is \\\"Any\\\" or omitted, both types are returned (optional)  (default to Any)\n\n            try\n            { \n                // Get all learning modules of an organization\n                LearningModulesDomainEntityListing result = apiInstance.GetLearningModules(isArchived, types, pageSize, pageNumber, sortOrder, sortBy, searchTerm, expand, isPublished);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodulesassignments": {
    "operationId": "getlearningmodulesassignments",
    "functionName": "GetLearningModulesAssignments",
    "signature": "GetLearningModulesAssignments(userIds, pageSize, pageNumber, searchTerm, overdue, assignmentStates, expand)",
    "parameters": [
      {
        "name": "userIds",
        "type": "List<string>",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "searchTerm",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "assignmentStates",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AssignedLearningModuleDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModulesAssignmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var userIds = new List<string>(); // List<string> | The IDs of the users to include\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var searchTerm = \"searchTerm_example\";  // string | Search Term (searches by name and description) (optional) \n            var overdue = \"overdue_example\";  // string | Specifies if only modules with overdue/not overdue (overdue is \\\"True\\\" or \\\"False\\\") assignments are returned. If overdue is \\\"Any\\\" or omitted, both are returned and can including modules that are unassigned. (optional)  (default to Any)\n            var assignmentStates = new List<string>(); // List<string> | Specifies the assignment states to return. (optional) \n            var expand = new List<string>(); // List<string> | Fields to expand in response(case insensitive) (optional) \n\n            try\n            { \n                // Get all learning modules of an organization including assignments for a specific user\n                AssignedLearningModuleDomainEntityListing result = apiInstance.GetLearningModulesAssignments(userIds, pageSize, pageNumber, searchTerm, overdue, assignmentStates, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModulesAssignments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlearningmodulescoverartcoverartid": {
    "operationId": "getlearningmodulescoverartcoverartid",
    "functionName": "GetLearningModulesCoverartCoverArtId",
    "signature": "GetLearningModulesCoverartCoverArtId(coverArtId)",
    "parameters": [
      {
        "name": "coverArtId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningModuleCoverArtResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLearningModulesCoverartCoverArtIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var coverArtId = \"coverArtId_example\";  // string | Key identifier for the cover art\n\n            try\n            { \n                // Get a specific Learning Module cover art using ID\n                LearningModuleCoverArtResponse result = apiInstance.GetLearningModulesCoverartCoverArtId(coverArtId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.GetLearningModulesCoverartCoverArtId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchlearningassignment": {
    "operationId": "patchlearningassignment",
    "functionName": "PatchLearningAssignment",
    "signature": "PatchLearningAssignment(assignmentId, body)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentUpdate",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchLearningAssignmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var assignmentId = \"assignmentId_example\";  // string | The ID of Learning Assignment\n            var body = new LearningAssignmentUpdate(); // LearningAssignmentUpdate | The Learning Assignment to be updated (optional) \n\n            try\n            { \n                // Update Learning Assignment\n                LearningAssignment result = apiInstance.PatchLearningAssignment(assignmentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PatchLearningAssignment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassessmentsscoring": {
    "operationId": "postlearningassessmentsscoring",
    "functionName": "PostLearningAssessmentsScoring",
    "signature": "PostLearningAssessmentsScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssessmentScoringRequest",
        "required": "true"
      }
    ],
    "return": "AssessmentScoringSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssessmentsScoringExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new LearningAssessmentScoringRequest(); // LearningAssessmentScoringRequest | Assessment form and answers to score\n\n            try\n            { \n                // Score learning assessment for preview\n                AssessmentScoringSet result = apiInstance.PostLearningAssessmentsScoring(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssessmentsScoring: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignmentreassign": {
    "operationId": "postlearningassignmentreassign",
    "functionName": "PostLearningAssignmentReassign",
    "signature": "PostLearningAssignmentReassign(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningAssignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentReassignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var assignmentId = \"assignmentId_example\";  // string | The Learning Assignment ID\n\n            try\n            { \n                // Reassign Learning Assignment\n                LearningAssignment result = apiInstance.PostLearningAssignmentReassign(assignmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignmentReassign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignmentreset": {
    "operationId": "postlearningassignmentreset",
    "functionName": "PostLearningAssignmentReset",
    "signature": "PostLearningAssignmentReset(assignmentId)",
    "parameters": [
      {
        "name": "assignmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningAssignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentResetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var assignmentId = \"assignmentId_example\";  // string | The Learning Assignment ID\n\n            try\n            { \n                // Reset Learning Assignment\n                LearningAssignment result = apiInstance.PostLearningAssignmentReset(assignmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignmentReset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignments": {
    "operationId": "postlearningassignments",
    "functionName": "PostLearningAssignments",
    "signature": "PostLearningAssignments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssignmentCreate",
        "required": "false"
      }
    ],
    "return": "LearningAssignment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new LearningAssignmentCreate(); // LearningAssignmentCreate | The Learning Assignment to be created (optional) \n\n            try\n            { \n                // Create Learning Assignment\n                LearningAssignment result = apiInstance.PostLearningAssignments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignmentsaggregatesquery": {
    "operationId": "postlearningassignmentsaggregatesquery",
    "functionName": "PostLearningAssignmentsAggregatesQuery",
    "signature": "PostLearningAssignmentsAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningAssignmentAggregateParam",
        "required": "true"
      }
    ],
    "return": "LearningAssignmentAggregateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentsAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new LearningAssignmentAggregateParam(); // LearningAssignmentAggregateParam | Aggregate Request\n\n            try\n            { \n                // Retrieve aggregated assignment data\n                LearningAssignmentAggregateResponse result = apiInstance.PostLearningAssignmentsAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignmentsAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignmentsbulkadd": {
    "operationId": "postlearningassignmentsbulkadd",
    "functionName": "PostLearningAssignmentsBulkadd",
    "signature": "PostLearningAssignmentsBulkadd(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<LearningAssignmentItem>",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentBulkAddResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentsBulkaddExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new List<LearningAssignmentItem>(); // List<LearningAssignmentItem> | The learning assignments to be created (optional) \n\n            try\n            { \n                // Add multiple learning assignments\n                LearningAssignmentBulkAddResponse result = apiInstance.PostLearningAssignmentsBulkadd(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignmentsBulkadd: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningassignmentsbulkremove": {
    "operationId": "postlearningassignmentsbulkremove",
    "functionName": "PostLearningAssignmentsBulkremove",
    "signature": "PostLearningAssignmentsBulkremove(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LearningAssignmentBulkRemoveResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningAssignmentsBulkremoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new List<string>(); // List<string> | The IDs of the learning assignments to be removed (optional) \n\n            try\n            { \n                // Remove multiple Learning Assignments\n                LearningAssignmentBulkRemoveResponse result = apiInstance.PostLearningAssignmentsBulkremove(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningAssignmentsBulkremove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningmodulejobs": {
    "operationId": "postlearningmodulejobs",
    "functionName": "PostLearningModuleJobs",
    "signature": "PostLearningModuleJobs(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleJobRequest",
        "required": "true"
      }
    ],
    "return": "LearningModuleJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningModuleJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var body = new LearningModuleJobRequest(); // LearningModuleJobRequest | The learning module job request\n\n            try\n            { \n                // Starts a specified operation on learning module\n                LearningModuleJobResponse result = apiInstance.PostLearningModuleJobs(moduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningModuleJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningmodulepublish": {
    "operationId": "postlearningmodulepublish",
    "functionName": "PostLearningModulePublish",
    "signature": "PostLearningModulePublish(moduleId)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LearningModulePublishResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningModulePublishExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n\n            try\n            { \n                // Publish a Learning module\n                LearningModulePublishResponse result = apiInstance.PostLearningModulePublish(moduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningModulePublish: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningmodules": {
    "operationId": "postlearningmodules",
    "functionName": "PostLearningModules",
    "signature": "PostLearningModules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningModuleRequest",
        "required": "true"
      }
    ],
    "return": "LearningModule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningModulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var body = new LearningModuleRequest(); // LearningModuleRequest | The learning module to be created\n\n            try\n            { \n                // Create a new learning module\n                LearningModule result = apiInstance.PostLearningModules(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningModules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlearningrulesquery": {
    "operationId": "postlearningrulesquery",
    "functionName": "PostLearningRulesQuery",
    "signature": "PostLearningRulesQuery(pageSize, pageNumber, body)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningAssignmentUserQuery",
        "required": "true"
      }
    ],
    "return": "LearningAssignmentUserListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLearningRulesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var pageSize = 56;  // int? | Page size (default to 50)\n            var pageNumber = 56;  // int? | Page number (default to 1)\n            var body = new LearningAssignmentUserQuery(); // LearningAssignmentUserQuery | The learning module rule to fetch users\n\n            try\n            { \n                // Get users for learning module rule\n                LearningAssignmentUserListing result = apiInstance.PostLearningRulesQuery(pageSize, pageNumber, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PostLearningRulesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putlearningmodule": {
    "operationId": "putlearningmodule",
    "functionName": "PutLearningModule",
    "signature": "PutLearningModule(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleRequest",
        "required": "true"
      }
    ],
    "return": "LearningModule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutLearningModuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var body = new LearningModuleRequest(); // LearningModuleRequest | The learning module to be updated\n\n            try\n            { \n                // Update a learning module\n                LearningModule result = apiInstance.PutLearningModule(moduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PutLearningModule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putlearningmodulerule": {
    "operationId": "putlearningmodulerule",
    "functionName": "PutLearningModuleRule",
    "signature": "PutLearningModuleRule(moduleId, body)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LearningModuleRule",
        "required": "true"
      }
    ],
    "return": "LearningModuleRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutLearningModuleRuleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LearningApi();\n            var moduleId = \"moduleId_example\";  // string | The ID of the learning module\n            var body = new LearningModuleRule(); // LearningModuleRule | The learning module rule to be updated\n\n            try\n            { \n                // Update a learning module rule\n                LearningModuleRule result = apiInstance.PutLearningModuleRule(moduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Learning.PutLearningModuleRule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlicensedefinition": {
    "operationId": "getlicensedefinition",
    "functionName": "GetLicenseDefinition",
    "signature": "GetLicenseDefinition(licenseId)",
    "parameters": [
      {
        "name": "licenseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LicenseDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLicenseDefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var licenseId = \"licenseId_example\";  // string | ID\n\n            try\n            { \n                // Get PureCloud license definition.\n                LicenseDefinition result = apiInstance.GetLicenseDefinition(licenseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.GetLicenseDefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlicensedefinitions": {
    "operationId": "getlicensedefinitions",
    "functionName": "GetLicenseDefinitions",
    "signature": "GetLicenseDefinitions()",
    "return": "List<LicenseDefinition>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLicenseDefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n\n            try\n            { \n                // Get all PureCloud license definitions available for the organization.\n                List<LicenseDefinition> result = apiInstance.GetLicenseDefinitions();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.GetLicenseDefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlicensetoggle": {
    "operationId": "getlicensetoggle",
    "functionName": "GetLicenseToggle",
    "signature": "GetLicenseToggle(featureName)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LicenseOrgToggle",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLicenseToggleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var featureName = \"featureName_example\";  // string | featureName\n\n            try\n            { \n                // Get PureCloud license feature toggle value.\n                LicenseOrgToggle result = apiInstance.GetLicenseToggle(featureName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.GetLicenseToggle: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlicenseuser": {
    "operationId": "getlicenseuser",
    "functionName": "GetLicenseUser",
    "signature": "GetLicenseUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LicenseUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLicenseUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var userId = \"userId_example\";  // string | ID\n\n            try\n            { \n                // Get licenses for specified user.\n                LicenseUser result = apiInstance.GetLicenseUser(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.GetLicenseUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlicenseusers": {
    "operationId": "getlicenseusers",
    "functionName": "GetLicenseUsers",
    "signature": "GetLicenseUsers(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "UserLicensesEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLicenseUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a page of users and their licenses\n                UserLicensesEntityListing result = apiInstance.GetLicenseUsers(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.GetLicenseUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlicenseinfer": {
    "operationId": "postlicenseinfer",
    "functionName": "PostLicenseInfer",
    "signature": "PostLicenseInfer(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLicenseInferExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var body = new List<string>(); // List<string> | The roleIds to use while inferring licenses (optional) \n\n            try\n            { \n                // Get a list of licenses inferred based on a list of roleIds\n                List<string> result = apiInstance.PostLicenseInfer(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.PostLicenseInfer: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlicenseorganization": {
    "operationId": "postlicenseorganization",
    "functionName": "PostLicenseOrganization",
    "signature": "PostLicenseOrganization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LicenseBatchAssignmentRequest",
        "required": "false"
      }
    ],
    "return": "List<LicenseUpdateStatus>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLicenseOrganizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var body = new LicenseBatchAssignmentRequest(); // LicenseBatchAssignmentRequest | The license assignments to update. (optional) \n\n            try\n            { \n                // Update the organization's license assignments in a batch.\n                List<LicenseUpdateStatus> result = apiInstance.PostLicenseOrganization(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.PostLicenseOrganization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlicensetoggle": {
    "operationId": "postlicensetoggle",
    "functionName": "PostLicenseToggle",
    "signature": "PostLicenseToggle(featureName)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LicenseOrgToggle",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLicenseToggleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var featureName = \"featureName_example\";  // string | featureName\n\n            try\n            { \n                // Switch PureCloud license feature toggle value.\n                LicenseOrgToggle result = apiInstance.PostLicenseToggle(featureName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.PostLicenseToggle: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlicenseusers": {
    "operationId": "postlicenseusers",
    "functionName": "PostLicenseUsers",
    "signature": "PostLicenseUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Dictionary<string, Object>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLicenseUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LicenseApi();\n            var body = new List<string>(); // List<string> | The user IDs to fetch. (optional) \n\n            try\n            { \n                // Fetch user licenses in a batch.\n                Dictionary<string, Object> result = apiInstance.PostLicenseUsers(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling License.PostLicenseUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletelocation": {
    "operationId": "deletelocation",
    "functionName": "DeleteLocation",
    "signature": "DeleteLocation(locationId)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteLocationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var locationId = \"locationId_example\";  // string | Location ID\n\n            try\n            { \n                // Delete a location\n                apiInstance.DeleteLocation(locationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.DeleteLocation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlocation": {
    "operationId": "getlocation",
    "functionName": "GetLocation",
    "signature": "GetLocation(locationId, expand)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LocationDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLocationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var locationId = \"locationId_example\";  // string | Location ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get Location by ID.\n                LocationDefinition result = apiInstance.GetLocation(locationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.GetLocation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlocationsublocations": {
    "operationId": "getlocationsublocations",
    "functionName": "GetLocationSublocations",
    "signature": "GetLocationSublocations(locationId)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LocationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLocationSublocationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var locationId = \"locationId_example\";  // string | Location ID\n\n            try\n            { \n                // Get sublocations for location ID.\n                LocationEntityListing result = apiInstance.GetLocationSublocations(locationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.GetLocationSublocations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlocations": {
    "operationId": "getlocations",
    "functionName": "GetLocations",
    "signature": "GetLocations(pageSize, pageNumber, id, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LocationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLocationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | id (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n\n            try\n            { \n                // Get a list of all locations.\n                LocationEntityListing result = apiInstance.GetLocations(pageSize, pageNumber, id, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.GetLocations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getlocationssearch": {
    "operationId": "getlocationssearch",
    "functionName": "GetLocationsSearch",
    "signature": "GetLocationsSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LocationsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetLocationsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | Provides more details about a specified resource (optional) \n\n            try\n            { \n                // Search locations using the q64 value returned from a previous search\n                LocationsSearchResponse result = apiInstance.GetLocationsSearch(q64, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.GetLocationsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchlocation": {
    "operationId": "patchlocation",
    "functionName": "PatchLocation",
    "signature": "PatchLocation(locationId, body)",
    "parameters": [
      {
        "name": "locationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LocationUpdateDefinition",
        "required": "true"
      }
    ],
    "return": "LocationDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchLocationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var locationId = \"locationId_example\";  // string | Location ID\n            var body = new LocationUpdateDefinition(); // LocationUpdateDefinition | Location\n\n            try\n            { \n                // Update a location\n                LocationDefinition result = apiInstance.PatchLocation(locationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.PatchLocation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlocations": {
    "operationId": "postlocations",
    "functionName": "PostLocations",
    "signature": "PostLocations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocationCreateDefinition",
        "required": "true"
      }
    ],
    "return": "LocationDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLocationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new LocationsApi();\n            var body = new LocationCreateDefinition(); // LocationCreateDefinition | Location\n\n            try\n            { \n                // Create a location\n                LocationDefinition result = apiInstance.PostLocations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Locations.PostLocations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlocationssearch": {
    "operationId": "postlocationssearch",
    "functionName": "PostLocationsSearch",
    "signature": "PostLocationsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocationSearchRequest",
        "required": "true"
      }
    ],
    "return": "LocationsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLocationsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SearchApi();\n            var body = new LocationSearchRequest(); // LocationSearchRequest | Search request options\n\n            try\n            { \n                // Search locations\n                LocationsSearchResponse result = apiInstance.PostLocationsSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostLocationsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletemessagingsupportedcontentsupportedcontentid": {
    "operationId": "deletemessagingsupportedcontentsupportedcontentid",
    "functionName": "DeleteMessagingSupportedcontentSupportedContentId",
    "signature": "DeleteMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MessagingApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n\n            try\n            { \n                // Delete a supported content profile\n                apiInstance.DeleteMessagingSupportedcontentSupportedContentId(supportedContentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Messaging.DeleteMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getmessagingsupportedcontent": {
    "operationId": "getmessagingsupportedcontent",
    "functionName": "GetMessagingSupportedcontent",
    "signature": "GetMessagingSupportedcontent(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SupportedContentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetMessagingSupportedcontentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MessagingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of Supported Content profiles\n                SupportedContentListing result = apiInstance.GetMessagingSupportedcontent(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Messaging.GetMessagingSupportedcontent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getmessagingsupportedcontentsupportedcontentid": {
    "operationId": "getmessagingsupportedcontentsupportedcontentid",
    "functionName": "GetMessagingSupportedcontentSupportedContentId",
    "signature": "GetMessagingSupportedcontentSupportedContentId(supportedContentId)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MessagingApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n\n            try\n            { \n                // Get a supported content profile\n                SupportedContent result = apiInstance.GetMessagingSupportedcontentSupportedContentId(supportedContentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Messaging.GetMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchmessagingsupportedcontentsupportedcontentid": {
    "operationId": "patchmessagingsupportedcontentsupportedcontentid",
    "functionName": "PatchMessagingSupportedcontentSupportedContentId",
    "signature": "PatchMessagingSupportedcontentSupportedContentId(supportedContentId, body)",
    "parameters": [
      {
        "name": "supportedContentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchMessagingSupportedcontentSupportedContentIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MessagingApi();\n            var supportedContentId = \"supportedContentId_example\";  // string | Supported Content ID\n            var body = new SupportedContent(); // SupportedContent | SupportedContent\n\n            try\n            { \n                // Update a supported content profile\n                SupportedContent result = apiInstance.PatchMessagingSupportedcontentSupportedContentId(supportedContentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Messaging.PatchMessagingSupportedcontentSupportedContentId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postmessagingsupportedcontent": {
    "operationId": "postmessagingsupportedcontent",
    "functionName": "PostMessagingSupportedcontent",
    "signature": "PostMessagingSupportedcontent(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SupportedContent",
        "required": "true"
      }
    ],
    "return": "SupportedContent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostMessagingSupportedcontentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MessagingApi();\n            var body = new SupportedContent(); // SupportedContent | SupportedContent\n\n            try\n            { \n                // Create a Supported Content profile\n                SupportedContent result = apiInstance.PostMessagingSupportedcontent(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Messaging.PostMessagingSupportedcontent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletemobiledevice": {
    "operationId": "deletemobiledevice",
    "functionName": "DeleteMobiledevice",
    "signature": "DeleteMobiledevice(deviceId)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteMobiledeviceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MobileDevicesApi();\n            var deviceId = \"deviceId_example\";  // string | Device ID\n\n            try\n            { \n                // Delete device\n                apiInstance.DeleteMobiledevice(deviceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling MobileDevices.DeleteMobiledevice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getmobiledevice": {
    "operationId": "getmobiledevice",
    "functionName": "GetMobiledevice",
    "signature": "GetMobiledevice(deviceId)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserDevice",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetMobiledeviceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MobileDevicesApi();\n            var deviceId = \"deviceId_example\";  // string | Device ID\n\n            try\n            { \n                // Get device\n                UserDevice result = apiInstance.GetMobiledevice(deviceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling MobileDevices.GetMobiledevice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getmobiledevices": {
    "operationId": "getmobiledevices",
    "functionName": "GetMobiledevices",
    "signature": "GetMobiledevices(pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DirectoryUserDevicesListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetMobiledevicesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MobileDevicesApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ascending)\n\n            try\n            { \n                // Get a list of all devices.\n                DirectoryUserDevicesListing result = apiInstance.GetMobiledevices(pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling MobileDevices.GetMobiledevices: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postmobiledevices": {
    "operationId": "postmobiledevices",
    "functionName": "PostMobiledevices",
    "signature": "PostMobiledevices(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserDevice",
        "required": "true"
      }
    ],
    "return": "UserDevice",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostMobiledevicesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MobileDevicesApi();\n            var body = new UserDevice(); // UserDevice | Device\n\n            try\n            { \n                // Create User device\n                UserDevice result = apiInstance.PostMobiledevices(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling MobileDevices.PostMobiledevices: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putmobiledevice": {
    "operationId": "putmobiledevice",
    "functionName": "PutMobiledevice",
    "signature": "PutMobiledevice(deviceId, body)",
    "parameters": [
      {
        "name": "deviceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserDevice",
        "required": "false"
      }
    ],
    "return": "UserDevice",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutMobiledeviceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new MobileDevicesApi();\n            var deviceId = \"deviceId_example\";  // string | Device ID\n            var body = new UserDevice(); // UserDevice | Device (optional) \n\n            try\n            { \n                // Update device\n                UserDevice result = apiInstance.PutMobiledevice(deviceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling MobileDevices.PutMobiledevice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletenotificationschannelsubscriptions": {
    "operationId": "deletenotificationschannelsubscriptions",
    "functionName": "DeleteNotificationsChannelSubscriptions",
    "signature": "DeleteNotificationsChannelSubscriptions(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteNotificationsChannelSubscriptionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var channelId = \"channelId_example\";  // string | Channel ID\n\n            try\n            { \n                // Remove all subscriptions\n                apiInstance.DeleteNotificationsChannelSubscriptions(channelId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.DeleteNotificationsChannelSubscriptions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getnotificationsavailabletopics": {
    "operationId": "getnotificationsavailabletopics",
    "functionName": "GetNotificationsAvailabletopics",
    "signature": "GetNotificationsAvailabletopics(expand, includePreview)",
    "parameters": [
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "includePreview",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AvailableTopicEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetNotificationsAvailabletopicsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var includePreview = true;  // bool? | Whether or not to include Preview topics (optional)  (default to true)\n\n            try\n            { \n                // Get available notification topics.\n                AvailableTopicEntityListing result = apiInstance.GetNotificationsAvailabletopics(expand, includePreview);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.GetNotificationsAvailabletopics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getnotificationschannelsubscriptions": {
    "operationId": "getnotificationschannelsubscriptions",
    "functionName": "GetNotificationsChannelSubscriptions",
    "signature": "GetNotificationsChannelSubscriptions(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetNotificationsChannelSubscriptionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var channelId = \"channelId_example\";  // string | Channel ID\n\n            try\n            { \n                // The list of all subscriptions for this channel\n                ChannelTopicEntityListing result = apiInstance.GetNotificationsChannelSubscriptions(channelId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.GetNotificationsChannelSubscriptions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getnotificationschannels": {
    "operationId": "getnotificationschannels",
    "functionName": "GetNotificationsChannels",
    "signature": "GetNotificationsChannels(includechannels)",
    "parameters": [
      {
        "name": "includechannels",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ChannelEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetNotificationsChannelsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var includechannels = \"includechannels_example\";  // string | Show user's channels for this specific token or across all tokens for this user and app.  Channel Ids for other access tokens will not be shown, but will be presented to show their existence. (optional)  (default to token)\n\n            try\n            { \n                // The list of existing channels\n                ChannelEntityListing result = apiInstance.GetNotificationsChannels(includechannels);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.GetNotificationsChannels: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "headnotificationschannel": {
    "operationId": "headnotificationschannel",
    "functionName": "HeadNotificationsChannel",
    "signature": "HeadNotificationsChannel(channelId)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class HeadNotificationsChannelExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var channelId = \"channelId_example\";  // string | Channel ID\n\n            try\n            { \n                // Verify a channel still exists and is valid\n                apiInstance.HeadNotificationsChannel(channelId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.HeadNotificationsChannel: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postnotificationschannelsubscriptions": {
    "operationId": "postnotificationschannelsubscriptions",
    "functionName": "PostNotificationsChannelSubscriptions",
    "signature": "PostNotificationsChannelSubscriptions(channelId, body)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<ChannelTopic>",
        "required": "true"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostNotificationsChannelSubscriptionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var channelId = \"channelId_example\";  // string | Channel ID\n            var body = new List<ChannelTopic>(); // List<ChannelTopic> | Body\n\n            try\n            { \n                // Add a list of subscriptions to the existing list of subscriptions\n                ChannelTopicEntityListing result = apiInstance.PostNotificationsChannelSubscriptions(channelId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.PostNotificationsChannelSubscriptions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postnotificationschannels": {
    "operationId": "postnotificationschannels",
    "functionName": "PostNotificationsChannels",
    "signature": "PostNotificationsChannels()",
    "return": "Channel",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostNotificationsChannelsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n\n            try\n            { \n                // Create a new channel\n                Channel result = apiInstance.PostNotificationsChannels();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.PostNotificationsChannels: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putnotificationschannelsubscriptions": {
    "operationId": "putnotificationschannelsubscriptions",
    "functionName": "PutNotificationsChannelSubscriptions",
    "signature": "PutNotificationsChannelSubscriptions(channelId, body)",
    "parameters": [
      {
        "name": "channelId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<ChannelTopic>",
        "required": "true"
      }
    ],
    "return": "ChannelTopicEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutNotificationsChannelSubscriptionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new NotificationsApi();\n            var channelId = \"channelId_example\";  // string | Channel ID\n            var body = new List<ChannelTopic>(); // List<ChannelTopic> | Body\n\n            try\n            { \n                // Replace the current list of subscriptions with a new list.\n                ChannelTopicEntityListing result = apiInstance.PutNotificationsChannelSubscriptions(channelId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Notifications.PutNotificationsChannelSubscriptions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoauthclient": {
    "operationId": "deleteoauthclient",
    "functionName": "DeleteOauthClient",
    "signature": "DeleteOauthClient(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOauthClientExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n\n            try\n            { \n                // Delete OAuth Client\n                apiInstance.DeleteOauthClient(clientId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.DeleteOauthClient: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthauthorization": {
    "operationId": "getoauthauthorization",
    "functionName": "GetOauthAuthorization",
    "signature": "GetOauthAuthorization(clientId, acceptLanguage)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OAuthAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthAuthorizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | The ID of client\n            var acceptLanguage = \"acceptLanguage_example\";  // string | The language in which to display the client descriptions. (optional)  (default to \"en-us\")\n\n            try\n            { \n                // Get a client that is authorized by the resource owner\n                OAuthAuthorization result = apiInstance.GetOauthAuthorization(clientId, acceptLanguage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthAuthorization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthauthorizations": {
    "operationId": "getoauthauthorizations",
    "functionName": "GetOauthAuthorizations",
    "signature": "GetOauthAuthorizations(acceptLanguage)",
    "parameters": [
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OAuthAuthorizationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthAuthorizationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var acceptLanguage = \"acceptLanguage_example\";  // string | The language in which to display the client descriptions. (optional)  (default to \"en-us\")\n\n            try\n            { \n                // List clients that have been authorized, requested, or revoked by the resource owner\n                OAuthAuthorizationListing result = apiInstance.GetOauthAuthorizations(acceptLanguage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthAuthorizations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthclient": {
    "operationId": "getoauthclient",
    "functionName": "GetOauthClient",
    "signature": "GetOauthClient(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthClientExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n\n            try\n            { \n                // Get OAuth Client\n                OAuthClient result = apiInstance.GetOauthClient(clientId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthClient: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthclientusagequeryresult": {
    "operationId": "getoauthclientusagequeryresult",
    "functionName": "GetOauthClientUsageQueryResult",
    "signature": "GetOauthClientUsageQueryResult(executionId, clientId)",
    "parameters": [
      {
        "name": "executionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ApiUsageQueryResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthClientUsageQueryResultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var executionId = \"executionId_example\";  // string | ID of the query execution\n            var clientId = \"clientId_example\";  // string | Client ID\n\n            try\n            { \n                // Get the results of a usage query\n                ApiUsageQueryResult result = apiInstance.GetOauthClientUsageQueryResult(executionId, clientId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthClientUsageQueryResult: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthclientusagesummary": {
    "operationId": "getoauthclientusagesummary",
    "functionName": "GetOauthClientUsageSummary",
    "signature": "GetOauthClientUsageSummary(clientId, days)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "days",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthClientUsageSummaryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n            var days = \"days_example\";  // string | Previous number of days to query (optional)  (default to \"7\")\n\n            try\n            { \n                // Get a summary of OAuth client API usage\n                UsageExecutionResult result = apiInstance.GetOauthClientUsageSummary(clientId, days);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthClientUsageSummary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthclients": {
    "operationId": "getoauthclients",
    "functionName": "GetOauthClients",
    "signature": "GetOauthClients()",
    "return": "OAuthClientEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthClientsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n\n            try\n            { \n                // The list of OAuth clients\n                OAuthClientEntityListing result = apiInstance.GetOauthClients();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthClients: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthscope": {
    "operationId": "getoauthscope",
    "functionName": "GetOauthScope",
    "signature": "GetOauthScope(scopeId, acceptLanguage)",
    "parameters": [
      {
        "name": "scopeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OAuthScope",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthScopeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var scopeId = \"scopeId_example\";  // string | Scope ID\n            var acceptLanguage = \"acceptLanguage_example\";  // string | The language with which to display the scope description. (optional)  (default to \"en-us\")\n\n            try\n            { \n                // An OAuth scope\n                OAuthScope result = apiInstance.GetOauthScope(scopeId, acceptLanguage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthScope: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoauthscopes": {
    "operationId": "getoauthscopes",
    "functionName": "GetOauthScopes",
    "signature": "GetOauthScopes(acceptLanguage)",
    "parameters": [
      {
        "name": "acceptLanguage",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OAuthScopeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOauthScopesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var acceptLanguage = \"acceptLanguage_example\";  // string | The language with which to display the scope descriptions. (optional)  (default to \"en-us\")\n\n            try\n            { \n                // The list of OAuth scopes\n                OAuthScopeListing result = apiInstance.GetOauthScopes(acceptLanguage);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.GetOauthScopes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoauthclientsecret": {
    "operationId": "postoauthclientsecret",
    "functionName": "PostOauthClientSecret",
    "signature": "PostOauthClientSecret(clientId)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOauthClientSecretExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n\n            try\n            { \n                // Regenerate Client Secret\n                OAuthClient result = apiInstance.PostOauthClientSecret(clientId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.PostOauthClientSecret: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoauthclientusagequery": {
    "operationId": "postoauthclientusagequery",
    "functionName": "PostOauthClientUsageQuery",
    "signature": "PostOauthClientUsageQuery(clientId, body)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ApiUsageQuery",
        "required": "true"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOauthClientUsageQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n            var body = new ApiUsageQuery(); // ApiUsageQuery | Query\n\n            try\n            { \n                // Query for OAuth client API usage\n                UsageExecutionResult result = apiInstance.PostOauthClientUsageQuery(clientId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.PostOauthClientUsageQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoauthclients": {
    "operationId": "postoauthclients",
    "functionName": "PostOauthClients",
    "signature": "PostOauthClients(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OAuthClientRequest",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOauthClientsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var body = new OAuthClientRequest(); // OAuthClientRequest | Client\n\n            try\n            { \n                // Create OAuth client\n                OAuthClient result = apiInstance.PostOauthClients(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.PostOauthClients: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoauthclient": {
    "operationId": "putoauthclient",
    "functionName": "PutOauthClient",
    "signature": "PutOauthClient(clientId, body)",
    "parameters": [
      {
        "name": "clientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OAuthClientRequest",
        "required": "true"
      }
    ],
    "return": "OAuthClient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOauthClientExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OAuthApi();\n            var clientId = \"clientId_example\";  // string | Client ID\n            var body = new OAuthClientRequest(); // OAuthClientRequest | Client\n\n            try\n            { \n                // Update OAuth Client\n                OAuthClient result = apiInstance.PutOauthClient(clientId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OAuth.PutOauthClient: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationsembeddedintegration": {
    "operationId": "getorganizationsembeddedintegration",
    "functionName": "GetOrganizationsEmbeddedintegration",
    "signature": "GetOrganizationsEmbeddedintegration()",
    "return": "EmbeddedIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsEmbeddedintegrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n\n            try\n            { \n                // Get the list of domains that will be allowed to embed PureCloud applications\n                EmbeddedIntegration result = apiInstance.GetOrganizationsEmbeddedintegration();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsEmbeddedintegration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationsipaddressauthentication": {
    "operationId": "getorganizationsipaddressauthentication",
    "functionName": "GetOrganizationsIpaddressauthentication",
    "signature": "GetOrganizationsIpaddressauthentication()",
    "return": "IpAddressAuthentication",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsIpaddressauthenticationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n\n            try\n            { \n                // Get organization IP address whitelist settings\n                IpAddressAuthentication result = apiInstance.GetOrganizationsIpaddressauthentication();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsIpaddressauthentication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitschangerequest": {
    "operationId": "getorganizationslimitschangerequest",
    "functionName": "GetOrganizationsLimitsChangerequest",
    "signature": "GetOrganizationsLimitsChangerequest(requestId)",
    "parameters": [
      {
        "name": "requestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LimitChangeRequestDetails",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsChangerequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var requestId = \"requestId_example\";  // string | Unique id for the limit change request\n\n            try\n            { \n                // Get a limit change request\n                LimitChangeRequestDetails result = apiInstance.GetOrganizationsLimitsChangerequest(requestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsChangerequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitschangerequests": {
    "operationId": "getorganizationslimitschangerequests",
    "functionName": "GetOrganizationsLimitsChangerequests",
    "signature": "GetOrganizationsLimitsChangerequests(after, before, status, pageSize, expand)",
    "parameters": [
      {
        "name": "after",
        "type": "long?",
        "required": "false"
      },
      {
        "name": "before",
        "type": "long?",
        "required": "false"
      },
      {
        "name": "status",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LimitChangeRequestsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsChangerequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var after = 789;  // long? | Timestamp indicating the date to begin after when searching for requests. (optional) \n            var before = 789;  // long? | Timestamp indicating the date to end before when searching for requests. (optional) \n            var status = \"status_example\";  // string | Status of the request to be filtered by (optional) \n            var pageSize = 56;  // int? | Page Size (optional)  (default to 25)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get the available limit change requests\n                LimitChangeRequestsEntityListing result = apiInstance.GetOrganizationsLimitsChangerequests(after, before, status, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsChangerequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitsdocs": {
    "operationId": "getorganizationslimitsdocs",
    "functionName": "GetOrganizationsLimitsDocs",
    "signature": "GetOrganizationsLimitsDocs()",
    "return": "UrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsDocsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n\n            try\n            { \n                // Get a link to the limit documentation\n                UrlResponse result = apiInstance.GetOrganizationsLimitsDocs();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsDocs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitsnamespace": {
    "operationId": "getorganizationslimitsnamespace",
    "functionName": "GetOrganizationsLimitsNamespace",
    "signature": "GetOrganizationsLimitsNamespace(namespaceName)",
    "parameters": [
      {
        "name": "namespaceName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LimitsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsNamespaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var namespaceName = \"namespaceName_example\";  // string | The namespace to fetch limits for\n\n            try\n            { \n                // Get the effective limits in a namespace for an organization\n                LimitsEntityListing result = apiInstance.GetOrganizationsLimitsNamespace(namespaceName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsNamespace: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitsnamespacedefaults": {
    "operationId": "getorganizationslimitsnamespacedefaults",
    "functionName": "GetOrganizationsLimitsNamespaceDefaults",
    "signature": "GetOrganizationsLimitsNamespaceDefaults(namespaceName)",
    "parameters": [
      {
        "name": "namespaceName",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LimitsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsNamespaceDefaultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var namespaceName = \"namespaceName_example\";  // string | The namespace to fetch defaults limits for\n\n            try\n            { \n                // Get the default limits in a namespace for an organization\n                LimitsEntityListing result = apiInstance.GetOrganizationsLimitsNamespaceDefaults(namespaceName);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsNamespaceDefaults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationslimitsnamespaces": {
    "operationId": "getorganizationslimitsnamespaces",
    "functionName": "GetOrganizationsLimitsNamespaces",
    "signature": "GetOrganizationsLimitsNamespaces(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsLimitsNamespacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 100)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get the available limit namespaces\n                Object result = apiInstance.GetOrganizationsLimitsNamespaces(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsLimitsNamespaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationsme": {
    "operationId": "getorganizationsme",
    "functionName": "GetOrganizationsMe",
    "signature": "GetOrganizationsMe()",
    "return": "Organization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n\n            try\n            { \n                // Get organization.\n                Organization result = apiInstance.GetOrganizationsMe();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorganizationswhitelist": {
    "operationId": "getorganizationswhitelist",
    "functionName": "GetOrganizationsWhitelist",
    "signature": "GetOrganizationsWhitelist()",
    "return": "OrgWhitelistSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrganizationsWhitelistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n\n            try\n            { \n                // Use PUT /api/v2/organizations/embeddedintegration instead\n                OrgWhitelistSettings result = apiInstance.GetOrganizationsWhitelist();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.GetOrganizationsWhitelist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchorganizationsfeature": {
    "operationId": "patchorganizationsfeature",
    "functionName": "PatchOrganizationsFeature",
    "signature": "PatchOrganizationsFeature(featureName, enabled)",
    "parameters": [
      {
        "name": "featureName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "enabled",
        "type": "FeatureState",
        "required": "true"
      }
    ],
    "return": "OrganizationFeatures",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchOrganizationsFeatureExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var featureName = \"featureName_example\";  // string | Organization feature\n            var enabled = new FeatureState(); // FeatureState | New state of feature\n\n            try\n            { \n                // Update organization\n                OrganizationFeatures result = apiInstance.PatchOrganizationsFeature(featureName, enabled);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.PatchOrganizationsFeature: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorganizationsembeddedintegration": {
    "operationId": "putorganizationsembeddedintegration",
    "functionName": "PutOrganizationsEmbeddedintegration",
    "signature": "PutOrganizationsEmbeddedintegration(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EmbeddedIntegration",
        "required": "true"
      }
    ],
    "return": "EmbeddedIntegration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrganizationsEmbeddedintegrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var body = new EmbeddedIntegration(); // EmbeddedIntegration | Whitelist settings\n\n            try\n            { \n                // Update the list of domains that will be allowed to embed PureCloud applications\n                EmbeddedIntegration result = apiInstance.PutOrganizationsEmbeddedintegration(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.PutOrganizationsEmbeddedintegration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorganizationsipaddressauthentication": {
    "operationId": "putorganizationsipaddressauthentication",
    "functionName": "PutOrganizationsIpaddressauthentication",
    "signature": "PutOrganizationsIpaddressauthentication(body)",
    "parameters": [
      {
        "name": "body",
        "type": "IpAddressAuthentication",
        "required": "true"
      }
    ],
    "return": "IpAddressAuthentication",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrganizationsIpaddressauthenticationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var body = new IpAddressAuthentication(); // IpAddressAuthentication | IP address Whitelist settings\n\n            try\n            { \n                // Update organization IP address whitelist settings\n                IpAddressAuthentication result = apiInstance.PutOrganizationsIpaddressauthentication(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.PutOrganizationsIpaddressauthentication: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorganizationsme": {
    "operationId": "putorganizationsme",
    "functionName": "PutOrganizationsMe",
    "signature": "PutOrganizationsMe(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Organization",
        "required": "false"
      }
    ],
    "return": "Organization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrganizationsMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var body = new Organization(); // Organization | Organization (optional) \n\n            try\n            { \n                // Update organization.\n                Organization result = apiInstance.PutOrganizationsMe(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.PutOrganizationsMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorganizationswhitelist": {
    "operationId": "putorganizationswhitelist",
    "functionName": "PutOrganizationsWhitelist",
    "signature": "PutOrganizationsWhitelist(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrgWhitelistSettings",
        "required": "true"
      }
    ],
    "return": "OrgWhitelistSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrganizationsWhitelistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationApi();\n            var body = new OrgWhitelistSettings(); // OrgWhitelistSettings | Whitelist settings\n\n            try\n            { \n                // Use PUT /api/v2/organizations/embeddedintegration instead\n                OrgWhitelistSettings result = apiInstance.PutOrganizationsWhitelist(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Organization.PutOrganizationsWhitelist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrustee": {
    "operationId": "deleteorgauthorizationtrustee",
    "functionName": "DeleteOrgauthorizationTrustee",
    "signature": "DeleteOrgauthorizationTrustee(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrusteeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n\n            try\n            { \n                // Delete Org Trust\n                apiInstance.DeleteOrgauthorizationTrustee(trusteeOrgId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrustee: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrusteecloneduser": {
    "operationId": "deleteorgauthorizationtrusteecloneduser",
    "functionName": "DeleteOrgauthorizationTrusteeCloneduser",
    "signature": "DeleteOrgauthorizationTrusteeCloneduser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrusteeCloneduserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Id of the cloned user to delete\n\n            try\n            { \n                // Deletes cloned user\n                apiInstance.DeleteOrgauthorizationTrusteeCloneduser(trusteeOrgId, trusteeUserId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrusteeCloneduser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrusteeuser": {
    "operationId": "deleteorgauthorizationtrusteeuser",
    "functionName": "DeleteOrgauthorizationTrusteeUser",
    "signature": "DeleteOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrusteeUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Delete Trustee User\n                apiInstance.DeleteOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrusteeUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrusteeuserroles": {
    "operationId": "deleteorgauthorizationtrusteeuserroles",
    "functionName": "DeleteOrgauthorizationTrusteeUserRoles",
    "signature": "DeleteOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrusteeUserRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Delete Trustee User Roles\n                apiInstance.DeleteOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrusteeUserRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrustor": {
    "operationId": "deleteorgauthorizationtrustor",
    "functionName": "DeleteOrgauthorizationTrustor",
    "signature": "DeleteOrgauthorizationTrustor(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrustorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n\n            try\n            { \n                // Delete Org Trust\n                apiInstance.DeleteOrgauthorizationTrustor(trustorOrgId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrustor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrustorcloneduser": {
    "operationId": "deleteorgauthorizationtrustorcloneduser",
    "functionName": "DeleteOrgauthorizationTrustorCloneduser",
    "signature": "DeleteOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrustorCloneduserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Delete Cloned User\n                apiInstance.DeleteOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrustorCloneduser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorgauthorizationtrustoruser": {
    "operationId": "deleteorgauthorizationtrustoruser",
    "functionName": "DeleteOrgauthorizationTrustorUser",
    "signature": "DeleteOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrgauthorizationTrustorUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Delete Trustee User\n                apiInstance.DeleteOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.DeleteOrgauthorizationTrustorUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationpairing": {
    "operationId": "getorgauthorizationpairing",
    "functionName": "GetOrgauthorizationPairing",
    "signature": "GetOrgauthorizationPairing(pairingId)",
    "parameters": [
      {
        "name": "pairingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrustRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationPairingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var pairingId = \"pairingId_example\";  // string | Pairing Id\n\n            try\n            { \n                // Get Pairing Info\n                TrustRequest result = apiInstance.GetOrgauthorizationPairing(pairingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationPairing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustee": {
    "operationId": "getorgauthorizationtrustee",
    "functionName": "GetOrgauthorizationTrustee",
    "signature": "GetOrgauthorizationTrustee(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n\n            try\n            { \n                // Get Org Trust\n                Trustee result = apiInstance.GetOrgauthorizationTrustee(trusteeOrgId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustee: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrusteeclonedusers": {
    "operationId": "getorgauthorizationtrusteeclonedusers",
    "functionName": "GetOrgauthorizationTrusteeClonedusers",
    "signature": "GetOrgauthorizationTrusteeClonedusers(trusteeOrgId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ClonedUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteeClonedusersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n\n            try\n            { \n                // The list of cloned users from the trustee organization (i.e. users with a native user record).\n                ClonedUserEntityListing result = apiInstance.GetOrgauthorizationTrusteeClonedusers(trusteeOrgId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrusteeClonedusers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrusteeuser": {
    "operationId": "getorgauthorizationtrusteeuser",
    "functionName": "GetOrgauthorizationTrusteeUser",
    "signature": "GetOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteeUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Get Trustee User\n                TrustUser result = apiInstance.GetOrgauthorizationTrusteeUser(trusteeOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrusteeUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrusteeuserroles": {
    "operationId": "getorgauthorizationtrusteeuserroles",
    "functionName": "GetOrgauthorizationTrusteeUserRoles",
    "signature": "GetOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteeUserRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Get Trustee User Roles\n                UserAuthorization result = apiInstance.GetOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrusteeUserRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrusteeusers": {
    "operationId": "getorgauthorizationtrusteeusers",
    "functionName": "GetOrgauthorizationTrusteeUsers",
    "signature": "GetOrgauthorizationTrusteeUsers(trusteeOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrustUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteeUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // The list of trustee users for this organization (i.e. users granted access to this organization).\n                TrustUserEntityListing result = apiInstance.GetOrgauthorizationTrusteeUsers(trusteeOrgId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrusteeUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustees": {
    "operationId": "getorgauthorizationtrustees",
    "functionName": "GetOrgauthorizationTrustees",
    "signature": "GetOrgauthorizationTrustees(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrustEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // The list of trustees for this organization (i.e. organizations granted access to this organization).\n                TrustEntityListing result = apiInstance.GetOrgauthorizationTrustees(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustees: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrusteesdefault": {
    "operationId": "getorgauthorizationtrusteesdefault",
    "functionName": "GetOrgauthorizationTrusteesDefault",
    "signature": "GetOrgauthorizationTrusteesDefault()",
    "return": "Trustee",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrusteesDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n\n            try\n            { \n                // Get organization authorization trust with Customer Care, if one exists.\n                Trustee result = apiInstance.GetOrgauthorizationTrusteesDefault();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrusteesDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustor": {
    "operationId": "getorgauthorizationtrustor",
    "functionName": "GetOrgauthorizationTrustor",
    "signature": "GetOrgauthorizationTrustor(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trustor",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n\n            try\n            { \n                // Get Org Trust\n                Trustor result = apiInstance.GetOrgauthorizationTrustor(trustorOrgId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustorcloneduser": {
    "operationId": "getorgauthorizationtrustorcloneduser",
    "functionName": "GetOrgauthorizationTrustorCloneduser",
    "signature": "GetOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ClonedUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorCloneduserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Get Cloned User\n                ClonedUser result = apiInstance.GetOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustorCloneduser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustorclonedusers": {
    "operationId": "getorgauthorizationtrustorclonedusers",
    "functionName": "GetOrgauthorizationTrustorClonedusers",
    "signature": "GetOrgauthorizationTrustorClonedusers(trustorOrgId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ClonedUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorClonedusersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n\n            try\n            { \n                // The list of cloned users in the trustor organization (i.e. users with a native user record).\n                ClonedUserEntityListing result = apiInstance.GetOrgauthorizationTrustorClonedusers(trustorOrgId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustorClonedusers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustoruser": {
    "operationId": "getorgauthorizationtrustoruser",
    "functionName": "GetOrgauthorizationTrustorUser",
    "signature": "GetOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Get Trustee User\n                TrustUser result = apiInstance.GetOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustorUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustorusers": {
    "operationId": "getorgauthorizationtrustorusers",
    "functionName": "GetOrgauthorizationTrustorUsers",
    "signature": "GetOrgauthorizationTrustorUsers(trustorOrgId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrustUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustee Organization Id\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // The list of users in the trustor organization (i.e. users granted access).\n                TrustUserEntityListing result = apiInstance.GetOrgauthorizationTrustorUsers(trustorOrgId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustorUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorgauthorizationtrustors": {
    "operationId": "getorgauthorizationtrustors",
    "functionName": "GetOrgauthorizationTrustors",
    "signature": "GetOrgauthorizationTrustors(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrustorEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrgauthorizationTrustorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // The list of organizations that have authorized/trusted your organization.\n                TrustorEntityListing result = apiInstance.GetOrgauthorizationTrustors(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.GetOrgauthorizationTrustors: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationpairings": {
    "operationId": "postorgauthorizationpairings",
    "functionName": "PostOrgauthorizationPairings",
    "signature": "PostOrgauthorizationPairings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustRequestCreate",
        "required": "true"
      }
    ],
    "return": "TrustRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationPairingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var body = new TrustRequestCreate(); // TrustRequestCreate | Pairing Info\n\n            try\n            { \n                // A pairing id is created by the trustee and given to the trustor to create a trust.\n                TrustRequest result = apiInstance.PostOrgauthorizationPairings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationPairings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationtrusteeusers": {
    "operationId": "postorgauthorizationtrusteeusers",
    "functionName": "PostOrgauthorizationTrusteeUsers",
    "signature": "PostOrgauthorizationTrusteeUsers(trusteeOrgId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrustMemberCreate",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationTrusteeUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var body = new TrustMemberCreate(); // TrustMemberCreate | Trust\n\n            try\n            { \n                // Add a user to the trust.\n                TrustUser result = apiInstance.PostOrgauthorizationTrusteeUsers(trusteeOrgId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationTrusteeUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationtrustees": {
    "operationId": "postorgauthorizationtrustees",
    "functionName": "PostOrgauthorizationTrustees",
    "signature": "PostOrgauthorizationTrustees(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustCreate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationTrusteesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var body = new TrustCreate(); // TrustCreate | Trust\n\n            try\n            { \n                // Create a new organization authorization trust. This is required to grant other organizations access to your organization.\n                Trustee result = apiInstance.PostOrgauthorizationTrustees(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationTrustees: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationtrusteesaudits": {
    "operationId": "postorgauthorizationtrusteesaudits",
    "functionName": "PostOrgauthorizationTrusteesAudits",
    "signature": "PostOrgauthorizationTrusteesAudits(body, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "body",
        "type": "TrusteeAuditQueryRequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationTrusteesAuditsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var body = new TrusteeAuditQueryRequest(); // TrusteeAuditQueryRequest | Values to scope the request.\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"timestamp\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"descending\")\n\n            try\n            { \n                // Get Org Trustee Audits\n                Object result = apiInstance.PostOrgauthorizationTrusteesAudits(body, pageSize, pageNumber, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationTrusteesAudits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationtrusteesdefault": {
    "operationId": "postorgauthorizationtrusteesdefault",
    "functionName": "PostOrgauthorizationTrusteesDefault",
    "signature": "PostOrgauthorizationTrusteesDefault(assignDefaultRole, autoExpire)",
    "parameters": [
      {
        "name": "assignDefaultRole",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "autoExpire",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Trustee",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationTrusteesDefaultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var assignDefaultRole = true;  // bool? | Assign Admin role to default pairing with Customer Care (optional) \n            var autoExpire = true;  // bool? | Automatically expire pairing after 30 days (optional) \n\n            try\n            { \n                // Create a new organization authorization trust with Customer Care. This is required to grant your regional Customer Care organization access to your organization.\n                Trustee result = apiInstance.PostOrgauthorizationTrusteesDefault(assignDefaultRole, autoExpire);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationTrusteesDefault: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postorgauthorizationtrustoraudits": {
    "operationId": "postorgauthorizationtrustoraudits",
    "functionName": "PostOrgauthorizationTrustorAudits",
    "signature": "PostOrgauthorizationTrustorAudits(body, pageSize, pageNumber, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "body",
        "type": "TrustorAuditQueryRequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOrgauthorizationTrustorAuditsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var body = new TrustorAuditQueryRequest(); // TrustorAuditQueryRequest | Values to scope the request.\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"timestamp\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"descending\")\n\n            try\n            { \n                // Get Org Trustor Audits\n                Object result = apiInstance.PostOrgauthorizationTrustorAudits(body, pageSize, pageNumber, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PostOrgauthorizationTrustorAudits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorgauthorizationtrustee": {
    "operationId": "putorgauthorizationtrustee",
    "functionName": "PutOrgauthorizationTrustee",
    "signature": "PutOrgauthorizationTrustee(trusteeOrgId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrustUpdate",
        "required": "true"
      }
    ],
    "return": "Trustee",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrgauthorizationTrusteeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var body = new TrustUpdate(); // TrustUpdate | Client\n\n            try\n            { \n                // Update Org Trust\n                Trustee result = apiInstance.PutOrgauthorizationTrustee(trusteeOrgId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PutOrgauthorizationTrustee: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorgauthorizationtrusteeuserroledivisions": {
    "operationId": "putorgauthorizationtrusteeuserroledivisions",
    "functionName": "PutOrgauthorizationTrusteeUserRoledivisions",
    "signature": "PutOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId, trusteeUserId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoleDivisionGrants",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrgauthorizationTrusteeUserRoledivisionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n            var body = new RoleDivisionGrants(); // RoleDivisionGrants | Set of roles with corresponding divisions to apply\n\n            try\n            { \n                // Update Trustee User Roles\n                UserAuthorization result = apiInstance.PutOrgauthorizationTrusteeUserRoledivisions(trusteeOrgId, trusteeUserId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PutOrgauthorizationTrusteeUserRoledivisions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorgauthorizationtrusteeuserroles": {
    "operationId": "putorgauthorizationtrusteeuserroles",
    "functionName": "PutOrgauthorizationTrusteeUserRoles",
    "signature": "PutOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId, body)",
    "parameters": [
      {
        "name": "trusteeOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "UserAuthorization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrgauthorizationTrusteeUserRolesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trusteeOrgId = \"trusteeOrgId_example\";  // string | Trustee Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n            var body = new List<string>(); // List<string> | List of roles\n\n            try\n            { \n                // Update Trustee User Roles\n                UserAuthorization result = apiInstance.PutOrgauthorizationTrusteeUserRoles(trusteeOrgId, trusteeUserId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PutOrgauthorizationTrusteeUserRoles: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorgauthorizationtrustorcloneduser": {
    "operationId": "putorgauthorizationtrustorcloneduser",
    "functionName": "PutOrgauthorizationTrustorCloneduser",
    "signature": "PutOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ClonedUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrgauthorizationTrustorCloneduserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Creates a clone of the trustee user in the trustor org.\n                ClonedUser result = apiInstance.PutOrgauthorizationTrustorCloneduser(trustorOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PutOrgauthorizationTrustorCloneduser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorgauthorizationtrustoruser": {
    "operationId": "putorgauthorizationtrustoruser",
    "functionName": "PutOrgauthorizationTrustorUser",
    "signature": "PutOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId)",
    "parameters": [
      {
        "name": "trustorOrgId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "trusteeUserId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrustUser",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrgauthorizationTrustorUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OrganizationAuthorizationApi();\n            var trustorOrgId = \"trustorOrgId_example\";  // string | Trustor Organization Id\n            var trusteeUserId = \"trusteeUserId_example\";  // string | Trustee User Id\n\n            try\n            { \n                // Add a Trustee user to the trust.\n                TrustUser result = apiInstance.PutOrgauthorizationTrustorUser(trustorOrgId, trusteeUserId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling OrganizationAuthorization.PutOrgauthorizationTrustorUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundattemptlimit": {
    "operationId": "deleteoutboundattemptlimit",
    "functionName": "DeleteOutboundAttemptlimit",
    "signature": "DeleteOutboundAttemptlimit(attemptLimitsId)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundAttemptlimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var attemptLimitsId = \"attemptLimitsId_example\";  // string | Attempt limits ID\n\n            try\n            { \n                // Delete attempt limits\n                apiInstance.DeleteOutboundAttemptlimit(attemptLimitsId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundAttemptlimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcallabletimeset": {
    "operationId": "deleteoutboundcallabletimeset",
    "functionName": "DeleteOutboundCallabletimeset",
    "signature": "DeleteOutboundCallabletimeset(callableTimeSetId)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundCallabletimesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callableTimeSetId = \"callableTimeSetId_example\";  // string | Callable Time Set ID\n\n            try\n            { \n                // Delete callable time set\n                apiInstance.DeleteOutboundCallabletimeset(callableTimeSetId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundCallabletimeset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcallanalysisresponseset": {
    "operationId": "deleteoutboundcallanalysisresponseset",
    "functionName": "DeleteOutboundCallanalysisresponseset",
    "signature": "DeleteOutboundCallanalysisresponseset(callAnalysisSetId)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundCallanalysisresponsesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callAnalysisSetId = \"callAnalysisSetId_example\";  // string | Call Analysis Response Set ID\n\n            try\n            { \n                // Delete a dialer call analysis response set.\n                apiInstance.DeleteOutboundCallanalysisresponseset(callAnalysisSetId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundCallanalysisresponseset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcampaign": {
    "operationId": "deleteoutboundcampaign",
    "functionName": "DeleteOutboundCampaign",
    "signature": "DeleteOutboundCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Delete a campaign.\n                Campaign result = apiInstance.DeleteOutboundCampaign(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcampaignprogress": {
    "operationId": "deleteoutboundcampaignprogress",
    "functionName": "DeleteOutboundCampaignProgress",
    "signature": "DeleteOutboundCampaignProgress(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundCampaignProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Reset campaign progress and recycle the campaign\n                apiInstance.DeleteOutboundCampaignProgress(campaignId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundCampaignProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcampaignrule": {
    "operationId": "deleteoutboundcampaignrule",
    "functionName": "DeleteOutboundCampaignrule",
    "signature": "DeleteOutboundCampaignrule(campaignRuleId)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundCampaignruleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignRuleId = \"campaignRuleId_example\";  // string | Campaign Rule ID\n\n            try\n            { \n                // Delete Campaign Rule\n                apiInstance.DeleteOutboundCampaignrule(campaignRuleId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundCampaignrule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcontactlist": {
    "operationId": "deleteoutboundcontactlist",
    "functionName": "DeleteOutboundContactlist",
    "signature": "DeleteOutboundContactlist(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundContactlistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n\n            try\n            { \n                // Delete a contact list.\n                apiInstance.DeleteOutboundContactlist(contactListId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundContactlist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcontactlistcontact": {
    "operationId": "deleteoutboundcontactlistcontact",
    "functionName": "DeleteOutboundContactlistContact",
    "signature": "DeleteOutboundContactlistContact(contactListId, contactId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundContactlistContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var contactId = \"contactId_example\";  // string | Contact ID\n\n            try\n            { \n                // Delete a contact.\n                apiInstance.DeleteOutboundContactlistContact(contactListId, contactId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundContactlistContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcontactlistcontacts": {
    "operationId": "deleteoutboundcontactlistcontacts",
    "functionName": "DeleteOutboundContactlistContacts",
    "signature": "DeleteOutboundContactlistContacts(contactListId, contactIds)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactIds",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundContactlistContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var contactIds = new List<string>(); // List<string> | ContactIds to delete.\n\n            try\n            { \n                // Delete contacts from a contact list.\n                apiInstance.DeleteOutboundContactlistContacts(contactListId, contactIds);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundContactlistContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcontactlistfilter": {
    "operationId": "deleteoutboundcontactlistfilter",
    "functionName": "DeleteOutboundContactlistfilter",
    "signature": "DeleteOutboundContactlistfilter(contactListFilterId)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundContactlistfilterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListFilterId = \"contactListFilterId_example\";  // string | Contact List Filter ID\n\n            try\n            { \n                // Delete Contact List Filter\n                apiInstance.DeleteOutboundContactlistfilter(contactListFilterId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundContactlistfilter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundcontactlists": {
    "operationId": "deleteoutboundcontactlists",
    "functionName": "DeleteOutboundContactlists",
    "signature": "DeleteOutboundContactlists(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundContactlistsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var id = new List<string>(); // List<string> | contact list id(s) to delete\n\n            try\n            { \n                // Delete multiple contact lists.\n                apiInstance.DeleteOutboundContactlists(id);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundContactlists: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutbounddigitalruleset": {
    "operationId": "deleteoutbounddigitalruleset",
    "functionName": "DeleteOutboundDigitalruleset",
    "signature": "DeleteOutboundDigitalruleset(digitalRuleSetId)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundDigitalrulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var digitalRuleSetId = \"digitalRuleSetId_example\";  // string | The Digital Rule Set ID\n\n            try\n            { \n                // Delete an Outbound Digital Rule Set\n                apiInstance.DeleteOutboundDigitalruleset(digitalRuleSetId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundDigitalruleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutbounddnclist": {
    "operationId": "deleteoutbounddnclist",
    "functionName": "DeleteOutboundDnclist",
    "signature": "DeleteOutboundDnclist(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundDnclistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n\n            try\n            { \n                // Delete dialer DNC list\n                apiInstance.DeleteOutboundDnclist(dncListId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundDnclist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundmessagingcampaign": {
    "operationId": "deleteoutboundmessagingcampaign",
    "functionName": "DeleteOutboundMessagingcampaign",
    "signature": "DeleteOutboundMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n\n            try\n            { \n                // Delete an Outbound Messaging Campaign\n                MessagingCampaign result = apiInstance.DeleteOutboundMessagingcampaign(messagingCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundmessagingcampaignprogress": {
    "operationId": "deleteoutboundmessagingcampaignprogress",
    "functionName": "DeleteOutboundMessagingcampaignProgress",
    "signature": "DeleteOutboundMessagingcampaignProgress(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundMessagingcampaignProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n\n            try\n            { \n                // Reset messaging campaign progress and recycle the messaging campaign\n                apiInstance.DeleteOutboundMessagingcampaignProgress(messagingCampaignId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundMessagingcampaignProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundruleset": {
    "operationId": "deleteoutboundruleset",
    "functionName": "DeleteOutboundRuleset",
    "signature": "DeleteOutboundRuleset(ruleSetId)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundRulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var ruleSetId = \"ruleSetId_example\";  // string | Rule Set ID\n\n            try\n            { \n                // Delete a Rule Set.\n                apiInstance.DeleteOutboundRuleset(ruleSetId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundRuleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundschedulescampaign": {
    "operationId": "deleteoutboundschedulescampaign",
    "functionName": "DeleteOutboundSchedulesCampaign",
    "signature": "DeleteOutboundSchedulesCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundSchedulesCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Delete a dialer campaign schedule.\n                apiInstance.DeleteOutboundSchedulesCampaign(campaignId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundSchedulesCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundschedulesemailcampaign": {
    "operationId": "deleteoutboundschedulesemailcampaign",
    "functionName": "DeleteOutboundSchedulesEmailcampaign",
    "signature": "DeleteOutboundSchedulesEmailcampaign(emailCampaignId)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundSchedulesEmailcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var emailCampaignId = \"emailCampaignId_example\";  // string | Email Campaign ID\n\n            try\n            { \n                // Delete an email campaign schedule.\n                apiInstance.DeleteOutboundSchedulesEmailcampaign(emailCampaignId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundSchedulesEmailcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundschedulesmessagingcampaign": {
    "operationId": "deleteoutboundschedulesmessagingcampaign",
    "functionName": "DeleteOutboundSchedulesMessagingcampaign",
    "signature": "DeleteOutboundSchedulesMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundSchedulesMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | Messaging Campaign ID\n\n            try\n            { \n                // Delete a messaging campaign schedule.\n                apiInstance.DeleteOutboundSchedulesMessagingcampaign(messagingCampaignId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundSchedulesMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundschedulessequence": {
    "operationId": "deleteoutboundschedulessequence",
    "functionName": "DeleteOutboundSchedulesSequence",
    "signature": "DeleteOutboundSchedulesSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundSchedulesSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Sequence ID\n\n            try\n            { \n                // Delete a dialer sequence schedule.\n                apiInstance.DeleteOutboundSchedulesSequence(sequenceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundSchedulesSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteoutboundsequence": {
    "operationId": "deleteoutboundsequence",
    "functionName": "DeleteOutboundSequence",
    "signature": "DeleteOutboundSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOutboundSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Campaign Sequence ID\n\n            try\n            { \n                // Delete a dialer campaign sequence.\n                apiInstance.DeleteOutboundSequence(sequenceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.DeleteOutboundSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundattemptlimit": {
    "operationId": "getoutboundattemptlimit",
    "functionName": "GetOutboundAttemptlimit",
    "signature": "GetOutboundAttemptlimit(attemptLimitsId)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundAttemptlimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var attemptLimitsId = \"attemptLimitsId_example\";  // string | Attempt limits ID\n\n            try\n            { \n                // Get attempt limits\n                AttemptLimits result = apiInstance.GetOutboundAttemptlimit(attemptLimitsId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundAttemptlimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundattemptlimits": {
    "operationId": "getoutboundattemptlimits",
    "functionName": "GetOutboundAttemptlimits",
    "signature": "GetOutboundAttemptlimits(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "AttemptLimitsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundAttemptlimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query attempt limits list\n                AttemptLimitsEntityListing result = apiInstance.GetOutboundAttemptlimits(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundAttemptlimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcallabletimeset": {
    "operationId": "getoutboundcallabletimeset",
    "functionName": "GetOutboundCallabletimeset",
    "signature": "GetOutboundCallabletimeset(callableTimeSetId)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCallabletimesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callableTimeSetId = \"callableTimeSetId_example\";  // string | Callable Time Set ID\n\n            try\n            { \n                // Get callable time set\n                CallableTimeSet result = apiInstance.GetOutboundCallabletimeset(callableTimeSetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCallabletimeset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcallabletimesets": {
    "operationId": "getoutboundcallabletimesets",
    "functionName": "GetOutboundCallabletimesets",
    "signature": "GetOutboundCallabletimesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CallableTimeSetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCallabletimesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query callable time set list\n                CallableTimeSetEntityListing result = apiInstance.GetOutboundCallabletimesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCallabletimesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcallanalysisresponseset": {
    "operationId": "getoutboundcallanalysisresponseset",
    "functionName": "GetOutboundCallanalysisresponseset",
    "signature": "GetOutboundCallanalysisresponseset(callAnalysisSetId)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCallanalysisresponsesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callAnalysisSetId = \"callAnalysisSetId_example\";  // string | Call Analysis Response Set ID\n\n            try\n            { \n                // Get a dialer call analysis response set.\n                ResponseSet result = apiInstance.GetOutboundCallanalysisresponseset(callAnalysisSetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCallanalysisresponseset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcallanalysisresponsesets": {
    "operationId": "getoutboundcallanalysisresponsesets",
    "functionName": "GetOutboundCallanalysisresponsesets",
    "signature": "GetOutboundCallanalysisresponsesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ResponseSetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCallanalysisresponsesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of dialer call analysis response sets.\n                ResponseSetEntityListing result = apiInstance.GetOutboundCallanalysisresponsesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCallanalysisresponsesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaign": {
    "operationId": "getoutboundcampaign",
    "functionName": "GetOutboundCampaign",
    "signature": "GetOutboundCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get dialer campaign.\n                Campaign result = apiInstance.GetOutboundCampaign(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignagentownedmappingpreviewresults": {
    "operationId": "getoutboundcampaignagentownedmappingpreviewresults",
    "functionName": "GetOutboundCampaignAgentownedmappingpreviewResults",
    "signature": "GetOutboundCampaignAgentownedmappingpreviewResults(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AgentOwnedMappingPreviewListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignAgentownedmappingpreviewResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get a preview of how agents will be mapped to this campaign's contact list.\n                AgentOwnedMappingPreviewListing result = apiInstance.GetOutboundCampaignAgentownedmappingpreviewResults(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignAgentownedmappingpreviewResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaigndiagnostics": {
    "operationId": "getoutboundcampaigndiagnostics",
    "functionName": "GetOutboundCampaignDiagnostics",
    "signature": "GetOutboundCampaignDiagnostics(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignDiagnostics",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignDiagnosticsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get campaign diagnostics\n                CampaignDiagnostics result = apiInstance.GetOutboundCampaignDiagnostics(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignDiagnostics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaigninteractions": {
    "operationId": "getoutboundcampaigninteractions",
    "functionName": "GetOutboundCampaignInteractions",
    "signature": "GetOutboundCampaignInteractions(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignInteractions",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignInteractionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get dialer campaign interactions.\n                CampaignInteractions result = apiInstance.GetOutboundCampaignInteractions(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignInteractions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignprogress": {
    "operationId": "getoutboundcampaignprogress",
    "functionName": "GetOutboundCampaignProgress",
    "signature": "GetOutboundCampaignProgress(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignProgress",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get campaign progress\n                CampaignProgress result = apiInstance.GetOutboundCampaignProgress(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignstats": {
    "operationId": "getoutboundcampaignstats",
    "functionName": "GetOutboundCampaignStats",
    "signature": "GetOutboundCampaignStats(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignStats",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignStatsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get statistics about a Dialer Campaign\n                CampaignStats result = apiInstance.GetOutboundCampaignStats(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignStats: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignrule": {
    "operationId": "getoutboundcampaignrule",
    "functionName": "GetOutboundCampaignrule",
    "signature": "GetOutboundCampaignrule(campaignRuleId)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignruleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignRuleId = \"campaignRuleId_example\";  // string | Campaign Rule ID\n\n            try\n            { \n                // Get Campaign Rule\n                CampaignRule result = apiInstance.GetOutboundCampaignrule(campaignRuleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignrule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignrules": {
    "operationId": "getoutboundcampaignrules",
    "functionName": "GetOutboundCampaignrules",
    "signature": "GetOutboundCampaignrules(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CampaignRuleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignrulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query Campaign Rule list\n                CampaignRuleEntityListing result = apiInstance.GetOutboundCampaignrules(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignrules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaigns": {
    "operationId": "getoutboundcampaigns",
    "functionName": "GetOutboundCampaigns",
    "signature": "GetOutboundCampaigns(pageSize, pageNumber, filterType, name, id, contactListId, dncListIds, distributionQueueId, edgeGroupId, callAnalysisResponseSetId, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncListIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "distributionQueueId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "callAnalysisResponseSetId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CampaignEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var contactListId = \"contactListId_example\";  // string | Contact List ID (optional) \n            var dncListIds = \"dncListIds_example\";  // string | DNC list ID (optional) \n            var distributionQueueId = \"distributionQueueId_example\";  // string | Distribution queue ID (optional) \n            var edgeGroupId = \"edgeGroupId_example\";  // string | Edge group ID (optional) \n            var callAnalysisResponseSetId = \"callAnalysisResponseSetId_example\";  // string | Call analysis response set ID (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of dialer campaigns.\n                CampaignEntityListing result = apiInstance.GetOutboundCampaigns(pageSize, pageNumber, filterType, name, id, contactListId, dncListIds, distributionQueueId, edgeGroupId, callAnalysisResponseSetId, divisionId, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignsall": {
    "operationId": "getoutboundcampaignsall",
    "functionName": "GetOutboundCampaignsAll",
    "signature": "GetOutboundCampaignsAll(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CommonCampaignEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignsAllExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | Campaign ID(s) (optional) \n            var name = \"name_example\";  // string | Campaign name(s) (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var mediaType = new List<string>(); // List<string> | Media type(s) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query across all types of campaigns by division\n                CommonCampaignEntityListing result = apiInstance.GetOutboundCampaignsAll(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignsAll: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignsalldivisionviews": {
    "operationId": "getoutboundcampaignsalldivisionviews",
    "functionName": "GetOutboundCampaignsAllDivisionviews",
    "signature": "GetOutboundCampaignsAllDivisionviews(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "mediaType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CommonCampaignDivisionViewEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignsAllDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | Campaign ID(s) (optional) \n            var name = \"name_example\";  // string | Campaign name(s) (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var mediaType = new List<string>(); // List<string> | Media type(s) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query across all types of campaigns\n                CommonCampaignDivisionViewEntityListing result = apiInstance.GetOutboundCampaignsAllDivisionviews(pageSize, pageNumber, id, name, divisionId, mediaType, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignsAllDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignsdivisionview": {
    "operationId": "getoutboundcampaignsdivisionview",
    "functionName": "GetOutboundCampaignsDivisionview",
    "signature": "GetOutboundCampaignsDivisionview(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignDivisionView",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignsDivisionviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get a basic Campaign information object\n                CampaignDivisionView result = apiInstance.GetOutboundCampaignsDivisionview(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignsDivisionview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcampaignsdivisionviews": {
    "operationId": "getoutboundcampaignsdivisionviews",
    "functionName": "GetOutboundCampaignsDivisionviews",
    "signature": "GetOutboundCampaignsDivisionviews(pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CampaignDivisionViewListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundCampaignsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of basic Campaign information objects\n                CampaignDivisionViewListing result = apiInstance.GetOutboundCampaignsDivisionviews(pageSize, pageNumber, filterType, name, id, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundCampaignsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlist": {
    "operationId": "getoutboundcontactlist",
    "functionName": "GetOutboundContactlist",
    "signature": "GetOutboundContactlist(contactListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ContactList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n            var includeImportStatus = true;  // bool? | Import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n\n            try\n            { \n                // Get a dialer contact list.\n                ContactList result = apiInstance.GetOutboundContactlist(contactListId, includeImportStatus, includeSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistcontact": {
    "operationId": "getoutboundcontactlistcontact",
    "functionName": "GetOutboundContactlistContact",
    "signature": "GetOutboundContactlistContact(contactListId, contactId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DialerContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var contactId = \"contactId_example\";  // string | Contact ID\n\n            try\n            { \n                // Get a contact.\n                DialerContact result = apiInstance.GetOutboundContactlistContact(contactListId, contactId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistexport": {
    "operationId": "getoutboundcontactlistexport",
    "functionName": "GetOutboundContactlistExport",
    "signature": "GetOutboundContactlistExport(contactListId, download)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "download",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ExportUri",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistExportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n            var download = \"download_example\";  // string | Redirect to download uri (optional)  (default to \"false\")\n\n            try\n            { \n                // Get the URI of a contact list export.\n                ExportUri result = apiInstance.GetOutboundContactlistExport(contactListId, download);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistExport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistimportstatus": {
    "operationId": "getoutboundcontactlistimportstatus",
    "functionName": "GetOutboundContactlistImportstatus",
    "signature": "GetOutboundContactlistImportstatus(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ImportStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistImportstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n\n            try\n            { \n                // Get dialer contactList import status.\n                ImportStatus result = apiInstance.GetOutboundContactlistImportstatus(contactListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistImportstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlisttimezonemappingpreview": {
    "operationId": "getoutboundcontactlisttimezonemappingpreview",
    "functionName": "GetOutboundContactlistTimezonemappingpreview",
    "signature": "GetOutboundContactlistTimezonemappingpreview(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeZoneMappingPreview",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistTimezonemappingpreviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n\n            try\n            { \n                // Preview the result of applying Automatic Time Zone Mapping to a contact list\n                TimeZoneMappingPreview result = apiInstance.GetOutboundContactlistTimezonemappingpreview(contactListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistTimezonemappingpreview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistfilter": {
    "operationId": "getoutboundcontactlistfilter",
    "functionName": "GetOutboundContactlistfilter",
    "signature": "GetOutboundContactlistfilter(contactListFilterId)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistfilterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListFilterId = \"contactListFilterId_example\";  // string | Contact List Filter ID\n\n            try\n            { \n                // Get Contact list filter\n                ContactListFilter result = apiInstance.GetOutboundContactlistfilter(contactListFilterId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistfilter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistfilters": {
    "operationId": "getoutboundcontactlistfilters",
    "functionName": "GetOutboundContactlistfilters",
    "signature": "GetOutboundContactlistfilters(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder, contactListId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ContactListFilterEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistfiltersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n            var contactListId = \"contactListId_example\";  // string | Contact List ID (optional) \n\n            try\n            { \n                // Query Contact list filters\n                ContactListFilterEntityListing result = apiInstance.GetOutboundContactlistfilters(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder, contactListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistfilters: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlists": {
    "operationId": "getoutboundcontactlists",
    "functionName": "GetOutboundContactlists",
    "signature": "GetOutboundContactlists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, id, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ContactListEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var includeImportStatus = true;  // bool? | Include import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of contact lists.\n                ContactListEntityListing result = apiInstance.GetOutboundContactlists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, id, divisionId, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlists: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistsdivisionview": {
    "operationId": "getoutboundcontactlistsdivisionview",
    "functionName": "GetOutboundContactlistsDivisionview",
    "signature": "GetOutboundContactlistsDivisionview(contactListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ContactListDivisionView",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistsDivisionviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contactlist ID\n            var includeImportStatus = true;  // bool? | Include import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n\n            try\n            { \n                // Get a basic ContactList information object\n                ContactListDivisionView result = apiInstance.GetOutboundContactlistsDivisionview(contactListId, includeImportStatus, includeSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistsDivisionview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundcontactlistsdivisionviews": {
    "operationId": "getoutboundcontactlistsdivisionviews",
    "functionName": "GetOutboundContactlistsDivisionviews",
    "signature": "GetOutboundContactlistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ContactListDivisionViewListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundContactlistsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var includeImportStatus = true;  // bool? | Include import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of simplified contact list objects.\n                ContactListDivisionViewListing result = apiInstance.GetOutboundContactlistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, id, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundContactlistsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddigitalruleset": {
    "operationId": "getoutbounddigitalruleset",
    "functionName": "GetOutboundDigitalruleset",
    "signature": "GetOutboundDigitalruleset(digitalRuleSetId)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDigitalrulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var digitalRuleSetId = \"digitalRuleSetId_example\";  // string | The Digital Rule Set ID\n\n            try\n            { \n                // Get an Outbound Digital Rule Set\n                DigitalRuleSet result = apiInstance.GetOutboundDigitalruleset(digitalRuleSetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDigitalruleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddigitalrulesets": {
    "operationId": "getoutbounddigitalrulesets",
    "functionName": "GetOutboundDigitalrulesets",
    "signature": "GetOutboundDigitalrulesets(pageSize, pageNumber, sortBy, sortOrder, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DigitalRuleSetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDigitalrulesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | The field to sort by (optional)  (default to name)\n            var sortOrder = \"sortOrder_example\";  // string | The direction to sort (optional)  (default to ascending)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | A list of digital rule set ids to bulk fetch (optional) \n\n            try\n            { \n                // Query a list of Outbound Digital Rule Sets\n                DigitalRuleSetEntityListing result = apiInstance.GetOutboundDigitalrulesets(pageSize, pageNumber, sortBy, sortOrder, name, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDigitalrulesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclist": {
    "operationId": "getoutbounddnclist",
    "functionName": "GetOutboundDnclist",
    "signature": "GetOutboundDnclist(dncListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "DncList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n            var includeImportStatus = true;  // bool? | Import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n\n            try\n            { \n                // Get dialer DNC list\n                DncList result = apiInstance.GetOutboundDnclist(dncListId, includeImportStatus, includeSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclistexport": {
    "operationId": "getoutbounddnclistexport",
    "functionName": "GetOutboundDnclistExport",
    "signature": "GetOutboundDnclistExport(dncListId, download)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "download",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ExportUri",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistExportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n            var download = \"download_example\";  // string | Redirect to download uri (optional)  (default to \"false\")\n\n            try\n            { \n                // Get the URI of a DNC list export.\n                ExportUri result = apiInstance.GetOutboundDnclistExport(dncListId, download);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclistExport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclistimportstatus": {
    "operationId": "getoutbounddnclistimportstatus",
    "functionName": "GetOutboundDnclistImportstatus",
    "signature": "GetOutboundDnclistImportstatus(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ImportStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistImportstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n\n            try\n            { \n                // Get dialer dncList import status.\n                ImportStatus result = apiInstance.GetOutboundDnclistImportstatus(dncListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclistImportstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclists": {
    "operationId": "getoutbounddnclists",
    "functionName": "GetOutboundDnclists",
    "signature": "GetOutboundDnclists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, dncSourceType, divisionId, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncSourceType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DncListEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var includeImportStatus = true;  // bool? | Import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var dncSourceType = \"dncSourceType_example\";  // string | DncSourceType (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n\n            try\n            { \n                // Query dialer DNC lists\n                DncListEntityListing result = apiInstance.GetOutboundDnclists(includeImportStatus, includeSize, pageSize, pageNumber, allowEmptyResult, filterType, name, dncSourceType, divisionId, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclists: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclistsdivisionview": {
    "operationId": "getoutbounddnclistsdivisionview",
    "functionName": "GetOutboundDnclistsDivisionview",
    "signature": "GetOutboundDnclistsDivisionview(dncListId, includeImportStatus, includeSize)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "DncListDivisionView",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistsDivisionviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | Dnclist ID\n            var includeImportStatus = true;  // bool? | Include import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n\n            try\n            { \n                // Get a basic DncList information object\n                DncListDivisionView result = apiInstance.GetOutboundDnclistsDivisionview(dncListId, includeImportStatus, includeSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclistsDivisionview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutbounddnclistsdivisionviews": {
    "operationId": "getoutbounddnclistsdivisionviews",
    "functionName": "GetOutboundDnclistsDivisionviews",
    "signature": "GetOutboundDnclistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, dncSourceType, id, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "includeImportStatus",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "includeSize",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "dncSourceType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DncListDivisionViewListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundDnclistsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var includeImportStatus = true;  // bool? | Include import status (optional)  (default to false)\n            var includeSize = true;  // bool? | Include size (optional)  (default to false)\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var dncSourceType = \"dncSourceType_example\";  // string | DncSourceType (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of simplified dnc list objects.\n                DncListDivisionViewListing result = apiInstance.GetOutboundDnclistsDivisionviews(includeImportStatus, includeSize, pageSize, pageNumber, filterType, name, dncSourceType, id, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundDnclistsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundevent": {
    "operationId": "getoutboundevent",
    "functionName": "GetOutboundEvent",
    "signature": "GetOutboundEvent(eventId)",
    "parameters": [
      {
        "name": "eventId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EventLog",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundEventExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var eventId = \"eventId_example\";  // string | Event Log ID\n\n            try\n            { \n                // Get Dialer Event\n                EventLog result = apiInstance.GetOutboundEvent(eventId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundEvent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundevents": {
    "operationId": "getoutboundevents",
    "functionName": "GetOutboundEvents",
    "signature": "GetOutboundEvents(pageSize, pageNumber, filterType, category, level, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "category",
        "type": "string",
        "required": "false"
      },
      {
        "name": "level",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DialerEventEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundEventsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var category = \"category_example\";  // string | Category (optional) \n            var level = \"level_example\";  // string | Level (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query Event Logs\n                DialerEventEntityListing result = apiInstance.GetOutboundEvents(pageSize, pageNumber, filterType, category, level, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundEvents: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundmessagingcampaign": {
    "operationId": "getoutboundmessagingcampaign",
    "functionName": "GetOutboundMessagingcampaign",
    "signature": "GetOutboundMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n\n            try\n            { \n                // Get an Outbound Messaging Campaign\n                MessagingCampaign result = apiInstance.GetOutboundMessagingcampaign(messagingCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundmessagingcampaignprogress": {
    "operationId": "getoutboundmessagingcampaignprogress",
    "functionName": "GetOutboundMessagingcampaignProgress",
    "signature": "GetOutboundMessagingcampaignProgress(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignProgress",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundMessagingcampaignProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n\n            try\n            { \n                // Get messaging campaign's progress\n                CampaignProgress result = apiInstance.GetOutboundMessagingcampaignProgress(messagingCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundMessagingcampaignProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundmessagingcampaigns": {
    "operationId": "getoutboundmessagingcampaigns",
    "functionName": "GetOutboundMessagingcampaigns",
    "signature": "GetOutboundMessagingcampaigns(pageSize, pageNumber, sortBy, sortOrder, name, contactListId, divisionId, type, senderSmsPhoneNumber, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "contactListId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "type",
        "type": "string",
        "required": "false"
      },
      {
        "name": "senderSmsPhoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "MessagingCampaignEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundMessagingcampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | The field to sort by (optional)  (default to name)\n            var sortOrder = \"sortOrder_example\";  // string | The direction to sort (optional)  (default to ascending)\n            var name = \"name_example\";  // string | Name (optional) \n            var contactListId = \"contactListId_example\";  // string | Contact List ID (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n            var type = \"type_example\";  // string | Campaign Type (optional) \n            var senderSmsPhoneNumber = \"senderSmsPhoneNumber_example\";  // string | Sender SMS Phone Number (optional) \n            var id = new List<string>(); // List<string> | A list of messaging campaign ids to bulk fetch (optional) \n\n            try\n            { \n                // Query a list of Messaging Campaigns\n                MessagingCampaignEntityListing result = apiInstance.GetOutboundMessagingcampaigns(pageSize, pageNumber, sortBy, sortOrder, name, contactListId, divisionId, type, senderSmsPhoneNumber, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundMessagingcampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundmessagingcampaignsdivisionview": {
    "operationId": "getoutboundmessagingcampaignsdivisionview",
    "functionName": "GetOutboundMessagingcampaignsDivisionview",
    "signature": "GetOutboundMessagingcampaignsDivisionview(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignDivisionView",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundMessagingcampaignsDivisionviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n\n            try\n            { \n                // Get a basic Messaging Campaign information object\n                MessagingCampaignDivisionView result = apiInstance.GetOutboundMessagingcampaignsDivisionview(messagingCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundMessagingcampaignsDivisionview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundmessagingcampaignsdivisionviews": {
    "operationId": "getoutboundmessagingcampaignsdivisionviews",
    "functionName": "GetOutboundMessagingcampaignsDivisionviews",
    "signature": "GetOutboundMessagingcampaignsDivisionviews(pageSize, pageNumber, sortOrder, name, type, id, senderSmsPhoneNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "type",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "senderSmsPhoneNumber",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "MessagingCampaignDivisionViewEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundMessagingcampaignsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | The direction to sort (optional)  (default to a)\n            var name = \"name_example\";  // string | Name (optional) \n            var type = \"type_example\";  // string | Campaign Type (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n            var senderSmsPhoneNumber = \"senderSmsPhoneNumber_example\";  // string | Sender SMS Phone Number (optional) \n\n            try\n            { \n                // Query a list of basic Messaging Campaign information objects\n                MessagingCampaignDivisionViewEntityListing result = apiInstance.GetOutboundMessagingcampaignsDivisionviews(pageSize, pageNumber, sortOrder, name, type, id, senderSmsPhoneNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundMessagingcampaignsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundruleset": {
    "operationId": "getoutboundruleset",
    "functionName": "GetOutboundRuleset",
    "signature": "GetOutboundRuleset(ruleSetId)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundRulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var ruleSetId = \"ruleSetId_example\";  // string | Rule Set ID\n\n            try\n            { \n                // Get a Rule Set by ID.\n                RuleSet result = apiInstance.GetOutboundRuleset(ruleSetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundRuleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundrulesets": {
    "operationId": "getoutboundrulesets",
    "functionName": "GetOutboundRulesets",
    "signature": "GetOutboundRulesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "RuleSetEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundRulesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of Rule Sets.\n                RuleSetEntityListing result = apiInstance.GetOutboundRulesets(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundRulesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulescampaign": {
    "operationId": "getoutboundschedulescampaign",
    "functionName": "GetOutboundSchedulesCampaign",
    "signature": "GetOutboundSchedulesCampaign(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Get a dialer campaign schedule.\n                CampaignSchedule result = apiInstance.GetOutboundSchedulesCampaign(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulescampaigns": {
    "operationId": "getoutboundschedulescampaigns",
    "functionName": "GetOutboundSchedulesCampaigns",
    "signature": "GetOutboundSchedulesCampaigns()",
    "return": "List<CampaignSchedule>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesCampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Query for a list of dialer campaign schedules.\n                List<CampaignSchedule> result = apiInstance.GetOutboundSchedulesCampaigns();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesCampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulesemailcampaign": {
    "operationId": "getoutboundschedulesemailcampaign",
    "functionName": "GetOutboundSchedulesEmailcampaign",
    "signature": "GetOutboundSchedulesEmailcampaign(emailCampaignId)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailCampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesEmailcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var emailCampaignId = \"emailCampaignId_example\";  // string | Email Campaign ID\n\n            try\n            { \n                // Get an email campaign schedule.\n                EmailCampaignSchedule result = apiInstance.GetOutboundSchedulesEmailcampaign(emailCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesEmailcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulesemailcampaigns": {
    "operationId": "getoutboundschedulesemailcampaigns",
    "functionName": "GetOutboundSchedulesEmailcampaigns",
    "signature": "GetOutboundSchedulesEmailcampaigns()",
    "return": "MessagingCampaignScheduleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesEmailcampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Query for a list of email campaign schedules.\n                MessagingCampaignScheduleEntityListing result = apiInstance.GetOutboundSchedulesEmailcampaigns();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesEmailcampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulesmessagingcampaign": {
    "operationId": "getoutboundschedulesmessagingcampaign",
    "functionName": "GetOutboundSchedulesMessagingcampaign",
    "signature": "GetOutboundSchedulesMessagingcampaign(messagingCampaignId)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | Messaging Campaign ID\n\n            try\n            { \n                // Get a messaging campaign schedule.\n                MessagingCampaignSchedule result = apiInstance.GetOutboundSchedulesMessagingcampaign(messagingCampaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulesmessagingcampaigns": {
    "operationId": "getoutboundschedulesmessagingcampaigns",
    "functionName": "GetOutboundSchedulesMessagingcampaigns",
    "signature": "GetOutboundSchedulesMessagingcampaigns()",
    "return": "MessagingCampaignScheduleEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesMessagingcampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Query for a list of messaging campaign schedules.\n                MessagingCampaignScheduleEntityListing result = apiInstance.GetOutboundSchedulesMessagingcampaigns();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesMessagingcampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulessequence": {
    "operationId": "getoutboundschedulessequence",
    "functionName": "GetOutboundSchedulesSequence",
    "signature": "GetOutboundSchedulesSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SequenceSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Sequence ID\n\n            try\n            { \n                // Get a dialer sequence schedule.\n                SequenceSchedule result = apiInstance.GetOutboundSchedulesSequence(sequenceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundschedulessequences": {
    "operationId": "getoutboundschedulessequences",
    "functionName": "GetOutboundSchedulesSequences",
    "signature": "GetOutboundSchedulesSequences()",
    "return": "List<SequenceSchedule>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSchedulesSequencesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Query for a list of dialer sequence schedules.\n                List<SequenceSchedule> result = apiInstance.GetOutboundSchedulesSequences();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSchedulesSequences: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundsequence": {
    "operationId": "getoutboundsequence",
    "functionName": "GetOutboundSequence",
    "signature": "GetOutboundSequence(sequenceId)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Campaign Sequence ID\n\n            try\n            { \n                // Get a dialer campaign sequence.\n                CampaignSequence result = apiInstance.GetOutboundSequence(sequenceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundsequences": {
    "operationId": "getoutboundsequences",
    "functionName": "GetOutboundSequences",
    "signature": "GetOutboundSequences(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "allowEmptyResult",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "filterType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CampaignSequenceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSequencesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var pageSize = 56;  // int? | Page size. The max that will be returned is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var allowEmptyResult = true;  // bool? | Whether to return an empty page when there are no results for that page (optional)  (default to false)\n            var filterType = \"filterType_example\";  // string | Filter type (optional)  (default to Prefix)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to a)\n\n            try\n            { \n                // Query a list of dialer campaign sequences.\n                CampaignSequenceEntityListing result = apiInstance.GetOutboundSequences(pageSize, pageNumber, allowEmptyResult, filterType, name, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSequences: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundsettings": {
    "operationId": "getoutboundsettings",
    "functionName": "GetOutboundSettings",
    "signature": "GetOutboundSettings()",
    "return": "OutboundSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Get the outbound settings for this organization\n                OutboundSettings result = apiInstance.GetOutboundSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getoutboundwrapupcodemappings": {
    "operationId": "getoutboundwrapupcodemappings",
    "functionName": "GetOutboundWrapupcodemappings",
    "signature": "GetOutboundWrapupcodemappings()",
    "return": "WrapUpCodeMapping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOutboundWrapupcodemappingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n\n            try\n            { \n                // Get the Dialer wrap up code mapping.\n                WrapUpCodeMapping result = apiInstance.GetOutboundWrapupcodemappings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.GetOutboundWrapupcodemappings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchoutboundsettings": {
    "operationId": "patchoutboundsettings",
    "functionName": "PatchOutboundSettings",
    "signature": "PatchOutboundSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundSettings",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchOutboundSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new OutboundSettings(); // OutboundSettings | outboundSettings\n\n            try\n            { \n                // Update the outbound settings for this organization\n                apiInstance.PatchOutboundSettings(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PatchOutboundSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundattemptlimits": {
    "operationId": "postoutboundattemptlimits",
    "functionName": "PostOutboundAttemptlimits",
    "signature": "PostOutboundAttemptlimits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AttemptLimits",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundAttemptlimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new AttemptLimits(); // AttemptLimits | AttemptLimits\n\n            try\n            { \n                // Create attempt limits\n                AttemptLimits result = apiInstance.PostOutboundAttemptlimits(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundAttemptlimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundaudits": {
    "operationId": "postoutboundaudits",
    "functionName": "PostOutboundAudits",
    "signature": "PostOutboundAudits(body, pageSize, pageNumber, sortBy, sortOrder, facetsOnly)",
    "parameters": [
      {
        "name": "body",
        "type": "DialerAuditRequest",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "facetsOnly",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AuditSearchResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundAuditsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new DialerAuditRequest(); // DialerAuditRequest | AuditSearch\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"entity.name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ascending\")\n            var facetsOnly = true;  // bool? | Facets only (optional)  (default to false)\n\n            try\n            { \n                // Retrieves audits for dialer.\n                AuditSearchResult result = apiInstance.PostOutboundAudits(body, pageSize, pageNumber, sortBy, sortOrder, facetsOnly);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundAudits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcallabletimesets": {
    "operationId": "postoutboundcallabletimesets",
    "functionName": "PostOutboundCallabletimesets",
    "signature": "PostOutboundCallabletimesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CallableTimeSet",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCallabletimesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new CallableTimeSet(); // CallableTimeSet | DialerCallableTimeSet\n\n            try\n            { \n                // Create callable time set\n                CallableTimeSet result = apiInstance.PostOutboundCallabletimesets(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCallabletimesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcallanalysisresponsesets": {
    "operationId": "postoutboundcallanalysisresponsesets",
    "functionName": "PostOutboundCallanalysisresponsesets",
    "signature": "PostOutboundCallanalysisresponsesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseSet",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCallanalysisresponsesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new ResponseSet(); // ResponseSet | ResponseSet\n\n            try\n            { \n                // Create a dialer call analysis response set.\n                ResponseSet result = apiInstance.PostOutboundCallanalysisresponsesets(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCallanalysisresponsesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcampaignagentownedmappingpreview": {
    "operationId": "postoutboundcampaignagentownedmappingpreview",
    "functionName": "PostOutboundCampaignAgentownedmappingpreview",
    "signature": "PostOutboundCampaignAgentownedmappingpreview(campaignId)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCampaignAgentownedmappingpreviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n\n            try\n            { \n                // Initiate request for a preview of how agents will be mapped to this campaign's contact list.\n                Object result = apiInstance.PostOutboundCampaignAgentownedmappingpreview(campaignId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCampaignAgentownedmappingpreview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcampaigncallbackschedule": {
    "operationId": "postoutboundcampaigncallbackschedule",
    "functionName": "PostOutboundCampaignCallbackSchedule",
    "signature": "PostOutboundCampaignCallbackSchedule(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactCallbackRequest",
        "required": "true"
      }
    ],
    "return": "ContactCallbackRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCampaignCallbackScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n            var body = new ContactCallbackRequest(); // ContactCallbackRequest | ContactCallbackRequest\n\n            try\n            { \n                // Schedule a Callback for a Dialer Campaign (Deprecated)\n                ContactCallbackRequest result = apiInstance.PostOutboundCampaignCallbackSchedule(campaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCampaignCallbackSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcampaignrules": {
    "operationId": "postoutboundcampaignrules",
    "functionName": "PostOutboundCampaignrules",
    "signature": "PostOutboundCampaignrules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CampaignRule",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCampaignrulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new CampaignRule(); // CampaignRule | CampaignRule\n\n            try\n            { \n                // Create Campaign Rule\n                CampaignRule result = apiInstance.PostOutboundCampaignrules(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCampaignrules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcampaigns": {
    "operationId": "postoutboundcampaigns",
    "functionName": "PostOutboundCampaigns",
    "signature": "PostOutboundCampaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new Campaign(); // Campaign | Campaign\n\n            try\n            { \n                // Create a campaign.\n                Campaign result = apiInstance.PostOutboundCampaigns(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcampaignsprogress": {
    "operationId": "postoutboundcampaignsprogress",
    "functionName": "PostOutboundCampaignsProgress",
    "signature": "PostOutboundCampaignsProgress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<CampaignProgress>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundCampaignsProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new List<string>(); // List<string> | Campaign IDs\n\n            try\n            { \n                // Get progress for a list of campaigns\n                List<CampaignProgress> result = apiInstance.PostOutboundCampaignsProgress(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundCampaignsProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistclear": {
    "operationId": "postoutboundcontactlistclear",
    "functionName": "PostOutboundContactlistClear",
    "signature": "PostOutboundContactlistClear(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistClearExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n\n            try\n            { \n                // Deletes all contacts out of a list. All outstanding recalls or rule-scheduled callbacks for non-preview campaigns configured with the contactlist will be cancelled.\n                apiInstance.PostOutboundContactlistClear(contactListId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistClear: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistcontacts": {
    "operationId": "postoutboundcontactlistcontacts",
    "functionName": "PostOutboundContactlistContacts",
    "signature": "PostOutboundContactlistContacts(contactListId, body, priority, clearSystemData, doNotQueue)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<WritableDialerContact>",
        "required": "true"
      },
      {
        "name": "priority",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "clearSystemData",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "doNotQueue",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "List<DialerContact>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistContactsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var body = new List<WritableDialerContact>(); // List<WritableDialerContact> | Contact\n            var priority = true;  // bool? | Contact priority. True means the contact(s) will be dialed next; false means the contact will go to the end of the contact queue. (optional) \n            var clearSystemData = true;  // bool? | Clear system data. True means the system columns (attempts, callable status, etc) stored on the contact will be cleared if the contact already exists; false means they won't. (optional) \n            var doNotQueue = true;  // bool? | Do not queue. True means that updated contacts will not have their positions in the queue altered, so contacts that have already been dialed will not be redialed. For new contacts, this parameter has no effect; False means that updated contacts will be re-queued, according to the 'priority' parameter. (optional) \n\n            try\n            { \n                // Add contacts to a contact list.\n                List<DialerContact> result = apiInstance.PostOutboundContactlistContacts(contactListId, body, priority, clearSystemData, doNotQueue);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistContacts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistcontactsbulk": {
    "operationId": "postoutboundcontactlistcontactsbulk",
    "functionName": "PostOutboundContactlistContactsBulk",
    "signature": "PostOutboundContactlistContactsBulk(contactListId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<DialerContact>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistContactsBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var body = new List<string>(); // List<string> | ContactIds to get.\n\n            try\n            { \n                // Get contacts from a contact list.\n                List<DialerContact> result = apiInstance.PostOutboundContactlistContactsBulk(contactListId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistContactsBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistexport": {
    "operationId": "postoutboundcontactlistexport",
    "functionName": "PostOutboundContactlistExport",
    "signature": "PostOutboundContactlistExport(contactListId)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainEntityRef",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistExportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n\n            try\n            { \n                // Initiate the export of a contact list.\n                DomainEntityRef result = apiInstance.PostOutboundContactlistExport(contactListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistExport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistfilters": {
    "operationId": "postoutboundcontactlistfilters",
    "functionName": "PostOutboundContactlistfilters",
    "signature": "PostOutboundContactlistfilters(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistfiltersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new ContactListFilter(); // ContactListFilter | ContactListFilter\n\n            try\n            { \n                // Create Contact List Filter\n                ContactListFilter result = apiInstance.PostOutboundContactlistfilters(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistfilters: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlistfilterspreview": {
    "operationId": "postoutboundcontactlistfilterspreview",
    "functionName": "PostOutboundContactlistfiltersPreview",
    "signature": "PostOutboundContactlistfiltersPreview(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "FilterPreviewResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistfiltersPreviewExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new ContactListFilter(); // ContactListFilter | ContactListFilter\n\n            try\n            { \n                // Get a preview of the output of a contact list filter\n                FilterPreviewResponse result = apiInstance.PostOutboundContactlistfiltersPreview(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlistfiltersPreview: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundcontactlists": {
    "operationId": "postoutboundcontactlists",
    "functionName": "PostOutboundContactlists",
    "signature": "PostOutboundContactlists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactList",
        "required": "true"
      }
    ],
    "return": "ContactList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundContactlistsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new ContactList(); // ContactList | ContactList\n\n            try\n            { \n                // Create a contact List.\n                ContactList result = apiInstance.PostOutboundContactlists(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundContactlists: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundconversationdnc": {
    "operationId": "postoutboundconversationdnc",
    "functionName": "PostOutboundConversationDnc",
    "signature": "PostOutboundConversationDnc(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundConversationDncExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n\n            try\n            { \n                // Add phone numbers to a Dialer DNC list.\n                apiInstance.PostOutboundConversationDnc(conversationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundConversationDnc: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutbounddigitalrulesets": {
    "operationId": "postoutbounddigitalrulesets",
    "functionName": "PostOutboundDigitalrulesets",
    "signature": "PostOutboundDigitalrulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DigitalRuleSet",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundDigitalrulesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new DigitalRuleSet(); // DigitalRuleSet | Digital Rule Set\n\n            try\n            { \n                // Create an Outbound Digital Rule Set\n                DigitalRuleSet result = apiInstance.PostOutboundDigitalrulesets(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundDigitalrulesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutbounddnclistexport": {
    "operationId": "postoutbounddnclistexport",
    "functionName": "PostOutboundDnclistExport",
    "signature": "PostOutboundDnclistExport(dncListId)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainEntityRef",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundDnclistExportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n\n            try\n            { \n                // Initiate the export of a dnc list.\n                DomainEntityRef result = apiInstance.PostOutboundDnclistExport(dncListId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundDnclistExport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutbounddnclistphonenumbers": {
    "operationId": "postoutbounddnclistphonenumbers",
    "functionName": "PostOutboundDnclistPhonenumbers",
    "signature": "PostOutboundDnclistPhonenumbers(dncListId, body, expirationDateTime)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      },
      {
        "name": "expirationDateTime",
        "type": "string",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundDnclistPhonenumbersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n            var body = new List<string>(); // List<string> | DNC Phone Numbers\n            var expirationDateTime = \"expirationDateTime_example\";  // string | Expiration date for DNC phone numbers in yyyy-MM-ddTHH:mmZ format (optional) \n\n            try\n            { \n                // Add phone numbers to a DNC list.\n                apiInstance.PostOutboundDnclistPhonenumbers(dncListId, body, expirationDateTime);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundDnclistPhonenumbers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutbounddnclists": {
    "operationId": "postoutbounddnclists",
    "functionName": "PostOutboundDnclists",
    "signature": "PostOutboundDnclists(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DncListCreate",
        "required": "true"
      }
    ],
    "return": "DncList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundDnclistsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new DncListCreate(); // DncListCreate | DncList\n\n            try\n            { \n                // Create dialer DNC list\n                DncList result = apiInstance.PostOutboundDnclists(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundDnclists: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundmessagingcampaigns": {
    "operationId": "postoutboundmessagingcampaigns",
    "functionName": "PostOutboundMessagingcampaigns",
    "signature": "PostOutboundMessagingcampaigns(body)",
    "parameters": [
      {
        "name": "body",
        "type": "MessagingCampaign",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundMessagingcampaignsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new MessagingCampaign(); // MessagingCampaign | Messaging Campaign\n\n            try\n            { \n                // Create a Messaging Campaign\n                MessagingCampaign result = apiInstance.PostOutboundMessagingcampaigns(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundMessagingcampaigns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundmessagingcampaignsprogress": {
    "operationId": "postoutboundmessagingcampaignsprogress",
    "functionName": "PostOutboundMessagingcampaignsProgress",
    "signature": "PostOutboundMessagingcampaignsProgress(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<CampaignProgress>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundMessagingcampaignsProgressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new List<string>(); // List<string> | Messaging Campaign IDs\n\n            try\n            { \n                // Get progress for a list of messaging campaigns\n                List<CampaignProgress> result = apiInstance.PostOutboundMessagingcampaignsProgress(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundMessagingcampaignsProgress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundrulesets": {
    "operationId": "postoutboundrulesets",
    "functionName": "PostOutboundRulesets",
    "signature": "PostOutboundRulesets(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RuleSet",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundRulesetsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new RuleSet(); // RuleSet | RuleSet\n\n            try\n            { \n                // Create a Rule Set.\n                RuleSet result = apiInstance.PostOutboundRulesets(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundRulesets: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postoutboundsequences": {
    "operationId": "postoutboundsequences",
    "functionName": "PostOutboundSequences",
    "signature": "PostOutboundSequences(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CampaignSequence",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostOutboundSequencesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new CampaignSequence(); // CampaignSequence | Organization\n\n            try\n            { \n                // Create a new campaign sequence.\n                CampaignSequence result = apiInstance.PostOutboundSequences(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PostOutboundSequences: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundattemptlimit": {
    "operationId": "putoutboundattemptlimit",
    "functionName": "PutOutboundAttemptlimit",
    "signature": "PutOutboundAttemptlimit(attemptLimitsId, body)",
    "parameters": [
      {
        "name": "attemptLimitsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AttemptLimits",
        "required": "true"
      }
    ],
    "return": "AttemptLimits",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundAttemptlimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var attemptLimitsId = \"attemptLimitsId_example\";  // string | Attempt limits ID\n            var body = new AttemptLimits(); // AttemptLimits | AttemptLimits\n\n            try\n            { \n                // Update attempt limits\n                AttemptLimits result = apiInstance.PutOutboundAttemptlimit(attemptLimitsId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundAttemptlimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcallabletimeset": {
    "operationId": "putoutboundcallabletimeset",
    "functionName": "PutOutboundCallabletimeset",
    "signature": "PutOutboundCallabletimeset(callableTimeSetId, body)",
    "parameters": [
      {
        "name": "callableTimeSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallableTimeSet",
        "required": "true"
      }
    ],
    "return": "CallableTimeSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundCallabletimesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callableTimeSetId = \"callableTimeSetId_example\";  // string | Callable Time Set ID\n            var body = new CallableTimeSet(); // CallableTimeSet | DialerCallableTimeSet\n\n            try\n            { \n                // Update callable time set\n                CallableTimeSet result = apiInstance.PutOutboundCallabletimeset(callableTimeSetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundCallabletimeset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcallanalysisresponseset": {
    "operationId": "putoutboundcallanalysisresponseset",
    "functionName": "PutOutboundCallanalysisresponseset",
    "signature": "PutOutboundCallanalysisresponseset(callAnalysisSetId, body)",
    "parameters": [
      {
        "name": "callAnalysisSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ResponseSet",
        "required": "true"
      }
    ],
    "return": "ResponseSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundCallanalysisresponsesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var callAnalysisSetId = \"callAnalysisSetId_example\";  // string | Call Analysis Response Set ID\n            var body = new ResponseSet(); // ResponseSet | ResponseSet\n\n            try\n            { \n                // Update a dialer call analysis response set.\n                ResponseSet result = apiInstance.PutOutboundCallanalysisresponseset(callAnalysisSetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundCallanalysisresponseset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcampaign": {
    "operationId": "putoutboundcampaign",
    "functionName": "PutOutboundCampaign",
    "signature": "PutOutboundCampaign(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Campaign",
        "required": "true"
      }
    ],
    "return": "Campaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n            var body = new Campaign(); // Campaign | Campaign\n\n            try\n            { \n                // Update a campaign.\n                Campaign result = apiInstance.PutOutboundCampaign(campaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcampaignagent": {
    "operationId": "putoutboundcampaignagent",
    "functionName": "PutOutboundCampaignAgent",
    "signature": "PutOutboundCampaignAgent(campaignId, userId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Agent",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundCampaignAgentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n            var userId = \"userId_example\";  // string | Agent's user ID\n            var body = new Agent(); // Agent | agent\n\n            try\n            { \n                // Send notification that an agent's state changed \n                string result = apiInstance.PutOutboundCampaignAgent(campaignId, userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundCampaignAgent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcampaignrule": {
    "operationId": "putoutboundcampaignrule",
    "functionName": "PutOutboundCampaignrule",
    "signature": "PutOutboundCampaignrule(campaignRuleId, body)",
    "parameters": [
      {
        "name": "campaignRuleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignRule",
        "required": "true"
      }
    ],
    "return": "CampaignRule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundCampaignruleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignRuleId = \"campaignRuleId_example\";  // string | Campaign Rule ID\n            var body = new CampaignRule(); // CampaignRule | CampaignRule\n\n            try\n            { \n                // Update Campaign Rule\n                CampaignRule result = apiInstance.PutOutboundCampaignrule(campaignRuleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundCampaignrule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcontactlist": {
    "operationId": "putoutboundcontactlist",
    "functionName": "PutOutboundContactlist",
    "signature": "PutOutboundContactlist(contactListId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactList",
        "required": "true"
      }
    ],
    "return": "ContactList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundContactlistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | ContactList ID\n            var body = new ContactList(); // ContactList | ContactList\n\n            try\n            { \n                // Update a contact list.\n                ContactList result = apiInstance.PutOutboundContactlist(contactListId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundContactlist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcontactlistcontact": {
    "operationId": "putoutboundcontactlistcontact",
    "functionName": "PutOutboundContactlistContact",
    "signature": "PutOutboundContactlistContact(contactListId, contactId, body)",
    "parameters": [
      {
        "name": "contactListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "contactId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DialerContact",
        "required": "true"
      }
    ],
    "return": "DialerContact",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundContactlistContactExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListId = \"contactListId_example\";  // string | Contact List ID\n            var contactId = \"contactId_example\";  // string | Contact ID\n            var body = new DialerContact(); // DialerContact | Contact\n\n            try\n            { \n                // Update a contact.\n                DialerContact result = apiInstance.PutOutboundContactlistContact(contactListId, contactId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundContactlistContact: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundcontactlistfilter": {
    "operationId": "putoutboundcontactlistfilter",
    "functionName": "PutOutboundContactlistfilter",
    "signature": "PutOutboundContactlistfilter(contactListFilterId, body)",
    "parameters": [
      {
        "name": "contactListFilterId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ContactListFilter",
        "required": "true"
      }
    ],
    "return": "ContactListFilter",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundContactlistfilterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var contactListFilterId = \"contactListFilterId_example\";  // string | Contact List Filter ID\n            var body = new ContactListFilter(); // ContactListFilter | ContactListFilter\n\n            try\n            { \n                // Update Contact List Filter\n                ContactListFilter result = apiInstance.PutOutboundContactlistfilter(contactListFilterId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundContactlistfilter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutbounddigitalruleset": {
    "operationId": "putoutbounddigitalruleset",
    "functionName": "PutOutboundDigitalruleset",
    "signature": "PutOutboundDigitalruleset(digitalRuleSetId, body)",
    "parameters": [
      {
        "name": "digitalRuleSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DigitalRuleSet",
        "required": "true"
      }
    ],
    "return": "DigitalRuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundDigitalrulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var digitalRuleSetId = \"digitalRuleSetId_example\";  // string | The Digital Rule Set ID\n            var body = new DigitalRuleSet(); // DigitalRuleSet | Digital Rule Set\n\n            try\n            { \n                // Update an Outbound Digital Rule Set\n                DigitalRuleSet result = apiInstance.PutOutboundDigitalruleset(digitalRuleSetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundDigitalruleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutbounddnclist": {
    "operationId": "putoutbounddnclist",
    "functionName": "PutOutboundDnclist",
    "signature": "PutOutboundDnclist(dncListId, body)",
    "parameters": [
      {
        "name": "dncListId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DncList",
        "required": "true"
      }
    ],
    "return": "DncList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundDnclistExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var dncListId = \"dncListId_example\";  // string | DncList ID\n            var body = new DncList(); // DncList | DncList\n\n            try\n            { \n                // Update dialer DNC list\n                DncList result = apiInstance.PutOutboundDnclist(dncListId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundDnclist: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundmessagingcampaign": {
    "operationId": "putoutboundmessagingcampaign",
    "functionName": "PutOutboundMessagingcampaign",
    "signature": "PutOutboundMessagingcampaign(messagingCampaignId, body)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingCampaign",
        "required": "true"
      }
    ],
    "return": "MessagingCampaign",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | The Messaging Campaign ID\n            var body = new MessagingCampaign(); // MessagingCampaign | MessagingCampaign\n\n            try\n            { \n                // Update an Outbound Messaging Campaign\n                MessagingCampaign result = apiInstance.PutOutboundMessagingcampaign(messagingCampaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundruleset": {
    "operationId": "putoutboundruleset",
    "functionName": "PutOutboundRuleset",
    "signature": "PutOutboundRuleset(ruleSetId, body)",
    "parameters": [
      {
        "name": "ruleSetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RuleSet",
        "required": "true"
      }
    ],
    "return": "RuleSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundRulesetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var ruleSetId = \"ruleSetId_example\";  // string | Rule Set ID\n            var body = new RuleSet(); // RuleSet | RuleSet\n\n            try\n            { \n                // Update a Rule Set.\n                RuleSet result = apiInstance.PutOutboundRuleset(ruleSetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundRuleset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundschedulescampaign": {
    "operationId": "putoutboundschedulescampaign",
    "functionName": "PutOutboundSchedulesCampaign",
    "signature": "PutOutboundSchedulesCampaign(campaignId, body)",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignSchedule",
        "required": "true"
      }
    ],
    "return": "CampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundSchedulesCampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var campaignId = \"campaignId_example\";  // string | Campaign ID\n            var body = new CampaignSchedule(); // CampaignSchedule | CampaignSchedule\n\n            try\n            { \n                // Update a new campaign schedule.\n                CampaignSchedule result = apiInstance.PutOutboundSchedulesCampaign(campaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundSchedulesCampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundschedulesemailcampaign": {
    "operationId": "putoutboundschedulesemailcampaign",
    "functionName": "PutOutboundSchedulesEmailcampaign",
    "signature": "PutOutboundSchedulesEmailcampaign(emailCampaignId, body)",
    "parameters": [
      {
        "name": "emailCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EmailCampaignSchedule",
        "required": "true"
      }
    ],
    "return": "EmailCampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundSchedulesEmailcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var emailCampaignId = \"emailCampaignId_example\";  // string | Email Campaign ID\n            var body = new EmailCampaignSchedule(); // EmailCampaignSchedule | EmailCampaignSchedule\n\n            try\n            { \n                // Update an email campaign schedule.\n                EmailCampaignSchedule result = apiInstance.PutOutboundSchedulesEmailcampaign(emailCampaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundSchedulesEmailcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundschedulesmessagingcampaign": {
    "operationId": "putoutboundschedulesmessagingcampaign",
    "functionName": "PutOutboundSchedulesMessagingcampaign",
    "signature": "PutOutboundSchedulesMessagingcampaign(messagingCampaignId, body)",
    "parameters": [
      {
        "name": "messagingCampaignId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MessagingCampaignSchedule",
        "required": "true"
      }
    ],
    "return": "MessagingCampaignSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundSchedulesMessagingcampaignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var messagingCampaignId = \"messagingCampaignId_example\";  // string | Messaging Campaign ID\n            var body = new MessagingCampaignSchedule(); // MessagingCampaignSchedule | MessagingCampaignSchedule\n\n            try\n            { \n                // Update a new messaging campaign schedule.\n                MessagingCampaignSchedule result = apiInstance.PutOutboundSchedulesMessagingcampaign(messagingCampaignId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundSchedulesMessagingcampaign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundschedulessequence": {
    "operationId": "putoutboundschedulessequence",
    "functionName": "PutOutboundSchedulesSequence",
    "signature": "PutOutboundSchedulesSequence(sequenceId, body)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SequenceSchedule",
        "required": "true"
      }
    ],
    "return": "SequenceSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundSchedulesSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Sequence ID\n            var body = new SequenceSchedule(); // SequenceSchedule | SequenceSchedule\n\n            try\n            { \n                // Update a new sequence schedule.\n                SequenceSchedule result = apiInstance.PutOutboundSchedulesSequence(sequenceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundSchedulesSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundsequence": {
    "operationId": "putoutboundsequence",
    "functionName": "PutOutboundSequence",
    "signature": "PutOutboundSequence(sequenceId, body)",
    "parameters": [
      {
        "name": "sequenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CampaignSequence",
        "required": "true"
      }
    ],
    "return": "CampaignSequence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundSequenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var sequenceId = \"sequenceId_example\";  // string | Campaign Sequence ID\n            var body = new CampaignSequence(); // CampaignSequence | Organization\n\n            try\n            { \n                // Update a new campaign sequence.\n                CampaignSequence result = apiInstance.PutOutboundSequence(sequenceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundSequence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putoutboundwrapupcodemappings": {
    "operationId": "putoutboundwrapupcodemappings",
    "functionName": "PutOutboundWrapupcodemappings",
    "signature": "PutOutboundWrapupcodemappings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WrapUpCodeMapping",
        "required": "true"
      }
    ],
    "return": "WrapUpCodeMapping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOutboundWrapupcodemappingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new OutboundApi();\n            var body = new WrapUpCodeMapping(); // WrapUpCodeMapping | wrapUpCodeMapping\n\n            try\n            { \n                // Update the Dialer wrap up code mapping.\n                WrapUpCodeMapping result = apiInstance.PutOutboundWrapupcodemappings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Outbound.PutOutboundWrapupcodemappings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletepresencesource": {
    "operationId": "deletepresencesource",
    "functionName": "DeletePresenceSource",
    "signature": "DeletePresenceSource(sourceId)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeletePresenceSourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var sourceId = \"sourceId_example\";  // string | Presence Source ID\n\n            try\n            { \n                // Delete a Presence Source\n                apiInstance.DeletePresenceSource(sourceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.DeletePresenceSource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletepresencedefinition": {
    "operationId": "deletepresencedefinition",
    "functionName": "DeletePresencedefinition",
    "signature": "DeletePresencedefinition(presenceId)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeletePresencedefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var presenceId = \"presenceId_example\";  // string | Organization Presence ID\n\n            try\n            { \n                // Delete a Presence Definition\n                apiInstance.DeletePresencedefinition(presenceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.DeletePresencedefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getpresencesource": {
    "operationId": "getpresencesource",
    "functionName": "GetPresenceSource",
    "signature": "GetPresenceSource(sourceId)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetPresenceSourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var sourceId = \"sourceId_example\";  // string | Presence Source ID\n\n            try\n            { \n                // Get a Presence Source\n                Source result = apiInstance.GetPresenceSource(sourceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetPresenceSource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getpresencesources": {
    "operationId": "getpresencesources",
    "functionName": "GetPresenceSources",
    "signature": "GetPresenceSources(deactivated)",
    "parameters": [
      {
        "name": "deactivated",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SourceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetPresenceSourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var deactivated = \"deactivated_example\";  // string | Deactivated query can be TRUE or FALSE (optional)  (default to \"false\")\n\n            try\n            { \n                // Get a list of Presence Sources\n                SourceEntityListing result = apiInstance.GetPresenceSources(deactivated);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetPresenceSources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getpresenceuserprimarysource": {
    "operationId": "getpresenceuserprimarysource",
    "functionName": "GetPresenceUserPrimarysource",
    "signature": "GetPresenceUserPrimarysource(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserPrimarySource",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetPresenceUserPrimarysourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user ID\n\n            try\n            { \n                // Get a user's Primary Presence Source\n                UserPrimarySource result = apiInstance.GetPresenceUserPrimarysource(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetPresenceUserPrimarysource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getpresencedefinition": {
    "operationId": "getpresencedefinition",
    "functionName": "GetPresencedefinition",
    "signature": "GetPresencedefinition(presenceId, localeCode)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OrganizationPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetPresencedefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var presenceId = \"presenceId_example\";  // string | Organization Presence ID\n            var localeCode = \"localeCode_example\";  // string | The locale code to fetch for the presence definition. Use ALL to fetch everything. (optional) \n\n            try\n            { \n                // Get a Presence Definition\n                OrganizationPresence result = apiInstance.GetPresencedefinition(presenceId, localeCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetPresencedefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getpresencedefinitions": {
    "operationId": "getpresencedefinitions",
    "functionName": "GetPresencedefinitions",
    "signature": "GetPresencedefinitions(pageNumber, pageSize, deleted, localeCode)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "deleted",
        "type": "string",
        "required": "false"
      },
      {
        "name": "localeCode",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OrganizationPresenceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetPresencedefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var deleted = \"deleted_example\";  // string | Deleted query can be TRUE, FALSE or ALL (optional)  (default to \"false\")\n            var localeCode = \"localeCode_example\";  // string | The locale code to fetch for each presence definition. Use ALL to fetch everything. (optional) \n\n            try\n            { \n                // Get an Organization's list of Presence Definitions\n                OrganizationPresenceEntityListing result = apiInstance.GetPresencedefinitions(pageNumber, pageSize, deleted, localeCode);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetPresencedefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getsystempresences": {
    "operationId": "getsystempresences",
    "functionName": "GetSystempresences",
    "signature": "GetSystempresences()",
    "return": "List<SystemPresence>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSystempresencesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n\n            try\n            { \n                // Get the list of SystemPresences\n                List<SystemPresence> result = apiInstance.GetSystempresences();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetSystempresences: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserpresence": {
    "operationId": "getuserpresence",
    "functionName": "GetUserPresence",
    "signature": "GetUserPresence(userId, sourceId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserPresenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user Id\n            var sourceId = \"sourceId_example\";  // string | Presence source ID\n\n            try\n            { \n                // Get a user's Presence\n                UserPresence result = apiInstance.GetUserPresence(userId, sourceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetUserPresence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserpresencespurecloud": {
    "operationId": "getuserpresencespurecloud",
    "functionName": "GetUserPresencesPurecloud",
    "signature": "GetUserPresencesPurecloud(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserPresencesPurecloudExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user Id\n\n            try\n            { \n                // Get a user's Genesys Cloud presence.\n                UserPresence result = apiInstance.GetUserPresencesPurecloud(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.GetUserPresencesPurecloud: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserpresence": {
    "operationId": "patchuserpresence",
    "functionName": "PatchUserPresence",
    "signature": "PatchUserPresence(userId, sourceId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPresence",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserPresenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user Id\n            var sourceId = \"sourceId_example\";  // string | Presence source ID\n            var body = new UserPresence(); // UserPresence | User presence\n\n            try\n            { \n                // Patch a user's Presence\n                UserPresence result = apiInstance.PatchUserPresence(userId, sourceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PatchUserPresence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserpresencespurecloud": {
    "operationId": "patchuserpresencespurecloud",
    "functionName": "PatchUserPresencesPurecloud",
    "signature": "PatchUserPresencesPurecloud(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPresence",
        "required": "true"
      }
    ],
    "return": "UserPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserPresencesPurecloudExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user Id\n            var body = new UserPresence(); // UserPresence | User presence\n\n            try\n            { \n                // Patch a Genesys Cloud user's presence\n                UserPresence result = apiInstance.PatchUserPresencesPurecloud(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PatchUserPresencesPurecloud: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postpresencesources": {
    "operationId": "postpresencesources",
    "functionName": "PostPresenceSources",
    "signature": "PostPresenceSources(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostPresenceSourcesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var body = new Source(); // Source | The Presence Source to create\n\n            try\n            { \n                // Create a Presence Source\n                Source result = apiInstance.PostPresenceSources(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PostPresenceSources: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postpresencedefinitions": {
    "operationId": "postpresencedefinitions",
    "functionName": "PostPresencedefinitions",
    "signature": "PostPresencedefinitions(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OrganizationPresence",
        "required": "true"
      }
    ],
    "return": "OrganizationPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostPresencedefinitionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var body = new OrganizationPresence(); // OrganizationPresence | The Presence Definition to create\n\n            try\n            { \n                // Create a Presence Definition\n                OrganizationPresence result = apiInstance.PostPresencedefinitions(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PostPresencedefinitions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putpresencesource": {
    "operationId": "putpresencesource",
    "functionName": "PutPresenceSource",
    "signature": "PutPresenceSource(sourceId, body)",
    "parameters": [
      {
        "name": "sourceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Source",
        "required": "true"
      }
    ],
    "return": "Source",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutPresenceSourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var sourceId = \"sourceId_example\";  // string | Presence Source ID\n            var body = new Source(); // Source | The updated Presence Source\n\n            try\n            { \n                // Update a Presence Source\n                Source result = apiInstance.PutPresenceSource(sourceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PutPresenceSource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putpresenceuserprimarysource": {
    "operationId": "putpresenceuserprimarysource",
    "functionName": "PutPresenceUserPrimarysource",
    "signature": "PutPresenceUserPrimarysource(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserPrimarySource",
        "required": "true"
      }
    ],
    "return": "UserPrimarySource",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutPresenceUserPrimarysourceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var userId = \"userId_example\";  // string | user ID\n            var body = new UserPrimarySource(); // UserPrimarySource | Primary Source\n\n            try\n            { \n                // Update a user's Primary Presence Source\n                UserPrimarySource result = apiInstance.PutPresenceUserPrimarysource(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PutPresenceUserPrimarysource: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putpresencedefinition": {
    "operationId": "putpresencedefinition",
    "functionName": "PutPresencedefinition",
    "signature": "PutPresencedefinition(presenceId, body)",
    "parameters": [
      {
        "name": "presenceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OrganizationPresence",
        "required": "true"
      }
    ],
    "return": "OrganizationPresence",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutPresencedefinitionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var presenceId = \"presenceId_example\";  // string | Organization Presence ID\n            var body = new OrganizationPresence(); // OrganizationPresence | The OrganizationPresence to update\n\n            try\n            { \n                // Update a Presence Definition\n                OrganizationPresence result = apiInstance.PutPresencedefinition(presenceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PutPresencedefinition: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserspresencesbulk": {
    "operationId": "putuserspresencesbulk",
    "functionName": "PutUsersPresencesBulk",
    "signature": "PutUsersPresencesBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<UserPresence>",
        "required": "true"
      }
    ],
    "return": "List<UserPresence>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUsersPresencesBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new PresenceApi();\n            var body = new List<UserPresence>(); // List<UserPresence> | List of User presences\n\n            try\n            { \n                // Update bulk user Presences\n                List<UserPresence> result = apiInstance.PutUsersPresencesBulk(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Presence.PutUsersPresencesBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteprocessautomationtrigger": {
    "operationId": "deleteprocessautomationtrigger",
    "functionName": "DeleteProcessautomationTrigger",
    "signature": "DeleteProcessautomationTrigger(triggerId)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteProcessautomationTriggerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var triggerId = \"triggerId_example\";  // string | triggerId\n\n            try\n            { \n                // Delete a Trigger\n                apiInstance.DeleteProcessautomationTrigger(triggerId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.DeleteProcessautomationTrigger: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getprocessautomationtrigger": {
    "operationId": "getprocessautomationtrigger",
    "functionName": "GetProcessautomationTrigger",
    "signature": "GetProcessautomationTrigger(triggerId)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetProcessautomationTriggerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var triggerId = \"triggerId_example\";  // string | triggerId\n\n            try\n            { \n                // Retrieve a single Trigger matching id\n                Trigger result = apiInstance.GetProcessautomationTrigger(triggerId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.GetProcessautomationTrigger: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getprocessautomationtriggers": {
    "operationId": "getprocessautomationtriggers",
    "functionName": "GetProcessautomationTriggers",
    "signature": "GetProcessautomationTriggers(before, after, pageSize, topicName, enabled)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "topicName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "TriggerEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetProcessautomationTriggersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var topicName = \"topicName_example\";  // string | Topic name(s). Separated by commas (optional) \n            var enabled = true;  // bool? | Boolean indicating desired enabled state of triggers (optional) \n\n            try\n            { \n                // Retrieves all triggers, optionally filtered by query parameters.\n                TriggerEntityListing result = apiInstance.GetProcessautomationTriggers(before, after, pageSize, topicName, enabled);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.GetProcessautomationTriggers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getprocessautomationtriggerstopics": {
    "operationId": "getprocessautomationtriggerstopics",
    "functionName": "GetProcessautomationTriggersTopics",
    "signature": "GetProcessautomationTriggersTopics(before, after, pageSize)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TopicCursorEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetProcessautomationTriggersTopicsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n\n            try\n            { \n                // Get topics available for organization\n                TopicCursorEntityListing result = apiInstance.GetProcessautomationTriggersTopics(before, after, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.GetProcessautomationTriggersTopics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postprocessautomationtriggertest": {
    "operationId": "postprocessautomationtriggertest",
    "functionName": "PostProcessautomationTriggerTest",
    "signature": "PostProcessautomationTriggerTest(triggerId, body)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TestModeResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostProcessautomationTriggerTestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var triggerId = \"triggerId_example\";  // string | triggerId\n            var body = \"body_example\";  // string | eventBody (optional) \n\n            try\n            { \n                // Test the matching of a Trigger based on provided event body\n                TestModeResults result = apiInstance.PostProcessautomationTriggerTest(triggerId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.PostProcessautomationTriggerTest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postprocessautomationtriggers": {
    "operationId": "postprocessautomationtriggers",
    "functionName": "PostProcessautomationTriggers",
    "signature": "PostProcessautomationTriggers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateTriggerRequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostProcessautomationTriggersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var body = new CreateTriggerRequest(); // CreateTriggerRequest | Input used to create a Trigger.\n\n            try\n            { \n                // Create a Trigger\n                Trigger result = apiInstance.PostProcessautomationTriggers(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.PostProcessautomationTriggers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postprocessautomationtriggerstopictest": {
    "operationId": "postprocessautomationtriggerstopictest",
    "functionName": "PostProcessautomationTriggersTopicTest",
    "signature": "PostProcessautomationTriggersTopicTest(topicName, body)",
    "parameters": [
      {
        "name": "topicName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TestModeEventResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostProcessautomationTriggersTopicTestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var topicName = \"topicName_example\";  // string | topicName\n            var body = \"body_example\";  // string | eventBody (optional) \n\n            try\n            { \n                // Test the matching of all organization Triggers on given topic using provided event body\n                TestModeEventResults result = apiInstance.PostProcessautomationTriggersTopicTest(topicName, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.PostProcessautomationTriggersTopicTest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putprocessautomationtrigger": {
    "operationId": "putprocessautomationtrigger",
    "functionName": "PutProcessautomationTrigger",
    "signature": "PutProcessautomationTrigger(triggerId, body)",
    "parameters": [
      {
        "name": "triggerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTriggerRequest",
        "required": "true"
      }
    ],
    "return": "Trigger",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutProcessautomationTriggerExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ProcessAutomationApi();\n            var triggerId = \"triggerId_example\";  // string | triggerId\n            var body = new UpdateTriggerRequest(); // UpdateTriggerRequest | Input to update Trigger. (topicName cannot be updated, a new trigger must be created to use a new topicName)\n\n            try\n            { \n                // Update a Trigger\n                Trigger result = apiInstance.PutProcessautomationTrigger(triggerId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ProcessAutomation.PutProcessautomationTrigger: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletequalitycalibration": {
    "operationId": "deletequalitycalibration",
    "functionName": "DeleteQualityCalibration",
    "signature": "DeleteQualityCalibration(calibrationId, calibratorId)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "calibratorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteQualityCalibrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var calibrationId = \"calibrationId_example\";  // string | Calibration ID\n            var calibratorId = \"calibratorId_example\";  // string | calibratorId\n\n            try\n            { \n                // Delete a calibration by id.\n                Calibration result = apiInstance.DeleteQualityCalibration(calibrationId, calibratorId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.DeleteQualityCalibration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletequalityconversationevaluation": {
    "operationId": "deletequalityconversationevaluation",
    "functionName": "DeleteQualityConversationEvaluation",
    "signature": "DeleteQualityConversationEvaluation(conversationId, evaluationId, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteQualityConversationEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var evaluationId = \"evaluationId_example\";  // string | evaluationId\n            var expand = \"expand_example\";  // string | evaluatorId, evaluationForm (optional) \n\n            try\n            { \n                // Delete an evaluation\n                EvaluationResponse result = apiInstance.DeleteQualityConversationEvaluation(conversationId, evaluationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.DeleteQualityConversationEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletequalityform": {
    "operationId": "deletequalityform",
    "functionName": "DeleteQualityForm",
    "signature": "DeleteQualityForm(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteQualityFormExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Delete an evaluation form.\n                apiInstance.DeleteQualityForm(formId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.DeleteQualityForm: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletequalityformsevaluation": {
    "operationId": "deletequalityformsevaluation",
    "functionName": "DeleteQualityFormsEvaluation",
    "signature": "DeleteQualityFormsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteQualityFormsEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Delete an evaluation form.\n                apiInstance.DeleteQualityFormsEvaluation(formId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.DeleteQualityFormsEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletequalityformssurvey": {
    "operationId": "deletequalityformssurvey",
    "functionName": "DeleteQualityFormsSurvey",
    "signature": "DeleteQualityFormsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteQualityFormsSurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Delete a survey form.\n                apiInstance.DeleteQualityFormsSurvey(formId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.DeleteQualityFormsSurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityagentsactivity": {
    "operationId": "getqualityagentsactivity",
    "functionName": "GetQualityAgentsActivity",
    "signature": "GetQualityAgentsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, agentUserId, evaluatorUserId, name, group)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "DateTime?",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "DateTime?",
        "required": "false"
      },
      {
        "name": "agentUserId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "evaluatorUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "group",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "AgentActivityEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityAgentsActivityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var startTime = new DateTime();  // DateTime? | Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var startTime = 2013-10-20T19:20:30+01:00;  // DateTime? | Start time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n            var endTime = new DateTime();  // DateTime? | End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var endTime = 2013-10-20T19:20:30+01:00;  // DateTime? | End time of agent activity based on assigned date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n            var agentUserId = new List<string>(); // List<string> | user id of agent requested (optional) \n            var evaluatorUserId = \"evaluatorUserId_example\";  // string | user id of the evaluator (optional) \n            var name = \"name_example\";  // string | name (optional) \n            var group = \"group_example\";  // string | group id (optional) \n\n            try\n            { \n                // Gets a list of Agent Activities\n                AgentActivityEntityListing result = apiInstance.GetQualityAgentsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, agentUserId, evaluatorUserId, name, group);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityAgentsActivity: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitycalibration": {
    "operationId": "getqualitycalibration",
    "functionName": "GetQualityCalibration",
    "signature": "GetQualityCalibration(calibrationId, calibratorId, conversationId)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "calibratorId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityCalibrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var calibrationId = \"calibrationId_example\";  // string | Calibration ID\n            var calibratorId = \"calibratorId_example\";  // string | calibratorId (optional) \n            var conversationId = \"conversationId_example\";  // string | conversationId (optional) \n\n            try\n            { \n                // Get a calibration by id.  Requires either calibrator id or conversation id\n                Calibration result = apiInstance.GetQualityCalibration(calibrationId, calibratorId, conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityCalibration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitycalibrations": {
    "operationId": "getqualitycalibrations",
    "functionName": "GetQualityCalibrations",
    "signature": "GetQualityCalibrations(calibratorId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, startTime, endTime)",
    "parameters": [
      {
        "name": "calibratorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "DateTime?",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "DateTime?",
        "required": "false"
      }
    ],
    "return": "CalibrationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityCalibrationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var calibratorId = \"calibratorId_example\";  // string | user id of calibrator\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var conversationId = \"conversationId_example\";  // string | conversation id (optional) \n            var startTime = new DateTime();  // DateTime? | Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var startTime = 2013-10-20T19:20:30+01:00;  // DateTime? | Beginning of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n            var endTime = new DateTime();  // DateTime? | end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var endTime = 2013-10-20T19:20:30+01:00;  // DateTime? | end of the calibration query. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n\n            try\n            { \n                // Get the list of calibrations\n                CalibrationEntityListing result = apiInstance.GetQualityCalibrations(calibratorId, pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, startTime, endTime);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityCalibrations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityconversationevaluation": {
    "operationId": "getqualityconversationevaluation",
    "functionName": "GetQualityConversationEvaluation",
    "signature": "GetQualityConversationEvaluation(conversationId, evaluationId, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityConversationEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var evaluationId = \"evaluationId_example\";  // string | evaluationId\n            var expand = \"expand_example\";  // string | agent, evaluator, evaluationForm (optional) \n\n            try\n            { \n                // Get an evaluation\n                EvaluationResponse result = apiInstance.GetQualityConversationEvaluation(conversationId, evaluationId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityConversationEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityconversationsurveys": {
    "operationId": "getqualityconversationsurveys",
    "functionName": "GetQualityConversationSurveys",
    "signature": "GetQualityConversationSurveys(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<Survey>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityConversationSurveysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get the surveys for a conversation\n                List<Survey> result = apiInstance.GetQualityConversationSurveys(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityConversationSurveys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityconversationsauditsquerytransactionid": {
    "operationId": "getqualityconversationsauditsquerytransactionid",
    "functionName": "GetQualityConversationsAuditsQueryTransactionId",
    "signature": "GetQualityConversationsAuditsQueryTransactionId(transactionId)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "QualityAuditQueryExecutionStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityConversationsAuditsQueryTransactionIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var transactionId = \"transactionId_example\";  // string | Transaction ID\n\n            try\n            { \n                // Get status of audit query execution\n                QualityAuditQueryExecutionStatusResponse result = apiInstance.GetQualityConversationsAuditsQueryTransactionId(transactionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityConversationsAuditsQueryTransactionId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityconversationsauditsquerytransactionidresults": {
    "operationId": "getqualityconversationsauditsquerytransactionidresults",
    "functionName": "GetQualityConversationsAuditsQueryTransactionIdResults",
    "signature": "GetQualityConversationsAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand)",
    "parameters": [
      {
        "name": "transactionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "QualityAuditQueryExecutionResultsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityConversationsAuditsQueryTransactionIdResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var transactionId = \"transactionId_example\";  // string | Transaction ID\n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get results of audit query\n                QualityAuditQueryExecutionResultsResponse result = apiInstance.GetQualityConversationsAuditsQueryTransactionIdResults(transactionId, cursor, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityConversationsAuditsQueryTransactionIdResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityevaluationsquery": {
    "operationId": "getqualityevaluationsquery",
    "functionName": "GetQualityEvaluationsQuery",
    "signature": "GetQualityEvaluationsQuery(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, agentUserId, evaluatorUserId, queueId, startTime, endTime, evaluationState, isReleased, agentHasRead, expandAnswerTotalScores, maximum, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "agentUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "evaluatorUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "string",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "string",
        "required": "false"
      },
      {
        "name": "evaluationState",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "isReleased",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "agentHasRead",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "expandAnswerTotalScores",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "maximum",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityEvaluationsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var conversationId = \"conversationId_example\";  // string | conversationId specified (optional) \n            var agentUserId = \"agentUserId_example\";  // string | user id of the agent (optional) \n            var evaluatorUserId = \"evaluatorUserId_example\";  // string | evaluator user id (optional) \n            var queueId = \"queueId_example\";  // string | queue id (optional) \n            var startTime = \"startTime_example\";  // string | start time of the evaluation query (optional) \n            var endTime = \"endTime_example\";  // string | end time of the evaluation query (optional) \n            var evaluationState = new List<string>(); // List<string> |  (optional) \n            var isReleased = true;  // bool? | the evaluation has been released (optional) \n            var agentHasRead = true;  // bool? | agent has the evaluation (optional) \n            var expandAnswerTotalScores = true;  // bool? | get the total scores for evaluations (optional) \n            var maximum = 56;  // int? | maximum (optional) \n            var sortOrder = \"sortOrder_example\";  // string | sort order options for agentUserId or evaluatorUserId query. Valid options are 'a', 'asc', 'ascending', 'd', 'desc', 'descending' (optional) \n\n            try\n            { \n                // Queries Evaluations and returns a paged list\n                EvaluationEntityListing result = apiInstance.GetQualityEvaluationsQuery(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, conversationId, agentUserId, evaluatorUserId, queueId, startTime, endTime, evaluationState, isReleased, agentHasRead, expandAnswerTotalScores, maximum, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityEvaluationsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityevaluatorsactivity": {
    "operationId": "getqualityevaluatorsactivity",
    "functionName": "GetQualityEvaluatorsActivity",
    "signature": "GetQualityEvaluatorsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, name, permission, group)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "startTime",
        "type": "DateTime?",
        "required": "false"
      },
      {
        "name": "endTime",
        "type": "DateTime?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "permission",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "group",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluatorActivityEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityEvaluatorsActivityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var startTime = new DateTime();  // DateTime? | The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var startTime = 2013-10-20T19:20:30+01:00;  // DateTime? | The start time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n            var endTime = new DateTime();  // DateTime? | The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) var endTime = 2013-10-20T19:20:30+01:00;  // DateTime? | The end time specified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z (optional) \n            var name = \"name_example\";  // string | Evaluator name (optional) \n            var permission = new List<string>(); // List<string> | permission strings (optional) \n            var group = \"group_example\";  // string | group id (optional) \n\n            try\n            { \n                // Get an evaluator activity\n                EvaluatorActivityEntityListing result = apiInstance.GetQualityEvaluatorsActivity(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, startTime, endTime, name, permission, group);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityEvaluatorsActivity: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityform": {
    "operationId": "getqualityform",
    "functionName": "GetQualityForm",
    "signature": "GetQualityForm(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get an evaluation form\n                EvaluationForm result = apiInstance.GetQualityForm(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityForm: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformversions": {
    "operationId": "getqualityformversions",
    "functionName": "GetQualityFormVersions",
    "signature": "GetQualityFormVersions(formId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Gets all the revisions for a specific evaluation.\n                EvaluationFormEntityListing result = apiInstance.GetQualityFormVersions(formId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityforms": {
    "operationId": "getqualityforms",
    "functionName": "GetQualityForms",
    "signature": "GetQualityForms(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var expand = \"expand_example\";  // string | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Order to sort results, either asc or desc (optional) \n\n            try\n            { \n                // Get the list of evaluation forms\n                EvaluationFormEntityListing result = apiInstance.GetQualityForms(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityForms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformsevaluation": {
    "operationId": "getqualityformsevaluation",
    "functionName": "GetQualityFormsEvaluation",
    "signature": "GetQualityFormsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get an evaluation form\n                EvaluationForm result = apiInstance.GetQualityFormsEvaluation(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformsevaluationversions": {
    "operationId": "getqualityformsevaluationversions",
    "functionName": "GetQualityFormsEvaluationVersions",
    "signature": "GetQualityFormsEvaluationVersions(formId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsEvaluationVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"asc\")\n\n            try\n            { \n                // Gets all the revisions for a specific evaluation.\n                EvaluationFormEntityListing result = apiInstance.GetQualityFormsEvaluationVersions(formId, pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsEvaluationVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformsevaluations": {
    "operationId": "getqualityformsevaluations",
    "functionName": "GetQualityFormsEvaluations",
    "signature": "GetQualityFormsEvaluations(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsEvaluationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var expand = \"expand_example\";  // string | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Order to sort results, either asc or desc (optional) \n\n            try\n            { \n                // Get the list of evaluation forms\n                EvaluationFormEntityListing result = apiInstance.GetQualityFormsEvaluations(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsEvaluations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformsevaluationsbulkcontexts": {
    "operationId": "getqualityformsevaluationsbulkcontexts",
    "functionName": "GetQualityFormsEvaluationsBulkContexts",
    "signature": "GetQualityFormsEvaluationsBulkContexts(contextId)",
    "parameters": [
      {
        "name": "contextId",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<EvaluationForm>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsEvaluationsBulkContextsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var contextId = new List<string>(); // List<string> | A comma-delimited list of valid evaluation form context ids\n\n            try\n            { \n                // Retrieve a list of the latest published evaluation form versions by context ids\n                List<EvaluationForm> result = apiInstance.GetQualityFormsEvaluationsBulkContexts(contextId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsEvaluationsBulkContexts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformssurvey": {
    "operationId": "getqualityformssurvey",
    "functionName": "GetQualityFormsSurvey",
    "signature": "GetQualityFormsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsSurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get a survey form\n                SurveyForm result = apiInstance.GetQualityFormsSurvey(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsSurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformssurveyversions": {
    "operationId": "getqualityformssurveyversions",
    "functionName": "GetQualityFormsSurveyVersions",
    "signature": "GetQualityFormsSurveyVersions(formId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsSurveyVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Gets all the revisions for a specific survey.\n                SurveyFormEntityListing result = apiInstance.GetQualityFormsSurveyVersions(formId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsSurveyVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformssurveys": {
    "operationId": "getqualityformssurveys",
    "functionName": "GetQualityFormsSurveys",
    "signature": "GetQualityFormsSurveys(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsSurveysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var expand = \"expand_example\";  // string | If 'expand=publishHistory', then each unpublished evaluation form includes a listing of its published versions (optional) \n            var name = \"name_example\";  // string | Name (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Order to sort results, either asc or desc (optional) \n\n            try\n            { \n                // Get the list of survey forms\n                SurveyFormEntityListing result = apiInstance.GetQualityFormsSurveys(pageSize, pageNumber, sortBy, nextPage, previousPage, expand, name, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsSurveys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformssurveysbulk": {
    "operationId": "getqualityformssurveysbulk",
    "functionName": "GetQualityFormsSurveysBulk",
    "signature": "GetQualityFormsSurveysBulk(id)",
    "parameters": [
      {
        "name": "id",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsSurveysBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var id = new List<string>(); // List<string> | A comma-delimited list of valid survey form ids\n\n            try\n            { \n                // Retrieve a list of survey forms by their ids\n                SurveyFormEntityListing result = apiInstance.GetQualityFormsSurveysBulk(id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsSurveysBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualityformssurveysbulkcontexts": {
    "operationId": "getqualityformssurveysbulkcontexts",
    "functionName": "GetQualityFormsSurveysBulkContexts",
    "signature": "GetQualityFormsSurveysBulkContexts(contextId, published)",
    "parameters": [
      {
        "name": "contextId",
        "type": "List<string>",
        "required": "true"
      },
      {
        "name": "published",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "List<SurveyForm>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityFormsSurveysBulkContextsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var contextId = new List<string>(); // List<string> | A comma-delimited list of valid survey form context ids. The maximum number of ids allowed in this list is 100.\n            var published = true;  // bool? | If true, the latest published version will be included. If false, only the unpublished version will be included. (optional)  (default to true)\n\n            try\n            { \n                // Retrieve a list of the latest form versions by context ids\n                List<SurveyForm> result = apiInstance.GetQualityFormsSurveysBulkContexts(contextId, published);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityFormsSurveysBulkContexts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedform": {
    "operationId": "getqualitypublishedform",
    "functionName": "GetQualityPublishedform",
    "signature": "GetQualityPublishedform(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get the published evaluation forms.\n                EvaluationForm result = apiInstance.GetQualityPublishedform(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedform: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedforms": {
    "operationId": "getqualitypublishedforms",
    "functionName": "GetQualityPublishedforms",
    "signature": "GetQualityPublishedforms(pageSize, pageNumber, name, onlyLatestPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestPerContext",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var onlyLatestPerContext = true;  // bool? | onlyLatestPerContext (optional)  (default to false)\n\n            try\n            { \n                // Get the published evaluation forms.\n                EvaluationFormEntityListing result = apiInstance.GetQualityPublishedforms(pageSize, pageNumber, name, onlyLatestPerContext);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedforms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedformsevaluation": {
    "operationId": "getqualitypublishedformsevaluation",
    "functionName": "GetQualityPublishedformsEvaluation",
    "signature": "GetQualityPublishedformsEvaluation(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformsEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get the most recent published version of an evaluation form.\n                EvaluationForm result = apiInstance.GetQualityPublishedformsEvaluation(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedformsEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedformsevaluations": {
    "operationId": "getqualitypublishedformsevaluations",
    "functionName": "GetQualityPublishedformsEvaluations",
    "signature": "GetQualityPublishedformsEvaluations(pageSize, pageNumber, name, onlyLatestPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestPerContext",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "EvaluationFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformsEvaluationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var onlyLatestPerContext = true;  // bool? | onlyLatestPerContext (optional)  (default to false)\n\n            try\n            { \n                // Get the published evaluation forms.\n                EvaluationFormEntityListing result = apiInstance.GetQualityPublishedformsEvaluations(pageSize, pageNumber, name, onlyLatestPerContext);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedformsEvaluations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedformssurvey": {
    "operationId": "getqualitypublishedformssurvey",
    "functionName": "GetQualityPublishedformsSurvey",
    "signature": "GetQualityPublishedformsSurvey(formId)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformsSurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n\n            try\n            { \n                // Get the most recent published version of a survey form.\n                SurveyForm result = apiInstance.GetQualityPublishedformsSurvey(formId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedformsSurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitypublishedformssurveys": {
    "operationId": "getqualitypublishedformssurveys",
    "functionName": "GetQualityPublishedformsSurveys",
    "signature": "GetQualityPublishedformsSurveys(pageSize, pageNumber, name, onlyLatestEnabledPerContext)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "onlyLatestEnabledPerContext",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "SurveyFormEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualityPublishedformsSurveysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var onlyLatestEnabledPerContext = true;  // bool? | onlyLatestEnabledPerContext (optional)  (default to false)\n\n            try\n            { \n                // Get the published survey forms.\n                SurveyFormEntityListing result = apiInstance.GetQualityPublishedformsSurveys(pageSize, pageNumber, name, onlyLatestEnabledPerContext);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualityPublishedformsSurveys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitysurvey": {
    "operationId": "getqualitysurvey",
    "functionName": "GetQualitySurvey",
    "signature": "GetQualitySurvey(surveyId)",
    "parameters": [
      {
        "name": "surveyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Survey",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualitySurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var surveyId = \"surveyId_example\";  // string | surveyId\n\n            try\n            { \n                // Get a survey for a conversation\n                Survey result = apiInstance.GetQualitySurvey(surveyId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualitySurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getqualitysurveysscorable": {
    "operationId": "getqualitysurveysscorable",
    "functionName": "GetQualitySurveysScorable",
    "signature": "GetQualitySurveysScorable(customerSurveyUrl)",
    "parameters": [
      {
        "name": "customerSurveyUrl",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScorableSurvey",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetQualitySurveysScorableExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new QualityApi();\n            var customerSurveyUrl = \"customerSurveyUrl_example\";  // string | customerSurveyUrl\n\n            try\n            { \n                // Get a survey as an end-customer, for the purposes of scoring it.\n                ScorableSurvey result = apiInstance.GetQualitySurveysScorable(customerSurveyUrl);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.GetQualitySurveysScorable: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchqualityformssurvey": {
    "operationId": "patchqualityformssurvey",
    "functionName": "PatchQualityFormsSurvey",
    "signature": "PatchQualityFormsSurvey(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchQualityFormsSurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var body = new SurveyForm(); // SurveyForm | Survey form\n\n            try\n            { \n                // Disable a particular version of a survey form and invalidates any invitations that have already been sent to customers using this version of the form.\n                SurveyForm result = apiInstance.PatchQualityFormsSurvey(formId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PatchQualityFormsSurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualitycalibrations": {
    "operationId": "postqualitycalibrations",
    "functionName": "PostQualityCalibrations",
    "signature": "PostQualityCalibrations(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "CalibrationCreate",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Calibration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityCalibrationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new CalibrationCreate(); // CalibrationCreate | calibration\n            var expand = \"expand_example\";  // string | calibratorId (optional) \n\n            try\n            { \n                // Create a calibration\n                Calibration result = apiInstance.PostQualityCalibrations(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityCalibrations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityconversationevaluations": {
    "operationId": "postqualityconversationevaluations",
    "functionName": "PostQualityConversationEvaluations",
    "signature": "PostQualityConversationEvaluations(conversationId, body, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluation",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Evaluation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityConversationEvaluationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var body = new Evaluation(); // Evaluation | evaluation\n            var expand = \"expand_example\";  // string | evaluatorId (optional) \n\n            try\n            { \n                // Create an evaluation\n                Evaluation result = apiInstance.PostQualityConversationEvaluations(conversationId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityConversationEvaluations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityconversationsauditsquery": {
    "operationId": "postqualityconversationsauditsquery",
    "functionName": "PostQualityConversationsAuditsQuery",
    "signature": "PostQualityConversationsAuditsQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "QMAuditQueryRequest",
        "required": "true"
      }
    ],
    "return": "QualityAuditQueryExecutionStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityConversationsAuditsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new QMAuditQueryRequest(); // QMAuditQueryRequest | query\n\n            try\n            { \n                // Create audit query execution\n                QualityAuditQueryExecutionStatusResponse result = apiInstance.PostQualityConversationsAuditsQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityConversationsAuditsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityevaluationsaggregatesqueryme": {
    "operationId": "postqualityevaluationsaggregatesqueryme",
    "functionName": "PostQualityEvaluationsAggregatesQueryMe",
    "signature": "PostQualityEvaluationsAggregatesQueryMe(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationAggregationQueryMe",
        "required": "true"
      }
    ],
    "return": "EvaluationAggregateQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityEvaluationsAggregatesQueryMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new EvaluationAggregationQueryMe(); // EvaluationAggregationQueryMe | query\n\n            try\n            { \n                // Query for evaluation aggregates for the current user\n                EvaluationAggregateQueryResponse result = apiInstance.PostQualityEvaluationsAggregatesQueryMe(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityEvaluationsAggregatesQueryMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityevaluationsscoring": {
    "operationId": "postqualityevaluationsscoring",
    "functionName": "PostQualityEvaluationsScoring",
    "signature": "PostQualityEvaluationsScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationFormAndScoringSet",
        "required": "true"
      }
    ],
    "return": "EvaluationScoringSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityEvaluationsScoringExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new EvaluationFormAndScoringSet(); // EvaluationFormAndScoringSet | evaluationAndScoringSet\n\n            try\n            { \n                // Score evaluation\n                EvaluationScoringSet result = apiInstance.PostQualityEvaluationsScoring(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityEvaluationsScoring: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityforms": {
    "operationId": "postqualityforms",
    "functionName": "PostQualityForms",
    "signature": "PostQualityForms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityFormsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new EvaluationForm(); // EvaluationForm | Evaluation form\n\n            try\n            { \n                // Create an evaluation form.\n                EvaluationForm result = apiInstance.PostQualityForms(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityForms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityformsevaluations": {
    "operationId": "postqualityformsevaluations",
    "functionName": "PostQualityFormsEvaluations",
    "signature": "PostQualityFormsEvaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityFormsEvaluationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new EvaluationForm(); // EvaluationForm | Evaluation form\n\n            try\n            { \n                // Create an evaluation form.\n                EvaluationForm result = apiInstance.PostQualityFormsEvaluations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityFormsEvaluations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualityformssurveys": {
    "operationId": "postqualityformssurveys",
    "functionName": "PostQualityFormsSurveys",
    "signature": "PostQualityFormsSurveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityFormsSurveysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new SurveyForm(); // SurveyForm | Survey form\n\n            try\n            { \n                // Create a survey form.\n                SurveyForm result = apiInstance.PostQualityFormsSurveys(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityFormsSurveys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualitypublishedforms": {
    "operationId": "postqualitypublishedforms",
    "functionName": "PostQualityPublishedforms",
    "signature": "PostQualityPublishedforms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityPublishedformsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new PublishForm(); // PublishForm | Publish request containing id of form to publish\n\n            try\n            { \n                // Publish an evaluation form.\n                EvaluationForm result = apiInstance.PostQualityPublishedforms(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityPublishedforms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualitypublishedformsevaluations": {
    "operationId": "postqualitypublishedformsevaluations",
    "functionName": "PostQualityPublishedformsEvaluations",
    "signature": "PostQualityPublishedformsEvaluations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityPublishedformsEvaluationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new PublishForm(); // PublishForm | Publish request containing id of form to publish\n\n            try\n            { \n                // Publish an evaluation form.\n                EvaluationForm result = apiInstance.PostQualityPublishedformsEvaluations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityPublishedformsEvaluations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualitypublishedformssurveys": {
    "operationId": "postqualitypublishedformssurveys",
    "functionName": "PostQualityPublishedformsSurveys",
    "signature": "PostQualityPublishedformsSurveys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PublishForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualityPublishedformsSurveysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new PublishForm(); // PublishForm | Survey form\n\n            try\n            { \n                // Publish a survey form.\n                SurveyForm result = apiInstance.PostQualityPublishedformsSurveys(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualityPublishedformsSurveys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postqualitysurveysscoring": {
    "operationId": "postqualitysurveysscoring",
    "functionName": "PostQualitySurveysScoring",
    "signature": "PostQualitySurveysScoring(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SurveyFormAndScoringSet",
        "required": "true"
      }
    ],
    "return": "SurveyScoringSet",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostQualitySurveysScoringExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var body = new SurveyFormAndScoringSet(); // SurveyFormAndScoringSet | surveyAndScoringSet\n\n            try\n            { \n                // Score survey\n                SurveyScoringSet result = apiInstance.PostQualitySurveysScoring(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PostQualitySurveysScoring: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualitycalibration": {
    "operationId": "putqualitycalibration",
    "functionName": "PutQualityCalibration",
    "signature": "PutQualityCalibration(calibrationId, body)",
    "parameters": [
      {
        "name": "calibrationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Calibration",
        "required": "true"
      }
    ],
    "return": "Calibration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualityCalibrationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var calibrationId = \"calibrationId_example\";  // string | Calibration ID\n            var body = new Calibration(); // Calibration | Calibration\n\n            try\n            { \n                // Update a calibration to the specified calibration via PUT.  Editable fields include: evaluators, expertEvaluator, and scoringIndex\n                Calibration result = apiInstance.PutQualityCalibration(calibrationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualityCalibration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualityconversationevaluation": {
    "operationId": "putqualityconversationevaluation",
    "functionName": "PutQualityConversationEvaluation",
    "signature": "PutQualityConversationEvaluation(conversationId, evaluationId, body, expand)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "evaluationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Evaluation",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EvaluationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualityConversationEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var evaluationId = \"evaluationId_example\";  // string | evaluationId\n            var body = new Evaluation(); // Evaluation | evaluation\n            var expand = \"expand_example\";  // string | evaluatorId, evaluationForm (optional) \n\n            try\n            { \n                // Update an evaluation\n                EvaluationResponse result = apiInstance.PutQualityConversationEvaluation(conversationId, evaluationId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualityConversationEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualityform": {
    "operationId": "putqualityform",
    "functionName": "PutQualityForm",
    "signature": "PutQualityForm(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualityFormExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var body = new EvaluationForm(); // EvaluationForm | Evaluation form\n\n            try\n            { \n                // Update an evaluation form.\n                EvaluationForm result = apiInstance.PutQualityForm(formId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualityForm: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualityformsevaluation": {
    "operationId": "putqualityformsevaluation",
    "functionName": "PutQualityFormsEvaluation",
    "signature": "PutQualityFormsEvaluation(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EvaluationForm",
        "required": "true"
      }
    ],
    "return": "EvaluationForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualityFormsEvaluationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var body = new EvaluationForm(); // EvaluationForm | Evaluation form\n\n            try\n            { \n                // Update an evaluation form.\n                EvaluationForm result = apiInstance.PutQualityFormsEvaluation(formId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualityFormsEvaluation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualityformssurvey": {
    "operationId": "putqualityformssurvey",
    "functionName": "PutQualityFormsSurvey",
    "signature": "PutQualityFormsSurvey(formId, body)",
    "parameters": [
      {
        "name": "formId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SurveyForm",
        "required": "true"
      }
    ],
    "return": "SurveyForm",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualityFormsSurveyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new QualityApi();\n            var formId = \"formId_example\";  // string | Form ID\n            var body = new SurveyForm(); // SurveyForm | Survey form\n\n            try\n            { \n                // Update a survey form.\n                SurveyForm result = apiInstance.PutQualityFormsSurvey(formId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualityFormsSurvey: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putqualitysurveysscorable": {
    "operationId": "putqualitysurveysscorable",
    "functionName": "PutQualitySurveysScorable",
    "signature": "PutQualitySurveysScorable(customerSurveyUrl, body)",
    "parameters": [
      {
        "name": "customerSurveyUrl",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScorableSurvey",
        "required": "true"
      }
    ],
    "return": "ScorableSurvey",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutQualitySurveysScorableExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new QualityApi();\n            var customerSurveyUrl = \"customerSurveyUrl_example\";  // string | customerSurveyUrl\n            var body = new ScorableSurvey(); // ScorableSurvey | survey\n\n            try\n            { \n                // Update a survey as an end-customer, for the purposes of scoring it.\n                ScorableSurvey result = apiInstance.PutQualitySurveysScorable(customerSurveyUrl, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Quality.PutQualitySurveysScorable: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteconversationrecordingannotation": {
    "operationId": "deleteconversationrecordingannotation",
    "functionName": "DeleteConversationRecordingAnnotation",
    "signature": "DeleteConversationRecordingAnnotation(conversationId, recordingId, annotationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteConversationRecordingAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var annotationId = \"annotationId_example\";  // string | Annotation ID\n\n            try\n            { \n                // Delete annotation\n                apiInstance.DeleteConversationRecordingAnnotation(conversationId, recordingId, annotationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteConversationRecordingAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteorphanrecording": {
    "operationId": "deleteorphanrecording",
    "functionName": "DeleteOrphanrecording",
    "signature": "DeleteOrphanrecording(orphanId)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OrphanRecording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteOrphanrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var orphanId = \"orphanId_example\";  // string | Orphan ID\n\n            try\n            { \n                // Deletes a single orphan recording\n                OrphanRecording result = apiInstance.DeleteOrphanrecording(orphanId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteOrphanrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleterecordingcrossplatformmediaretentionpolicies": {
    "operationId": "deleterecordingcrossplatformmediaretentionpolicies",
    "functionName": "DeleteRecordingCrossplatformMediaretentionpolicies",
    "signature": "DeleteRecordingCrossplatformMediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRecordingCrossplatformMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var ids = \"ids_example\";  // string | \n\n            try\n            { \n                // Delete media retention policies\n                apiInstance.DeleteRecordingCrossplatformMediaretentionpolicies(ids);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteRecordingCrossplatformMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleterecordingcrossplatformmediaretentionpolicy": {
    "operationId": "deleterecordingcrossplatformmediaretentionpolicy",
    "functionName": "DeleteRecordingCrossplatformMediaretentionpolicy",
    "signature": "DeleteRecordingCrossplatformMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRecordingCrossplatformMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n\n            try\n            { \n                // Delete a media retention policy\n                apiInstance.DeleteRecordingCrossplatformMediaretentionpolicy(policyId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteRecordingCrossplatformMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleterecordingjob": {
    "operationId": "deleterecordingjob",
    "functionName": "DeleteRecordingJob",
    "signature": "DeleteRecordingJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRecordingJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Delete the recording bulk job\n                apiInstance.DeleteRecordingJob(jobId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteRecordingJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleterecordingmediaretentionpolicies": {
    "operationId": "deleterecordingmediaretentionpolicies",
    "functionName": "DeleteRecordingMediaretentionpolicies",
    "signature": "DeleteRecordingMediaretentionpolicies(ids)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRecordingMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var ids = \"ids_example\";  // string | \n\n            try\n            { \n                // Delete media retention policies\n                apiInstance.DeleteRecordingMediaretentionpolicies(ids);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteRecordingMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleterecordingmediaretentionpolicy": {
    "operationId": "deleterecordingmediaretentionpolicy",
    "functionName": "DeleteRecordingMediaretentionpolicy",
    "signature": "DeleteRecordingMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRecordingMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n\n            try\n            { \n                // Delete a media retention policy\n                apiInstance.DeleteRecordingMediaretentionpolicy(policyId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.DeleteRecordingMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecording": {
    "operationId": "getconversationrecording",
    "functionName": "GetConversationRecording",
    "signature": "GetConversationRecording(conversationId, recordingId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "emailFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "chatFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messageFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var formatId = \"formatId_example\";  // string | The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE (optional)  (default to WEBM)\n            var emailFormatId = \"emailFormatId_example\";  // string | The desired media format when downloading an email recording. Valid values:EML,NONE (optional)  (default to EML)\n            var chatFormatId = \"chatFormatId_example\";  // string | The desired media format when downloading a chat recording. Valid values:ZIP,NONE  (optional)  (default to ZIP)\n            var messageFormatId = \"messageFormatId_example\";  // string | The desired media format when downloading a message recording. Valid values:ZIP,NONE (optional)  (default to ZIP)\n            var download = \"download_example\";  // bool? | requesting a download format of the recording. Valid values:true,false (optional)  (default to false)\n            var fileName = \"fileName_example\";  // string | the name of the downloaded fileName (optional) \n            var locale = \"locale_example\";  // string | The locale for the requested file when downloading, as an ISO 639-1 code (optional) \n            var mediaFormats = new List<string>(); // List<string> | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3 (optional) \n\n            try\n            { \n                // Gets a specific recording.\n                Recording result = apiInstance.GetConversationRecording(conversationId, recordingId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecordingannotation": {
    "operationId": "getconversationrecordingannotation",
    "functionName": "GetConversationRecordingAnnotation",
    "signature": "GetConversationRecordingAnnotation(conversationId, recordingId, annotationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var annotationId = \"annotationId_example\";  // string | Annotation ID\n\n            try\n            { \n                // Get annotation\n                Annotation result = apiInstance.GetConversationRecordingAnnotation(conversationId, recordingId, annotationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecordingAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecordingannotations": {
    "operationId": "getconversationrecordingannotations",
    "functionName": "GetConversationRecordingAnnotations",
    "signature": "GetConversationRecordingAnnotations(conversationId, recordingId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<Annotation>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingAnnotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n\n            try\n            { \n                // Get annotations for recording\n                List<Annotation> result = apiInstance.GetConversationRecordingAnnotations(conversationId, recordingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecordingAnnotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecordingmetadata": {
    "operationId": "getconversationrecordingmetadata",
    "functionName": "GetConversationRecordingmetadata",
    "signature": "GetConversationRecordingmetadata(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<RecordingMetadata>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingmetadataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n\n            try\n            { \n                // Get recording metadata for a conversation. Does not return playable media. Annotations won't be included in the response if recording:recording:view permission is missing.\n                List<RecordingMetadata> result = apiInstance.GetConversationRecordingmetadata(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecordingmetadata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecordingmetadatarecordingid": {
    "operationId": "getconversationrecordingmetadatarecordingid",
    "functionName": "GetConversationRecordingmetadataRecordingId",
    "signature": "GetConversationRecordingmetadataRecordingId(conversationId, recordingId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RecordingMetadata",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingmetadataRecordingIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n\n            try\n            { \n                // Get metadata for a specific recording. Does not return playable media.\n                RecordingMetadata result = apiInstance.GetConversationRecordingmetadataRecordingId(conversationId, recordingId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecordingmetadataRecordingId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconversationrecordings": {
    "operationId": "getconversationrecordings",
    "functionName": "GetConversationRecordings",
    "signature": "GetConversationRecordings(conversationId, maxWaitMs, formatId, mediaFormats)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "maxWaitMs",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "List<Recording>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConversationRecordingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var maxWaitMs = 56;  // int? | The maximum number of milliseconds to wait for the recording to be ready. Must be a positive value. (optional)  (default to 5000)\n            var formatId = \"formatId_example\";  // string | The desired media format. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3,NONE. (optional)  (default to WEBM)\n            var mediaFormats = new List<string>(); // List<string> | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3. (optional) \n\n            try\n            { \n                // Get all of a Conversation's Recordings.\n                List<Recording> result = apiInstance.GetConversationRecordings(conversationId, maxWaitMs, formatId, mediaFormats);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetConversationRecordings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorphanrecording": {
    "operationId": "getorphanrecording",
    "functionName": "GetOrphanrecording",
    "signature": "GetOrphanrecording(orphanId)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OrphanRecording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrphanrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var orphanId = \"orphanId_example\";  // string | Orphan ID\n\n            try\n            { \n                // Gets a single orphan recording\n                OrphanRecording result = apiInstance.GetOrphanrecording(orphanId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetOrphanrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorphanrecordingmedia": {
    "operationId": "getorphanrecordingmedia",
    "functionName": "GetOrphanrecordingMedia",
    "signature": "GetOrphanrecordingMedia(orphanId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "emailFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "chatFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "messageFormatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "download",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "fileName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locale",
        "type": "string",
        "required": "false"
      },
      {
        "name": "mediaFormats",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrphanrecordingMediaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var orphanId = \"orphanId_example\";  // string | Orphan ID\n            var formatId = \"formatId_example\";  // string | The desired media format. (optional)  (default to WEBM)\n            var emailFormatId = \"emailFormatId_example\";  // string | The desired media format when downloading an email recording. (optional)  (default to EML)\n            var chatFormatId = \"chatFormatId_example\";  // string | The desired media format when downloading a chat recording. (optional)  (default to ZIP)\n            var messageFormatId = \"messageFormatId_example\";  // string | The desired media format when downloading a message recording. (optional)  (default to ZIP)\n            var download = \"download_example\";  // bool? | requesting a download format of the recording (optional)  (default to false)\n            var fileName = \"fileName_example\";  // string | the name of the downloaded fileName (optional) \n            var locale = \"locale_example\";  // string | The locale for the requested file when downloading, as an ISO 639-1 code (optional) \n            var mediaFormats = new List<string>(); // List<string> | All acceptable media formats. Overrides formatId. Valid values:WAV,WEBM,WAV_ULAW,OGG_VORBIS,OGG_OPUS,MP3 (optional) \n\n            try\n            { \n                // Gets the media of a single orphan recording\n                Recording result = apiInstance.GetOrphanrecordingMedia(orphanId, formatId, emailFormatId, chatFormatId, messageFormatId, download, fileName, locale, mediaFormats);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetOrphanrecordingMedia: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getorphanrecordings": {
    "operationId": "getorphanrecordings",
    "functionName": "GetOrphanrecordings",
    "signature": "GetOrphanrecordings(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, hasConversation, media)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "hasConversation",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "media",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OrphanRecordingListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetOrphanrecordingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var hasConversation = true;  // bool? | Filter resulting orphans by whether the conversation is known. False returns all orphans for the organization. (optional)  (default to false)\n            var media = \"media_example\";  // string | Filter resulting orphans based on their media type (optional) \n\n            try\n            { \n                // Gets all orphan recordings\n                OrphanRecordingListing result = apiInstance.GetOrphanrecordings(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, hasConversation, media);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetOrphanrecordings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingbatchrequest": {
    "operationId": "getrecordingbatchrequest",
    "functionName": "GetRecordingBatchrequest",
    "signature": "GetRecordingBatchrequest(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BatchDownloadJobStatusResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingBatchrequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Get the status and results for a batch request job, only the user that submitted the job may retrieve results\n                BatchDownloadJobStatusResult result = apiInstance.GetRecordingBatchrequest(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingBatchrequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingcrossplatformmediaretentionpolicies": {
    "operationId": "getrecordingcrossplatformmediaretentionpolicies",
    "functionName": "GetRecordingCrossplatformMediaretentionpolicies",
    "signature": "GetRecordingCrossplatformMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "hasErrors",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "deleteDaysThreshold",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "PolicyEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingCrossplatformMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var name = \"name_example\";  // string | the policy name - used for filtering results in searches. (optional) \n            var enabled = true;  // bool? | checks to see if policy is enabled - use enabled = true or enabled = false (optional) \n            var summary = true;  // bool? | provides a less verbose response of policy lists. (optional)  (default to false)\n            var hasErrors = true;  // bool? | provides a way to fetch all policies with errors or policies that do not have errors (optional) \n            var deleteDaysThreshold = 56;  // int? | provides a way to fetch all policies with any actions having deleteDays exceeding the provided value (optional) \n\n            try\n            { \n                // Gets media retention policy list with query options to filter on name and enabled.\n                PolicyEntityListing result = apiInstance.GetRecordingCrossplatformMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingCrossplatformMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "getrecordingcrossplatformmediaretentionpolicy",
    "functionName": "GetRecordingCrossplatformMediaretentionpolicy",
    "signature": "GetRecordingCrossplatformMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingCrossplatformMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n\n            try\n            { \n                // Get a media retention policy\n                CrossPlatformPolicy result = apiInstance.GetRecordingCrossplatformMediaretentionpolicy(policyId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingCrossplatformMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingjob": {
    "operationId": "getrecordingjob",
    "functionName": "GetRecordingJob",
    "signature": "GetRecordingJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Get the status of the job associated with the job id.\n                RecordingJob result = apiInstance.GetRecordingJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingjobfailedrecordings": {
    "operationId": "getrecordingjobfailedrecordings",
    "functionName": "GetRecordingJobFailedrecordings",
    "signature": "GetRecordingJobFailedrecordings(jobId, pageSize, pageNumber, includeTotal, cursor)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "includeTotal",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "FailedRecordingEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingJobFailedrecordingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var jobId = \"jobId_example\";  // string | jobId\n            var pageSize = 56;  // int? | Page size. Maximum is 100. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var includeTotal = true;  // bool? | If false, cursor will be used to locate the page instead of pageNumber. (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n\n            try\n            { \n                // Get IDs of recordings that the bulk job failed for\n                FailedRecordingEntityListing result = apiInstance.GetRecordingJobFailedrecordings(jobId, pageSize, pageNumber, includeTotal, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingJobFailedrecordings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingjobs": {
    "operationId": "getrecordingjobs",
    "functionName": "GetRecordingJobs",
    "signature": "GetRecordingJobs(pageSize, pageNumber, sortBy, state, showOnlyMyJobs, jobType, includeTotal, cursor)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "showOnlyMyJobs",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "jobType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "includeTotal",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "RecordingJobEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to userId)\n            var state = \"state_example\";  // string | Filter by state (optional) \n            var showOnlyMyJobs = true;  // bool? | Show only my jobs (optional) \n            var jobType = \"jobType_example\";  // string | Job Type (Can be left empty for both) (optional) \n            var includeTotal = true;  // bool? | If false, cursor will be used to locate the page instead of pageNumber. (optional) \n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n\n            try\n            { \n                // Get the status of all jobs within the user's organization\n                RecordingJobEntityListing result = apiInstance.GetRecordingJobs(pageSize, pageNumber, sortBy, state, showOnlyMyJobs, jobType, includeTotal, cursor);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingkeyconfiguration": {
    "operationId": "getrecordingkeyconfiguration",
    "functionName": "GetRecordingKeyconfiguration",
    "signature": "GetRecordingKeyconfiguration(keyConfigurationId)",
    "parameters": [
      {
        "name": "keyConfigurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingKeyconfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var keyConfigurationId = \"keyConfigurationId_example\";  // string | Key Configurations Id\n\n            try\n            { \n                // Get the encryption key configurations\n                RecordingEncryptionConfiguration result = apiInstance.GetRecordingKeyconfiguration(keyConfigurationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingKeyconfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingkeyconfigurations": {
    "operationId": "getrecordingkeyconfigurations",
    "functionName": "GetRecordingKeyconfigurations",
    "signature": "GetRecordingKeyconfigurations()",
    "return": "RecordingEncryptionConfigurationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingKeyconfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n\n            try\n            { \n                // Get a list of key configurations data\n                RecordingEncryptionConfigurationListing result = apiInstance.GetRecordingKeyconfigurations();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingKeyconfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordinglocalkeyssetting": {
    "operationId": "getrecordinglocalkeyssetting",
    "functionName": "GetRecordingLocalkeysSetting",
    "signature": "GetRecordingLocalkeysSetting(settingsId)",
    "parameters": [
      {
        "name": "settingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LocalEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingLocalkeysSettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var settingsId = \"settingsId_example\";  // string | Settings Id\n\n            try\n            { \n                // Get the local encryption settings\n                LocalEncryptionConfiguration result = apiInstance.GetRecordingLocalkeysSetting(settingsId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingLocalkeysSetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordinglocalkeyssettings": {
    "operationId": "getrecordinglocalkeyssettings",
    "functionName": "GetRecordingLocalkeysSettings",
    "signature": "GetRecordingLocalkeysSettings()",
    "return": "LocalEncryptionConfigurationListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingLocalkeysSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n\n            try\n            { \n                // gets a list local key settings data\n                LocalEncryptionConfigurationListing result = apiInstance.GetRecordingLocalkeysSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingLocalkeysSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingmediaretentionpolicies": {
    "operationId": "getrecordingmediaretentionpolicies",
    "functionName": "GetRecordingMediaretentionpolicies",
    "signature": "GetRecordingMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "previousPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "enabled",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "summary",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "hasErrors",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "deleteDaysThreshold",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "PolicyEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | The total page size requested (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number requested (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | variable name requested to sort by (optional) \n            var expand = new List<string>(); // List<string> | variable name requested by expand list (optional) \n            var nextPage = \"nextPage_example\";  // string | next page token (optional) \n            var previousPage = \"previousPage_example\";  // string | Previous page token (optional) \n            var name = \"name_example\";  // string | the policy name - used for filtering results in searches. (optional) \n            var enabled = true;  // bool? | checks to see if policy is enabled - use enabled = true or enabled = false (optional) \n            var summary = true;  // bool? | provides a less verbose response of policy lists. (optional)  (default to false)\n            var hasErrors = true;  // bool? | provides a way to fetch all policies with errors or policies that do not have errors (optional) \n            var deleteDaysThreshold = 56;  // int? | provides a way to fetch all policies with any actions having deleteDays exceeding the provided value (optional) \n\n            try\n            { \n                // Gets media retention policy list with query options to filter on name and enabled.\n                PolicyEntityListing result = apiInstance.GetRecordingMediaretentionpolicies(pageSize, pageNumber, sortBy, expand, nextPage, previousPage, name, enabled, summary, hasErrors, deleteDaysThreshold);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingmediaretentionpolicy": {
    "operationId": "getrecordingmediaretentionpolicy",
    "functionName": "GetRecordingMediaretentionpolicy",
    "signature": "GetRecordingMediaretentionpolicy(policyId)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n\n            try\n            { \n                // Get a media retention policy\n                Policy result = apiInstance.GetRecordingMediaretentionpolicy(policyId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingrecordingkeys": {
    "operationId": "getrecordingrecordingkeys",
    "functionName": "GetRecordingRecordingkeys",
    "signature": "GetRecordingRecordingkeys(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "EncryptionKeyEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingRecordingkeysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get encryption key list\n                EncryptionKeyEntityListing result = apiInstance.GetRecordingRecordingkeys(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingRecordingkeys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingrecordingkeysrotationschedule": {
    "operationId": "getrecordingrecordingkeysrotationschedule",
    "functionName": "GetRecordingRecordingkeysRotationschedule",
    "signature": "GetRecordingRecordingkeysRotationschedule()",
    "return": "KeyRotationSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingRecordingkeysRotationscheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n\n            try\n            { \n                // Get key rotation schedule\n                KeyRotationSchedule result = apiInstance.GetRecordingRecordingkeysRotationschedule();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingRecordingkeysRotationschedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingsettings": {
    "operationId": "getrecordingsettings",
    "functionName": "GetRecordingSettings",
    "signature": "GetRecordingSettings(createDefault)",
    "parameters": [
      {
        "name": "createDefault",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "RecordingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var createDefault = true;  // bool? | If no settings are found, a new one is created with default values (optional)  (default to false)\n\n            try\n            { \n                // Get the Recording Settings for the Organization\n                RecordingSettings result = apiInstance.GetRecordingSettings(createDefault);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingsretentionquery": {
    "operationId": "getrecordingsretentionquery",
    "functionName": "GetRecordingsRetentionQuery",
    "signature": "GetRecordingsRetentionQuery(retentionThresholdDays, cursor, pageSize)",
    "parameters": [
      {
        "name": "retentionThresholdDays",
        "type": "int?",
        "required": "true"
      },
      {
        "name": "cursor",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "RecordingRetentionCursorEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingsRetentionQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var retentionThresholdDays = 56;  // int? | Fetch retention data for recordings retained for more days than the provided value.\n            var cursor = \"cursor_example\";  // string | Indicates where to resume query results (not required for first page) (optional) \n            var pageSize = 56;  // int? | Page size. Maximum is 500. (optional)  (default to 25)\n\n            try\n            { \n                // Query for recording retention data\n                RecordingRetentionCursorEntityListing result = apiInstance.GetRecordingsRetentionQuery(retentionThresholdDays, cursor, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingsRetentionQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getrecordingsscreensessions": {
    "operationId": "getrecordingsscreensessions",
    "functionName": "GetRecordingsScreensessions",
    "signature": "GetRecordingsScreensessions(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ScreenRecordingSessionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRecordingsScreensessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Retrieves a paged listing of screen recording sessions\n                ScreenRecordingSessionListing result = apiInstance.GetRecordingsScreensessions(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.GetRecordingsScreensessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "patchrecordingcrossplatformmediaretentionpolicy",
    "functionName": "PatchRecordingCrossplatformMediaretentionpolicy",
    "signature": "PatchRecordingCrossplatformMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CrossPlatformPolicyUpdate",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRecordingCrossplatformMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n            var body = new CrossPlatformPolicyUpdate(); // CrossPlatformPolicyUpdate | Policy\n\n            try\n            { \n                // Patch a media retention policy\n                CrossPlatformPolicy result = apiInstance.PatchRecordingCrossplatformMediaretentionpolicy(policyId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PatchRecordingCrossplatformMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchrecordingmediaretentionpolicy": {
    "operationId": "patchrecordingmediaretentionpolicy",
    "functionName": "PatchRecordingMediaretentionpolicy",
    "signature": "PatchRecordingMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PolicyUpdate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRecordingMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n            var body = new PolicyUpdate(); // PolicyUpdate | Policy\n\n            try\n            { \n                // Patch a media retention policy\n                Policy result = apiInstance.PatchRecordingMediaretentionpolicy(policyId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PatchRecordingMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchrecordingsscreensession": {
    "operationId": "patchrecordingsscreensession",
    "functionName": "PatchRecordingsScreensession",
    "signature": "PatchRecordingsScreensession(recordingSessionId, body)",
    "parameters": [
      {
        "name": "recordingSessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScreenRecordingSessionRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRecordingsScreensessionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var recordingSessionId = \"recordingSessionId_example\";  // string | Screen recording session ID\n            var body = new ScreenRecordingSessionRequest(); // ScreenRecordingSessionRequest |  (optional) \n\n            try\n            { \n                // Update a screen recording session\n                apiInstance.PatchRecordingsScreensession(recordingSessionId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PatchRecordingsScreensession: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postconversationrecordingannotations": {
    "operationId": "postconversationrecordingannotations",
    "functionName": "PostConversationRecordingAnnotations",
    "signature": "PostConversationRecordingAnnotations(conversationId, recordingId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostConversationRecordingAnnotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var body = new Annotation(); // Annotation | annotation\n\n            try\n            { \n                // Create annotation\n                Annotation result = apiInstance.PostConversationRecordingAnnotations(conversationId, recordingId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostConversationRecordingAnnotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingbatchrequests": {
    "operationId": "postrecordingbatchrequests",
    "functionName": "PostRecordingBatchrequests",
    "signature": "PostRecordingBatchrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BatchDownloadJobSubmission",
        "required": "true"
      }
    ],
    "return": "BatchDownloadJobSubmissionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingBatchrequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new BatchDownloadJobSubmission(); // BatchDownloadJobSubmission | Job submission criteria\n\n            try\n            { \n                // Submit a batch download request for recordings. Recordings in response will be in their original format/codec - configured in the Trunk configuration.\n                BatchDownloadJobSubmissionResult result = apiInstance.PostRecordingBatchrequests(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingBatchrequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingcrossplatformmediaretentionpolicies": {
    "operationId": "postrecordingcrossplatformmediaretentionpolicies",
    "functionName": "PostRecordingCrossplatformMediaretentionpolicies",
    "signature": "PostRecordingCrossplatformMediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CrossPlatformPolicyCreate",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingCrossplatformMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new CrossPlatformPolicyCreate(); // CrossPlatformPolicyCreate | Policy\n\n            try\n            { \n                // Create media retention policy\n                CrossPlatformPolicy result = apiInstance.PostRecordingCrossplatformMediaretentionpolicies(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingCrossplatformMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingjobs": {
    "operationId": "postrecordingjobs",
    "functionName": "PostRecordingJobs",
    "signature": "PostRecordingJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingJobsQuery",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new RecordingJobsQuery(); // RecordingJobsQuery | query\n\n            try\n            { \n                // Create a recording bulk job.\n                RecordingJob result = apiInstance.PostRecordingJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingkeyconfigurations": {
    "operationId": "postrecordingkeyconfigurations",
    "functionName": "PostRecordingKeyconfigurations",
    "signature": "PostRecordingKeyconfigurations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingKeyconfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new RecordingEncryptionConfiguration(); // RecordingEncryptionConfiguration | Encryption Configuration\n\n            try\n            { \n                // Setup configurations for encryption key creation\n                RecordingEncryptionConfiguration result = apiInstance.PostRecordingKeyconfigurations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingKeyconfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingkeyconfigurationsvalidate": {
    "operationId": "postrecordingkeyconfigurationsvalidate",
    "functionName": "PostRecordingKeyconfigurationsValidate",
    "signature": "PostRecordingKeyconfigurationsValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingKeyconfigurationsValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new RecordingEncryptionConfiguration(); // RecordingEncryptionConfiguration | Encryption Configuration\n\n            try\n            { \n                // Validate encryption key configurations without saving it\n                RecordingEncryptionConfiguration result = apiInstance.PostRecordingKeyconfigurationsValidate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingKeyconfigurationsValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordinglocalkeys": {
    "operationId": "postrecordinglocalkeys",
    "functionName": "PostRecordingLocalkeys",
    "signature": "PostRecordingLocalkeys(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocalEncryptionKeyRequest",
        "required": "true"
      }
    ],
    "return": "EncryptionKey",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingLocalkeysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new LocalEncryptionKeyRequest(); // LocalEncryptionKeyRequest | Local Encryption body\n\n            try\n            { \n                // create a local recording key\n                EncryptionKey result = apiInstance.PostRecordingLocalkeys(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingLocalkeys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordinglocalkeyssettings": {
    "operationId": "postrecordinglocalkeyssettings",
    "functionName": "PostRecordingLocalkeysSettings",
    "signature": "PostRecordingLocalkeysSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LocalEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "LocalEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingLocalkeysSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new LocalEncryptionConfiguration(); // LocalEncryptionConfiguration | Local Encryption Configuration\n\n            try\n            { \n                // create settings for local key creation\n                LocalEncryptionConfiguration result = apiInstance.PostRecordingLocalkeysSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingLocalkeysSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingmediaretentionpolicies": {
    "operationId": "postrecordingmediaretentionpolicies",
    "functionName": "PostRecordingMediaretentionpolicies",
    "signature": "PostRecordingMediaretentionpolicies(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PolicyCreate",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingMediaretentionpoliciesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new PolicyCreate(); // PolicyCreate | Policy\n\n            try\n            { \n                // Create media retention policy\n                Policy result = apiInstance.PostRecordingMediaretentionpolicies(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingMediaretentionpolicies: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingrecordingkeys": {
    "operationId": "postrecordingrecordingkeys",
    "functionName": "PostRecordingRecordingkeys",
    "signature": "PostRecordingRecordingkeys()",
    "return": "EncryptionKey",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingRecordingkeysExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n\n            try\n            { \n                // Create encryption key\n                EncryptionKey result = apiInstance.PostRecordingRecordingkeys();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingRecordingkeys: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingsdeletionprotection": {
    "operationId": "postrecordingsdeletionprotection",
    "functionName": "PostRecordingsDeletionprotection",
    "signature": "PostRecordingsDeletionprotection(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ConversationDeletionProtectionQuery",
        "required": "true"
      }
    ],
    "return": "List<AddressableEntityRef>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingsDeletionprotectionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new ConversationDeletionProtectionQuery(); // ConversationDeletionProtectionQuery | conversationIds\n\n            try\n            { \n                // Get a list of conversations with protected recordings\n                List<AddressableEntityRef> result = apiInstance.PostRecordingsDeletionprotection(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingsDeletionprotection: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingsscreensessionsacknowledge": {
    "operationId": "postrecordingsscreensessionsacknowledge",
    "functionName": "PostRecordingsScreensessionsAcknowledge",
    "signature": "PostRecordingsScreensessionsAcknowledge(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AcknowledgeScreenRecordingRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingsScreensessionsAcknowledgeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new AcknowledgeScreenRecordingRequest(); // AcknowledgeScreenRecordingRequest | AcknowledgeScreenRecordingRequest\n\n            try\n            { \n                // Acknowledge a screen recording.\n                apiInstance.PostRecordingsScreensessionsAcknowledge(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingsScreensessionsAcknowledge: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postrecordingsscreensessionsmetadata": {
    "operationId": "postrecordingsscreensessionsmetadata",
    "functionName": "PostRecordingsScreensessionsMetadata",
    "signature": "PostRecordingsScreensessionsMetadata(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScreenRecordingMetaDataRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRecordingsScreensessionsMetadataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new ScreenRecordingMetaDataRequest(); // ScreenRecordingMetaDataRequest | ScreenRecordingMetaDataRequest\n\n            try\n            { \n                // Provide meta-data a screen recording.\n                apiInstance.PostRecordingsScreensessionsMetadata(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PostRecordingsScreensessionsMetadata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationrecording": {
    "operationId": "putconversationrecording",
    "functionName": "PutConversationRecording",
    "signature": "PutConversationRecording(conversationId, recordingId, body, clearExport)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recording",
        "required": "true"
      },
      {
        "name": "clearExport",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationRecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var body = new Recording(); // Recording | recording\n            var clearExport = true;  // bool? | Whether to clear the pending export for the recording (optional) \n\n            try\n            { \n                // Updates the retention records on a recording.\n                Recording result = apiInstance.PutConversationRecording(conversationId, recordingId, body, clearExport);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutConversationRecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putconversationrecordingannotation": {
    "operationId": "putconversationrecordingannotation",
    "functionName": "PutConversationRecordingAnnotation",
    "signature": "PutConversationRecordingAnnotation(conversationId, recordingId, annotationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "annotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Annotation",
        "required": "true"
      }
    ],
    "return": "Annotation",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutConversationRecordingAnnotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var recordingId = \"recordingId_example\";  // string | Recording ID\n            var annotationId = \"annotationId_example\";  // string | Annotation ID\n            var body = new Annotation(); // Annotation | annotation\n\n            try\n            { \n                // Update annotation\n                Annotation result = apiInstance.PutConversationRecordingAnnotation(conversationId, recordingId, annotationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutConversationRecordingAnnotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putorphanrecording": {
    "operationId": "putorphanrecording",
    "functionName": "PutOrphanrecording",
    "signature": "PutOrphanrecording(orphanId, body)",
    "parameters": [
      {
        "name": "orphanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OrphanUpdateRequest",
        "required": "false"
      }
    ],
    "return": "Recording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutOrphanrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var orphanId = \"orphanId_example\";  // string | Orphan ID\n            var body = new OrphanUpdateRequest(); // OrphanUpdateRequest |  (optional) \n\n            try\n            { \n                // Updates an orphan recording to a regular recording with retention values\n                Recording result = apiInstance.PutOrphanrecording(orphanId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutOrphanrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingcrossplatformmediaretentionpolicy": {
    "operationId": "putrecordingcrossplatformmediaretentionpolicy",
    "functionName": "PutRecordingCrossplatformMediaretentionpolicy",
    "signature": "PutRecordingCrossplatformMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CrossPlatformPolicy",
        "required": "true"
      }
    ],
    "return": "CrossPlatformPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingCrossplatformMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n            var body = new CrossPlatformPolicy(); // CrossPlatformPolicy | Policy\n\n            try\n            { \n                // Update a media retention policy\n                CrossPlatformPolicy result = apiInstance.PutRecordingCrossplatformMediaretentionpolicy(policyId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingCrossplatformMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingjob": {
    "operationId": "putrecordingjob",
    "functionName": "PutRecordingJob",
    "signature": "PutRecordingJob(jobId, body)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExecuteRecordingJobsQuery",
        "required": "true"
      }
    ],
    "return": "RecordingJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var jobId = \"jobId_example\";  // string | jobId\n            var body = new ExecuteRecordingJobsQuery(); // ExecuteRecordingJobsQuery | query\n\n            try\n            { \n                // Execute the recording bulk job.\n                RecordingJob result = apiInstance.PutRecordingJob(jobId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingkeyconfiguration": {
    "operationId": "putrecordingkeyconfiguration",
    "functionName": "PutRecordingKeyconfiguration",
    "signature": "PutRecordingKeyconfiguration(keyConfigurationId, body)",
    "parameters": [
      {
        "name": "keyConfigurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RecordingEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "RecordingEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingKeyconfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var keyConfigurationId = \"keyConfigurationId_example\";  // string | Key Configurations Id\n            var body = new RecordingEncryptionConfiguration(); // RecordingEncryptionConfiguration | Encryption key configuration metadata\n\n            try\n            { \n                // Update the encryption key configurations\n                RecordingEncryptionConfiguration result = apiInstance.PutRecordingKeyconfiguration(keyConfigurationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingKeyconfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordinglocalkeyssetting": {
    "operationId": "putrecordinglocalkeyssetting",
    "functionName": "PutRecordingLocalkeysSetting",
    "signature": "PutRecordingLocalkeysSetting(settingsId, body)",
    "parameters": [
      {
        "name": "settingsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "LocalEncryptionConfiguration",
        "required": "true"
      }
    ],
    "return": "LocalEncryptionConfiguration",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingLocalkeysSettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var settingsId = \"settingsId_example\";  // string | Settings Id\n            var body = new LocalEncryptionConfiguration(); // LocalEncryptionConfiguration | Local Encryption metadata\n\n            try\n            { \n                // Update the local encryption settings\n                LocalEncryptionConfiguration result = apiInstance.PutRecordingLocalkeysSetting(settingsId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingLocalkeysSetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingmediaretentionpolicy": {
    "operationId": "putrecordingmediaretentionpolicy",
    "functionName": "PutRecordingMediaretentionpolicy",
    "signature": "PutRecordingMediaretentionpolicy(policyId, body)",
    "parameters": [
      {
        "name": "policyId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Policy",
        "required": "true"
      }
    ],
    "return": "Policy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingMediaretentionpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var policyId = \"policyId_example\";  // string | Policy ID\n            var body = new Policy(); // Policy | Policy\n\n            try\n            { \n                // Update a media retention policy\n                Policy result = apiInstance.PutRecordingMediaretentionpolicy(policyId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingMediaretentionpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingrecordingkeysrotationschedule": {
    "operationId": "putrecordingrecordingkeysrotationschedule",
    "functionName": "PutRecordingRecordingkeysRotationschedule",
    "signature": "PutRecordingRecordingkeysRotationschedule(body)",
    "parameters": [
      {
        "name": "body",
        "type": "KeyRotationSchedule",
        "required": "true"
      }
    ],
    "return": "KeyRotationSchedule",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingRecordingkeysRotationscheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new KeyRotationSchedule(); // KeyRotationSchedule | KeyRotationSchedule\n\n            try\n            { \n                // Update key rotation schedule\n                KeyRotationSchedule result = apiInstance.PutRecordingRecordingkeysRotationschedule(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingRecordingkeysRotationschedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingsettings": {
    "operationId": "putrecordingsettings",
    "functionName": "PutRecordingSettings",
    "signature": "PutRecordingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RecordingSettings",
        "required": "true"
      }
    ],
    "return": "RecordingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var body = new RecordingSettings(); // RecordingSettings | Recording settings\n\n            try\n            { \n                // Update the Recording Settings for the Organization\n                RecordingSettings result = apiInstance.PutRecordingSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putrecordingsdeletionprotection": {
    "operationId": "putrecordingsdeletionprotection",
    "functionName": "PutRecordingsDeletionprotection",
    "signature": "PutRecordingsDeletionprotection(protect, body)",
    "parameters": [
      {
        "name": "protect",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "body",
        "type": "ConversationDeletionProtectionQuery",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRecordingsDeletionprotectionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RecordingApi();\n            var protect = true;  // bool? | Check for apply, uncheck for revoke (each action requires the respective permission) (optional)  (default to true)\n            var body = new ConversationDeletionProtectionQuery(); // ConversationDeletionProtectionQuery |  (optional) \n\n            try\n            { \n                // Apply or revoke recording protection for conversations\n                apiInstance.PutRecordingsDeletionprotection(protect, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Recording.PutRecordingsDeletionprotection: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteresponsemanagementlibrary": {
    "operationId": "deleteresponsemanagementlibrary",
    "functionName": "DeleteResponsemanagementLibrary",
    "signature": "DeleteResponsemanagementLibrary(libraryId)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteResponsemanagementLibraryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var libraryId = \"libraryId_example\";  // string | Library ID\n\n            try\n            { \n                // Delete an existing response library.\n                apiInstance.DeleteResponsemanagementLibrary(libraryId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.DeleteResponsemanagementLibrary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteresponsemanagementresponse": {
    "operationId": "deleteresponsemanagementresponse",
    "functionName": "DeleteResponsemanagementResponse",
    "signature": "DeleteResponsemanagementResponse(responseId)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteResponsemanagementResponseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseId = \"responseId_example\";  // string | Response ID\n\n            try\n            { \n                // Delete an existing response.\n                apiInstance.DeleteResponsemanagementResponse(responseId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.DeleteResponsemanagementResponse: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteresponsemanagementresponseasset": {
    "operationId": "deleteresponsemanagementresponseasset",
    "functionName": "DeleteResponsemanagementResponseasset",
    "signature": "DeleteResponsemanagementResponseasset(responseAssetId)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteResponsemanagementResponseassetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseAssetId = \"responseAssetId_example\";  // string | Asset Id\n\n            try\n            { \n                // Delete response asset\n                apiInstance.DeleteResponsemanagementResponseasset(responseAssetId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.DeleteResponsemanagementResponseasset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementlibraries": {
    "operationId": "getresponsemanagementlibraries",
    "functionName": "GetResponsemanagementLibraries",
    "signature": "GetResponsemanagementLibraries(pageNumber, pageSize, messagingTemplateFilter)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "messagingTemplateFilter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "LibraryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementLibrariesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var messagingTemplateFilter = \"messagingTemplateFilter_example\";  // string | Returns a list of libraries that contain responses with at least one messaging template defined for a specific message channel (optional) \n\n            try\n            { \n                // Gets a list of existing response libraries.\n                LibraryEntityListing result = apiInstance.GetResponsemanagementLibraries(pageNumber, pageSize, messagingTemplateFilter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementLibraries: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementlibrary": {
    "operationId": "getresponsemanagementlibrary",
    "functionName": "GetResponsemanagementLibrary",
    "signature": "GetResponsemanagementLibrary(libraryId)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementLibraryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var libraryId = \"libraryId_example\";  // string | Library ID\n\n            try\n            { \n                // Get details about an existing response library.\n                Library result = apiInstance.GetResponsemanagementLibrary(libraryId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementLibrary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementresponse": {
    "operationId": "getresponsemanagementresponse",
    "functionName": "GetResponsemanagementResponse",
    "signature": "GetResponsemanagementResponse(responseId, expand)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementResponseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseId = \"responseId_example\";  // string | Response ID\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Get details about an existing response.\n                Response result = apiInstance.GetResponsemanagementResponse(responseId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementResponse: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementresponseasset": {
    "operationId": "getresponsemanagementresponseasset",
    "functionName": "GetResponsemanagementResponseasset",
    "signature": "GetResponsemanagementResponseasset(responseAssetId)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ResponseAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementResponseassetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseAssetId = \"responseAssetId_example\";  // string | Asset Id\n\n            try\n            { \n                // Get response asset information\n                ResponseAsset result = apiInstance.GetResponsemanagementResponseasset(responseAssetId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementResponseasset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementresponseassetsstatusstatusid": {
    "operationId": "getresponsemanagementresponseassetsstatusstatusid",
    "functionName": "GetResponsemanagementResponseassetsStatusStatusId",
    "signature": "GetResponsemanagementResponseassetsStatusStatusId(statusId)",
    "parameters": [
      {
        "name": "statusId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ResponseAssetStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementResponseassetsStatusStatusIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var statusId = \"statusId_example\";  // string | Status Id\n\n            try\n            { \n                // Get response asset upload status\n                ResponseAssetStatus result = apiInstance.GetResponsemanagementResponseassetsStatusStatusId(statusId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementResponseassetsStatusStatusId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getresponsemanagementresponses": {
    "operationId": "getresponsemanagementresponses",
    "functionName": "GetResponsemanagementResponses",
    "signature": "GetResponsemanagementResponses(libraryId, pageNumber, pageSize, expand)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ResponseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetResponsemanagementResponsesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var libraryId = \"libraryId_example\";  // string | Library ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Gets a list of existing responses.\n                ResponseEntityListing result = apiInstance.GetResponsemanagementResponses(libraryId, pageNumber, pageSize, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.GetResponsemanagementResponses: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postresponsemanagementlibraries": {
    "operationId": "postresponsemanagementlibraries",
    "functionName": "PostResponsemanagementLibraries",
    "signature": "PostResponsemanagementLibraries(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostResponsemanagementLibrariesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var body = new Library(); // Library | Library\n\n            try\n            { \n                // Create a response library.\n                Library result = apiInstance.PostResponsemanagementLibraries(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PostResponsemanagementLibraries: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postresponsemanagementresponseassetssearch": {
    "operationId": "postresponsemanagementresponseassetssearch",
    "functionName": "PostResponsemanagementResponseassetsSearch",
    "signature": "PostResponsemanagementResponseassetsSearch(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseAssetSearchRequest",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ResponseAssetSearchResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostResponsemanagementResponseassetsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var body = new ResponseAssetSearchRequest(); // ResponseAssetSearchRequest | request\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Search response assets\n                ResponseAssetSearchResults result = apiInstance.PostResponsemanagementResponseassetsSearch(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PostResponsemanagementResponseassetsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postresponsemanagementresponseassetsuploads": {
    "operationId": "postresponsemanagementresponseassetsuploads",
    "functionName": "PostResponsemanagementResponseassetsUploads",
    "signature": "PostResponsemanagementResponseassetsUploads(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateResponseAssetRequest",
        "required": "true"
      }
    ],
    "return": "CreateResponseAssetResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostResponsemanagementResponseassetsUploadsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var body = new CreateResponseAssetRequest(); // CreateResponseAssetRequest | request\n\n            try\n            { \n                // Creates pre-signed url for uploading response asset\n                CreateResponseAssetResponse result = apiInstance.PostResponsemanagementResponseassetsUploads(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PostResponsemanagementResponseassetsUploads: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postresponsemanagementresponses": {
    "operationId": "postresponsemanagementresponses",
    "functionName": "PostResponsemanagementResponses",
    "signature": "PostResponsemanagementResponses(body, expand)",
    "parameters": [
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostResponsemanagementResponsesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var body = new Response(); // Response | Response\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Create a response.\n                Response result = apiInstance.PostResponsemanagementResponses(body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PostResponsemanagementResponses: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postresponsemanagementresponsesquery": {
    "operationId": "postresponsemanagementresponsesquery",
    "functionName": "PostResponsemanagementResponsesQuery",
    "signature": "PostResponsemanagementResponsesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ResponseQueryRequest",
        "required": "true"
      }
    ],
    "return": "ResponseQueryResults",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostResponsemanagementResponsesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var body = new ResponseQueryRequest(); // ResponseQueryRequest | Response\n\n            try\n            { \n                // Query responses\n                ResponseQueryResults result = apiInstance.PostResponsemanagementResponsesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PostResponsemanagementResponsesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putresponsemanagementlibrary": {
    "operationId": "putresponsemanagementlibrary",
    "functionName": "PutResponsemanagementLibrary",
    "signature": "PutResponsemanagementLibrary(libraryId, body)",
    "parameters": [
      {
        "name": "libraryId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Library",
        "required": "true"
      }
    ],
    "return": "Library",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutResponsemanagementLibraryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var libraryId = \"libraryId_example\";  // string | Library ID\n            var body = new Library(); // Library | Library\n\n            try\n            { \n                // Update an existing response library.\n                Library result = apiInstance.PutResponsemanagementLibrary(libraryId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PutResponsemanagementLibrary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putresponsemanagementresponse": {
    "operationId": "putresponsemanagementresponse",
    "functionName": "PutResponsemanagementResponse",
    "signature": "PutResponsemanagementResponse(responseId, body, expand)",
    "parameters": [
      {
        "name": "responseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Response",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Response",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutResponsemanagementResponseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseId = \"responseId_example\";  // string | Response ID\n            var body = new Response(); // Response | Response\n            var expand = \"expand_example\";  // string | Expand instructions for the return value. (optional) \n\n            try\n            { \n                // Update an existing response.\n                Response result = apiInstance.PutResponsemanagementResponse(responseId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PutResponsemanagementResponse: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putresponsemanagementresponseasset": {
    "operationId": "putresponsemanagementresponseasset",
    "functionName": "PutResponsemanagementResponseasset",
    "signature": "PutResponsemanagementResponseasset(responseAssetId, body)",
    "parameters": [
      {
        "name": "responseAssetId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ResponseAssetRequest",
        "required": "true"
      }
    ],
    "return": "ResponseAsset",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutResponsemanagementResponseassetExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ResponseManagementApi();\n            var responseAssetId = \"responseAssetId_example\";  // string | Asset Id\n            var body = new ResponseAssetRequest(); // ResponseAssetRequest | request\n\n            try\n            { \n                // Update response asset\n                ResponseAsset result = apiInstance.PutResponsemanagementResponseasset(responseAssetId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling ResponseManagement.PutResponsemanagementResponseasset: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingassessment": {
    "operationId": "deleteroutingassessment",
    "functionName": "DeleteRoutingAssessment",
    "signature": "DeleteRoutingAssessment(assessmentId)",
    "parameters": [
      {
        "name": "assessmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingAssessmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var assessmentId = \"assessmentId_example\";  // string | Benefit Assessment ID\n\n            try\n            { \n                // Delete single benefit assessment.\n                apiInstance.DeleteRoutingAssessment(assessmentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingAssessment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingemaildomain": {
    "operationId": "deleteroutingemaildomain",
    "functionName": "DeleteRoutingEmailDomain",
    "signature": "DeleteRoutingEmailDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingEmailDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Delete a domain\n                apiInstance.DeleteRoutingEmailDomain(domainId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingEmailDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingemaildomainroute": {
    "operationId": "deleteroutingemaildomainroute",
    "functionName": "DeleteRoutingEmailDomainRoute",
    "signature": "DeleteRoutingEmailDomainRoute(domainName, routeId)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingEmailDomainRouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainName = \"domainName_example\";  // string | email domain\n            var routeId = \"routeId_example\";  // string | route ID\n\n            try\n            { \n                // Delete a route\n                apiInstance.DeleteRoutingEmailDomainRoute(domainName, routeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingEmailDomainRoute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingemailoutbounddomain": {
    "operationId": "deleteroutingemailoutbounddomain",
    "functionName": "DeleteRoutingEmailOutboundDomain",
    "signature": "DeleteRoutingEmailOutboundDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingEmailOutboundDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Delete an outbound domain\n                apiInstance.DeleteRoutingEmailOutboundDomain(domainId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingEmailOutboundDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingpredictor": {
    "operationId": "deleteroutingpredictor",
    "functionName": "DeleteRoutingPredictor",
    "signature": "DeleteRoutingPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingPredictorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var predictorId = \"predictorId_example\";  // string | Predictor ID\n\n            try\n            { \n                // Delete single predictor.\n                apiInstance.DeleteRoutingPredictor(predictorId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingPredictor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingqueue": {
    "operationId": "deleteroutingqueue",
    "functionName": "DeleteRoutingQueue",
    "signature": "DeleteRoutingQueue(queueId, forceDelete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDelete",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingQueueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var forceDelete = true;  // bool? | forceDelete (optional) \n\n            try\n            { \n                // Delete a queue\n                apiInstance.DeleteRoutingQueue(queueId, forceDelete);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingQueue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingqueuemember": {
    "operationId": "deleteroutingqueuemember",
    "functionName": "DeleteRoutingQueueMember",
    "signature": "DeleteRoutingQueueMember(queueId, memberId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingQueueMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var memberId = \"memberId_example\";  // string | Member ID\n\n            try\n            { \n                // Delete a queue member.\n                apiInstance.DeleteRoutingQueueMember(queueId, memberId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingQueueMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingqueueuser": {
    "operationId": "deleteroutingqueueuser",
    "functionName": "DeleteRoutingQueueUser",
    "signature": "DeleteRoutingQueueUser(queueId, memberId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingQueueUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var memberId = \"memberId_example\";  // string | Member ID\n\n            try\n            { \n                // DEPRECATED: use DELETE /routing/queues/{queueId}/members/{memberId}.  Delete queue member.\n                apiInstance.DeleteRoutingQueueUser(queueId, memberId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingQueueUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingqueuewrapupcode": {
    "operationId": "deleteroutingqueuewrapupcode",
    "functionName": "DeleteRoutingQueueWrapupcode",
    "signature": "DeleteRoutingQueueWrapupcode(queueId, codeId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingQueueWrapupcodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var codeId = \"codeId_example\";  // string | Code ID\n\n            try\n            { \n                // Delete a wrap-up code from a queue\n                apiInstance.DeleteRoutingQueueWrapupcode(queueId, codeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingQueueWrapupcode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingsettings": {
    "operationId": "deleteroutingsettings",
    "functionName": "DeleteRoutingSettings",
    "signature": "DeleteRoutingSettings()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Delete an organization's routing settings\n                apiInstance.DeleteRoutingSettings();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingskill": {
    "operationId": "deleteroutingskill",
    "functionName": "DeleteRoutingSkill",
    "signature": "DeleteRoutingSkill(skillId)",
    "parameters": [
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingSkillExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var skillId = \"skillId_example\";  // string | Skill ID\n\n            try\n            { \n                // Delete Routing Skill\n                apiInstance.DeleteRoutingSkill(skillId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingSkill: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingsmsaddress": {
    "operationId": "deleteroutingsmsaddress",
    "functionName": "DeleteRoutingSmsAddress",
    "signature": "DeleteRoutingSmsAddress(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingSmsAddressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var addressId = \"addressId_example\";  // string | Address ID\n\n            try\n            { \n                // Delete an Address by Id for SMS\n                apiInstance.DeleteRoutingSmsAddress(addressId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingSmsAddress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingsmsphonenumber": {
    "operationId": "deleteroutingsmsphonenumber",
    "functionName": "DeleteRoutingSmsPhonenumber",
    "signature": "DeleteRoutingSmsPhonenumber(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingSmsPhonenumberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var addressId = \"addressId_example\";  // string | Address ID\n\n            try\n            { \n                // Delete a phone number provisioned for SMS.\n                apiInstance.DeleteRoutingSmsPhonenumber(addressId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingSmsPhonenumber: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutinguserutilization": {
    "operationId": "deleteroutinguserutilization",
    "functionName": "DeleteRoutingUserUtilization",
    "signature": "DeleteRoutingUserUtilization(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingUserUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Delete the user's max utilization settings and revert to the organization-wide default.\n                apiInstance.DeleteRoutingUserUtilization(userId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteRoutingUserUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingutilization": {
    "operationId": "deleteroutingutilization",
    "functionName": "DeleteRoutingUtilization",
    "signature": "DeleteRoutingUtilization()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Delete the organization-wide max utilization settings and revert to the system default.\n                apiInstance.DeleteRoutingUtilization();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteroutingwrapupcode": {
    "operationId": "deleteroutingwrapupcode",
    "functionName": "DeleteRoutingWrapupcode",
    "signature": "DeleteRoutingWrapupcode(codeId)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteRoutingWrapupcodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var codeId = \"codeId_example\";  // string | Wrapup Code ID\n\n            try\n            { \n                // Delete wrap-up code\n                apiInstance.DeleteRoutingWrapupcode(codeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.DeleteRoutingWrapupcode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuserroutinglanguage": {
    "operationId": "deleteuserroutinglanguage",
    "functionName": "DeleteUserRoutinglanguage",
    "signature": "DeleteUserRoutinglanguage(userId, languageId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserRoutinglanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var languageId = \"languageId_example\";  // string | languageId\n\n            try\n            { \n                // Remove routing language from user\n                apiInstance.DeleteUserRoutinglanguage(userId, languageId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteUserRoutinglanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuserroutingskill": {
    "operationId": "deleteuserroutingskill",
    "functionName": "DeleteUserRoutingskill",
    "signature": "DeleteUserRoutingskill(userId, skillId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserRoutingskillExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var skillId = \"skillId_example\";  // string | skillId\n\n            try\n            { \n                // Remove routing skill from user\n                apiInstance.DeleteUserRoutingskill(userId, skillId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteUserRoutingskill: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingassessment": {
    "operationId": "getroutingassessment",
    "functionName": "GetRoutingAssessment",
    "signature": "GetRoutingAssessment(assessmentId)",
    "parameters": [
      {
        "name": "assessmentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BenefitAssessment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingAssessmentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var assessmentId = \"assessmentId_example\";  // string | Benefit Assessment ID\n\n            try\n            { \n                // Retrieve a single benefit assessment.\n                BenefitAssessment result = apiInstance.GetRoutingAssessment(assessmentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingAssessment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingassessments": {
    "operationId": "getroutingassessments",
    "functionName": "GetRoutingAssessments",
    "signature": "GetRoutingAssessments(before, after, limit, pageSize, queueId)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AssessmentListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingAssessmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var queueId = new List<string>(); // List<string> | Queue ID(s) to filter assessments by. (optional) \n\n            try\n            { \n                // Retrieve all benefit assessments.\n                AssessmentListing result = apiInstance.GetRoutingAssessments(before, after, limit, pageSize, queueId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingAssessments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingassessmentsjob": {
    "operationId": "getroutingassessmentsjob",
    "functionName": "GetRoutingAssessmentsJob",
    "signature": "GetRoutingAssessmentsJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BenefitAssessmentJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingAssessmentsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var jobId = \"jobId_example\";  // string | Benefit Assessment Job ID\n\n            try\n            { \n                // Retrieve a single benefit assessments job.\n                BenefitAssessmentJob result = apiInstance.GetRoutingAssessmentsJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingAssessmentsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingassessmentsjobs": {
    "operationId": "getroutingassessmentsjobs",
    "functionName": "GetRoutingAssessmentsJobs",
    "signature": "GetRoutingAssessmentsJobs(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "AssessmentJobListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingAssessmentsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var divisionId = new List<string>(); // List<string> | Division ID(s) to filter assessment jobs by. (optional) \n\n            try\n            { \n                // Retrieve all benefit assessment jobs.\n                AssessmentJobListing result = apiInstance.GetRoutingAssessmentsJobs(divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingAssessmentsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingavailablemediatypes": {
    "operationId": "getroutingavailablemediatypes",
    "functionName": "GetRoutingAvailablemediatypes",
    "signature": "GetRoutingAvailablemediatypes()",
    "return": "AvailableMediaTypeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingAvailablemediatypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get available media types\n                AvailableMediaTypeEntityListing result = apiInstance.GetRoutingAvailablemediatypes();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingAvailablemediatypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemaildomain": {
    "operationId": "getroutingemaildomain",
    "functionName": "GetRoutingEmailDomain",
    "signature": "GetRoutingEmailDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Get domain\n                InboundDomain result = apiInstance.GetRoutingEmailDomain(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemaildomainroute": {
    "operationId": "getroutingemaildomainroute",
    "functionName": "GetRoutingEmailDomainRoute",
    "signature": "GetRoutingEmailDomainRoute(domainName, routeId)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailDomainRouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainName = \"domainName_example\";  // string | email domain\n            var routeId = \"routeId_example\";  // string | route ID\n\n            try\n            { \n                // Get a route\n                InboundRoute result = apiInstance.GetRoutingEmailDomainRoute(domainName, routeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailDomainRoute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemaildomainroutes": {
    "operationId": "getroutingemaildomainroutes",
    "functionName": "GetRoutingEmailDomainRoutes",
    "signature": "GetRoutingEmailDomainRoutes(domainName, pageSize, pageNumber, pattern)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "InboundRouteEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailDomainRoutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainName = \"domainName_example\";  // string | email domain\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pattern = \"pattern_example\";  // string | Filter routes by the route's pattern property (optional) \n\n            try\n            { \n                // Get routes\n                InboundRouteEntityListing result = apiInstance.GetRoutingEmailDomainRoutes(domainName, pageSize, pageNumber, pattern);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailDomainRoutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemaildomains": {
    "operationId": "getroutingemaildomains",
    "functionName": "GetRoutingEmailDomains",
    "signature": "GetRoutingEmailDomains(excludeStatus)",
    "parameters": [
      {
        "name": "excludeStatus",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "InboundDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var excludeStatus = true;  // bool? | Exclude MX record data (optional)  (default to false)\n\n            try\n            { \n                // Get domains\n                InboundDomainEntityListing result = apiInstance.GetRoutingEmailDomains(excludeStatus);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemailoutbounddomain": {
    "operationId": "getroutingemailoutbounddomain",
    "functionName": "GetRoutingEmailOutboundDomain",
    "signature": "GetRoutingEmailOutboundDomain(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailOutboundDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Get domain\n                OutboundDomain result = apiInstance.GetRoutingEmailOutboundDomain(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailOutboundDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemailoutbounddomainactivation": {
    "operationId": "getroutingemailoutbounddomainactivation",
    "functionName": "GetRoutingEmailOutboundDomainActivation",
    "signature": "GetRoutingEmailOutboundDomainActivation(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailOutboundDomainActivationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Get activation status (cname + dkim) of an outbound domain\n                EmailOutboundDomainResult result = apiInstance.GetRoutingEmailOutboundDomainActivation(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailOutboundDomainActivation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemailoutbounddomainsearch": {
    "operationId": "getroutingemailoutbounddomainsearch",
    "functionName": "GetRoutingEmailOutboundDomainSearch",
    "signature": "GetRoutingEmailOutboundDomainSearch(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailOutboundDomainSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Search a domain across organizations\n                OutboundDomain result = apiInstance.GetRoutingEmailOutboundDomainSearch(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailOutboundDomainSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemailoutbounddomains": {
    "operationId": "getroutingemailoutbounddomains",
    "functionName": "GetRoutingEmailOutboundDomains",
    "signature": "GetRoutingEmailOutboundDomains()",
    "return": "OutboundDomainEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailOutboundDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get outbound domains\n                OutboundDomainEntityListing result = apiInstance.GetRoutingEmailOutboundDomains();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailOutboundDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingemailsetup": {
    "operationId": "getroutingemailsetup",
    "functionName": "GetRoutingEmailSetup",
    "signature": "GetRoutingEmailSetup()",
    "return": "EmailSetup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingEmailSetupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get email setup\n                EmailSetup result = apiInstance.GetRoutingEmailSetup();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingEmailSetup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutinglanguages": {
    "operationId": "getroutinglanguages",
    "functionName": "GetRoutingLanguages",
    "signature": "GetRoutingLanguages(pageSize, pageNumber, sortOrder, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LanguageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingLanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n\n            try\n            { \n                // Get the list of supported languages.\n                LanguageEntityListing result = apiInstance.GetRoutingLanguages(pageSize, pageNumber, sortOrder, name, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingLanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingmessagerecipient": {
    "operationId": "getroutingmessagerecipient",
    "functionName": "GetRoutingMessageRecipient",
    "signature": "GetRoutingMessageRecipient(recipientId)",
    "parameters": [
      {
        "name": "recipientId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingMessageRecipientExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var recipientId = \"recipientId_example\";  // string | Recipient ID\n\n            try\n            { \n                // Get a recipient\n                Recipient result = apiInstance.GetRoutingMessageRecipient(recipientId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingMessageRecipient: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingmessagerecipients": {
    "operationId": "getroutingmessagerecipients",
    "functionName": "GetRoutingMessageRecipients",
    "signature": "GetRoutingMessageRecipients(messengerType, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "messengerType",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "RecipientListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingMessageRecipientsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var messengerType = \"messengerType_example\";  // string | Messenger Type (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get recipients\n                RecipientListing result = apiInstance.GetRoutingMessageRecipients(messengerType, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingMessageRecipients: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingpredictor": {
    "operationId": "getroutingpredictor",
    "functionName": "GetRoutingPredictor",
    "signature": "GetRoutingPredictor(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Predictor",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingPredictorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var predictorId = \"predictorId_example\";  // string | Predictor ID\n\n            try\n            { \n                // Retrieve a single predictor.\n                Predictor result = apiInstance.GetRoutingPredictor(predictorId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingPredictor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingpredictormodelfeatures": {
    "operationId": "getroutingpredictormodelfeatures",
    "functionName": "GetRoutingPredictorModelFeatures",
    "signature": "GetRoutingPredictorModelFeatures(predictorId, modelId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "modelId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PredictorModelFeatureListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingPredictorModelFeaturesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var predictorId = \"predictorId_example\";  // string | Predictor ID\n            var modelId = \"modelId_example\";  // string | Model ID\n\n            try\n            { \n                // Retrieve Predictor Model Features.\n                PredictorModelFeatureListing result = apiInstance.GetRoutingPredictorModelFeatures(predictorId, modelId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingPredictorModelFeatures: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingpredictormodels": {
    "operationId": "getroutingpredictormodels",
    "functionName": "GetRoutingPredictorModels",
    "signature": "GetRoutingPredictorModels(predictorId)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PredictorModels",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingPredictorModelsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var predictorId = \"predictorId_example\";  // string | Predictor ID\n\n            try\n            { \n                // Retrieve Predictor Models and Top Features.\n                PredictorModels result = apiInstance.GetRoutingPredictorModels(predictorId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingPredictorModels: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingpredictors": {
    "operationId": "getroutingpredictors",
    "functionName": "GetRoutingPredictors",
    "signature": "GetRoutingPredictors(before, after, limit, pageSize, queueId)",
    "parameters": [
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "limit",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "string",
        "required": "false"
      },
      {
        "name": "queueId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "PredictorListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingPredictorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var before = \"before_example\";  // string | The cursor that points to the start of the set of entities that has been returned. (optional) \n            var after = \"after_example\";  // string | The cursor that points to the end of the set of entities that has been returned. (optional) \n            var limit = \"limit_example\";  // string | Number of entities to return. Maximum of 200. Deprecated in favour of pageSize (optional) \n            var pageSize = \"pageSize_example\";  // string | Number of entities to return. Maximum of 200. (optional) \n            var queueId = new List<string>(); // List<string> | Comma-separated list of queue Ids to filter by. (optional) \n\n            try\n            { \n                // Retrieve all predictors.\n                PredictorListing result = apiInstance.GetRoutingPredictors(before, after, limit, pageSize, queueId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingPredictors: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingpredictorskeyperformanceindicators": {
    "operationId": "getroutingpredictorskeyperformanceindicators",
    "functionName": "GetRoutingPredictorsKeyperformanceindicators",
    "signature": "GetRoutingPredictorsKeyperformanceindicators(kpiGroup)",
    "parameters": [
      {
        "name": "kpiGroup",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "List<KeyPerformanceIndicator>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingPredictorsKeyperformanceindicatorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var kpiGroup = \"kpiGroup_example\";  // string | The Group of Key Performance Indicators to return (optional) \n\n            try\n            { \n                // Get a list of Key Performance Indicators\n                List<KeyPerformanceIndicator> result = apiInstance.GetRoutingPredictorsKeyperformanceindicators(kpiGroup);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingPredictorsKeyperformanceindicators: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueue": {
    "operationId": "getroutingqueue",
    "functionName": "GetRoutingQueue",
    "signature": "GetRoutingQueue(queueId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n\n            try\n            { \n                // Get details about this queue.\n                Queue result = apiInstance.GetRoutingQueue(queueId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuecomparisonperiod": {
    "operationId": "getroutingqueuecomparisonperiod",
    "functionName": "GetRoutingQueueComparisonperiod",
    "signature": "GetRoutingQueueComparisonperiod(queueId, comparisonPeriodId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "comparisonPeriodId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ComparisonPeriod",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueComparisonperiodExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue id\n            var comparisonPeriodId = \"comparisonPeriodId_example\";  // string | ComparisonPeriod id\n\n            try\n            { \n                // Get a Comparison Period.\n                ComparisonPeriod result = apiInstance.GetRoutingQueueComparisonperiod(queueId, comparisonPeriodId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueComparisonperiod: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuecomparisonperiods": {
    "operationId": "getroutingqueuecomparisonperiods",
    "functionName": "GetRoutingQueueComparisonperiods",
    "signature": "GetRoutingQueueComparisonperiods(queueId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ComparisonPeriodListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueComparisonperiodsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue id\n\n            try\n            { \n                // Get list of comparison periods\n                ComparisonPeriodListing result = apiInstance.GetRoutingQueueComparisonperiods(queueId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueComparisonperiods: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueueestimatedwaittime": {
    "operationId": "getroutingqueueestimatedwaittime",
    "functionName": "GetRoutingQueueEstimatedwaittime",
    "signature": "GetRoutingQueueEstimatedwaittime(queueId, conversationId)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "EstimatedWaitTimePredictions",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueEstimatedwaittimeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | queueId\n            var conversationId = \"conversationId_example\";  // string | conversationId (optional) \n\n            try\n            { \n                // Get Estimated Wait Time\n                EstimatedWaitTimePredictions result = apiInstance.GetRoutingQueueEstimatedwaittime(queueId, conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueEstimatedwaittime: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuemediatypeestimatedwaittime": {
    "operationId": "getroutingqueuemediatypeestimatedwaittime",
    "functionName": "GetRoutingQueueMediatypeEstimatedwaittime",
    "signature": "GetRoutingQueueMediatypeEstimatedwaittime(queueId, mediaType)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EstimatedWaitTimePredictions",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueMediatypeEstimatedwaittimeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | queueId\n            var mediaType = \"mediaType_example\";  // string | mediaType\n\n            try\n            { \n                // Get Estimated Wait Time\n                EstimatedWaitTimePredictions result = apiInstance.GetRoutingQueueMediatypeEstimatedwaittime(queueId, mediaType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueMediatypeEstimatedwaittime: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuemembers": {
    "operationId": "getroutingqueuemembers",
    "functionName": "GetRoutingQueueMembers",
    "signature": "GetRoutingQueueMembers(queueId, pageNumber, pageSize, sortOrder, expand, name, profileSkills, skills, languages, routingStatus, presence, memberBy, joined)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "profileSkills",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "routingStatus",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "memberBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "QueueMemberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var pageNumber = 56;  // int? |  (optional)  (default to 1)\n            var pageSize = 56;  // int? | Max value is 100 (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Note: results are sorted by name. (optional)  (default to asc)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var name = \"name_example\";  // string | Filter by queue member name (optional) \n            var profileSkills = new List<string>(); // List<string> | Filter by profile skill (optional) \n            var skills = new List<string>(); // List<string> | Filter by skill (optional) \n            var languages = new List<string>(); // List<string> | Filter by language (optional) \n            var routingStatus = new List<string>(); // List<string> | Filter by routing status (optional) \n            var presence = new List<string>(); // List<string> | Filter by presence (optional) \n            var memberBy = \"memberBy_example\";  // string | Filter by member type (optional) \n            var joined = \"joined_example\";  // bool? | Filter by joined status (optional) \n\n            try\n            { \n                // Get the members of this queue.\n                QueueMemberEntityListing result = apiInstance.GetRoutingQueueMembers(queueId, pageNumber, pageSize, sortOrder, expand, name, profileSkills, skills, languages, routingStatus, presence, memberBy, joined);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueueusers": {
    "operationId": "getroutingqueueusers",
    "functionName": "GetRoutingQueueUsers",
    "signature": "GetRoutingQueueUsers(queueId, pageNumber, pageSize, sortOrder, expand, joined, name, profileSkills, skills, languages, routingStatus, presence)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "profileSkills",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "skills",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "languages",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "routingStatus",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "presence",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "QueueMemberEntityListingV1",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var pageNumber = 56;  // int? |  (optional)  (default to 1)\n            var pageSize = 56;  // int? | Max value is 100 (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Note: results are sorted by name. (optional)  (default to asc)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var joined = true;  // bool? | Filter by joined status (optional) \n            var name = \"name_example\";  // string | Filter by queue member name (optional) \n            var profileSkills = new List<string>(); // List<string> | Filter by profile skill (optional) \n            var skills = new List<string>(); // List<string> | Filter by skill (optional) \n            var languages = new List<string>(); // List<string> | Filter by language (optional) \n            var routingStatus = new List<string>(); // List<string> | Filter by routing status (optional) \n            var presence = new List<string>(); // List<string> | Filter by presence (optional) \n\n            try\n            { \n                // DEPRECATED: use GET /routing/queues/{queueId}/members.  Get the members of this queue.\n                QueueMemberEntityListingV1 result = apiInstance.GetRoutingQueueUsers(queueId, pageNumber, pageSize, sortOrder, expand, joined, name, profileSkills, skills, languages, routingStatus, presence);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuewrapupcodes": {
    "operationId": "getroutingqueuewrapupcodes",
    "functionName": "GetRoutingQueueWrapupcodes",
    "signature": "GetRoutingQueueWrapupcodes(queueId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "WrapupCodeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueueWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get the wrap-up codes for a queue\n                WrapupCodeEntityListing result = apiInstance.GetRoutingQueueWrapupcodes(queueId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueueWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueues": {
    "operationId": "getroutingqueues",
    "functionName": "GetRoutingQueues",
    "signature": "GetRoutingQueues(pageNumber, pageSize, sortOrder, name, id, divisionId, peerId, hasPeer)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "peerId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "hasPeer",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueuesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortOrder = \"sortOrder_example\";  // string | Note: results are sorted by name. (optional)  (default to asc)\n            var name = \"name_example\";  // string | Filter by queue name (optional) \n            var id = new List<string>(); // List<string> | Filter by queue ID(s) (optional) \n            var divisionId = new List<string>(); // List<string> | Filter by queue division ID(s) (optional) \n            var peerId = new List<string>(); // List<string> | Filter by queue peer ID(s) (optional) \n            var hasPeer = true;  // bool? | Filter by queues associated with peer (optional) \n\n            try\n            { \n                // Get list of queues.\n                QueueEntityListing result = apiInstance.GetRoutingQueues(pageNumber, pageSize, sortOrder, name, id, divisionId, peerId, hasPeer);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuesdivisionviews": {
    "operationId": "getroutingqueuesdivisionviews",
    "functionName": "GetRoutingQueuesDivisionviews",
    "signature": "GetRoutingQueuesDivisionviews(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueuesDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size [max value is 100] (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number [max value is 5] (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to name)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to asc)\n            var name = \"name_example\";  // string | Name (optional) \n            var id = new List<string>(); // List<string> | Queue ID(s) (optional) \n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n\n            try\n            { \n                // Get a paged listing of simplified queue objects, filterable by name, queue ID(s), or division ID(s).\n                QueueEntityListing result = apiInstance.GetRoutingQueuesDivisionviews(pageSize, pageNumber, sortBy, sortOrder, name, id, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueuesDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuesdivisionviewsall": {
    "operationId": "getroutingqueuesdivisionviewsall",
    "functionName": "GetRoutingQueuesDivisionviewsAll",
    "signature": "GetRoutingQueuesDivisionviewsAll(pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "QueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueuesDivisionviewsAllExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size [max value is 500] (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to asc)\n\n            try\n            { \n                // Get a paged listing of simplified queue objects, sorted by name.  Can be used to get a digest of all queues in an organization.\n                QueueEntityListing result = apiInstance.GetRoutingQueuesDivisionviewsAll(pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueuesDivisionviewsAll: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingqueuesme": {
    "operationId": "getroutingqueuesme",
    "functionName": "GetRoutingQueuesMe",
    "signature": "GetRoutingQueuesMe(pageNumber, pageSize, joined, sortOrder)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingQueuesMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var joined = \"joined_example\";  // bool? | Filter by joined status. (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Note: results are sorted by name. (optional)  (default to asc)\n\n            try\n            { \n                // Get a paged listing of queues the user is a member of.\n                UserQueueEntityListing result = apiInstance.GetRoutingQueuesMe(pageNumber, pageSize, joined, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingQueuesMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsettings": {
    "operationId": "getroutingsettings",
    "functionName": "GetRoutingSettings",
    "signature": "GetRoutingSettings()",
    "return": "RoutingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get an organization's routing settings\n                RoutingSettings result = apiInstance.GetRoutingSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsettingscontactcenter": {
    "operationId": "getroutingsettingscontactcenter",
    "functionName": "GetRoutingSettingsContactcenter",
    "signature": "GetRoutingSettingsContactcenter()",
    "return": "ContactCenterSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSettingsContactcenterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get Contact Center Settings\n                ContactCenterSettings result = apiInstance.GetRoutingSettingsContactcenter();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSettingsContactcenter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsettingstranscription": {
    "operationId": "getroutingsettingstranscription",
    "functionName": "GetRoutingSettingsTranscription",
    "signature": "GetRoutingSettingsTranscription()",
    "return": "TranscriptionSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSettingsTranscriptionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get Transcription Settings\n                TranscriptionSettings result = apiInstance.GetRoutingSettingsTranscription();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSettingsTranscription: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingskill": {
    "operationId": "getroutingskill",
    "functionName": "GetRoutingSkill",
    "signature": "GetRoutingSkill(skillId)",
    "parameters": [
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RoutingSkill",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSkillExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var skillId = \"skillId_example\";  // string | Skill ID\n\n            try\n            { \n                // Get Routing Skill\n                RoutingSkill result = apiInstance.GetRoutingSkill(skillId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSkill: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingskills": {
    "operationId": "getroutingskills",
    "functionName": "GetRoutingSkills",
    "signature": "GetRoutingSkills(pageSize, pageNumber, name, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "SkillEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSkillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Filter for results that start with this value (optional) \n            var id = new List<string>(); // List<string> | id (optional) \n\n            try\n            { \n                // Get the list of routing skills.\n                SkillEntityListing result = apiInstance.GetRoutingSkills(pageSize, pageNumber, name, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSkills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsmsaddress": {
    "operationId": "getroutingsmsaddress",
    "functionName": "GetRoutingSmsAddress",
    "signature": "GetRoutingSmsAddress(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SmsAddress",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSmsAddressExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var addressId = \"addressId_example\";  // string | Address ID\n\n            try\n            { \n                // Get an Address by Id for SMS\n                SmsAddress result = apiInstance.GetRoutingSmsAddress(addressId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSmsAddress: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsmsaddresses": {
    "operationId": "getroutingsmsaddresses",
    "functionName": "GetRoutingSmsAddresses",
    "signature": "GetRoutingSmsAddresses(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SmsAddressEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSmsAddressesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of Addresses for SMS\n                SmsAddressEntityListing result = apiInstance.GetRoutingSmsAddresses(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSmsAddresses: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsmsavailablephonenumbers": {
    "operationId": "getroutingsmsavailablephonenumbers",
    "functionName": "GetRoutingSmsAvailablephonenumbers",
    "signature": "GetRoutingSmsAvailablephonenumbers(countryCode, phoneNumberType, region, city, areaCode, pattern, addressRequirement)",
    "parameters": [
      {
        "name": "countryCode",
        "type": "string",
        "required": "true"
      },
      {
        "name": "phoneNumberType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "region",
        "type": "string",
        "required": "false"
      },
      {
        "name": "city",
        "type": "string",
        "required": "false"
      },
      {
        "name": "areaCode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pattern",
        "type": "string",
        "required": "false"
      },
      {
        "name": "addressRequirement",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SMSAvailablePhoneNumberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSmsAvailablephonenumbersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var countryCode = \"countryCode_example\";  // string | The ISO 3166-1 alpha-2 country code of the county for which available phone numbers should be returned\n            var phoneNumberType = \"phoneNumberType_example\";  // string | Type of available phone numbers searched\n            var region = \"region_example\";  // string | Region/province/state that can be used to restrict the numbers returned (optional) \n            var city = \"city_example\";  // string | City that can be used to restrict the numbers returned (optional) \n            var areaCode = \"areaCode_example\";  // string | Area code that can be used to restrict the numbers returned (optional) \n            var pattern = \"pattern_example\";  // string | A pattern to match phone numbers. Valid characters are '*' and [0-9a-zA-Z]. The '*' character will match any single digit. (optional) \n            var addressRequirement = \"addressRequirement_example\";  // string | This indicates whether the phone number requires to have an Address registered. (optional) \n\n            try\n            { \n                // Get a list of available phone numbers for SMS provisioning.\n                SMSAvailablePhoneNumberEntityListing result = apiInstance.GetRoutingSmsAvailablephonenumbers(countryCode, phoneNumberType, region, city, areaCode, pattern, addressRequirement);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSmsAvailablephonenumbers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsmsphonenumber": {
    "operationId": "getroutingsmsphonenumber",
    "functionName": "GetRoutingSmsPhonenumber",
    "signature": "GetRoutingSmsPhonenumber(addressId)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSmsPhonenumberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var addressId = \"addressId_example\";  // string | Address ID\n\n            try\n            { \n                // Get a phone number provisioned for SMS.\n                SmsPhoneNumber result = apiInstance.GetRoutingSmsPhonenumber(addressId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSmsPhonenumber: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingsmsphonenumbers": {
    "operationId": "getroutingsmsphonenumbers",
    "functionName": "GetRoutingSmsPhonenumbers",
    "signature": "GetRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language)",
    "parameters": [
      {
        "name": "phoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneNumberType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "phoneNumberStatus",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "countryCode",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SmsPhoneNumberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingSmsPhonenumbersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var phoneNumber = \"phoneNumber_example\";  // string | Filter on phone number address. Allowable characters are the digits '0-9' and the wild card character '\\\\*'. If just digits are present, a contains search is done on the address pattern. For example, '317' could be matched anywhere in the address. An '\\\\*' will match multiple digits. For example, to match a specific area code within the US a pattern like '1317*' could be used. (optional) \n            var phoneNumberType = new List<string>(); // List<string> | Filter on phone number type (optional) \n            var phoneNumberStatus = new List<string>(); // List<string> | Filter on phone number status (optional) \n            var countryCode = new List<string>(); // List<string> | Filter on country code (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Optional field to sort results (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional) \n            var language = \"en-US\";  // string | A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize country field and sort operations (optional)  (default to \"en-US\")\n\n            try\n            { \n                // Get a list of provisioned phone numbers.\n                SmsPhoneNumberEntityListing result = apiInstance.GetRoutingSmsPhonenumbers(phoneNumber, phoneNumberType, phoneNumberStatus, countryCode, pageSize, pageNumber, sortBy, sortOrder, language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingSmsPhonenumbers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutinguserutilization": {
    "operationId": "getroutinguserutilization",
    "functionName": "GetRoutingUserUtilization",
    "signature": "GetRoutingUserUtilization(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AgentMaxUtilization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingUserUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get the user's max utilization settings.  If not configured, the organization-wide default is returned.\n                AgentMaxUtilization result = apiInstance.GetRoutingUserUtilization(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetRoutingUserUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingutilization": {
    "operationId": "getroutingutilization",
    "functionName": "GetRoutingUtilization",
    "signature": "GetRoutingUtilization()",
    "return": "Utilization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n\n            try\n            { \n                // Get the organization-wide max utilization settings.\n                Utilization result = apiInstance.GetRoutingUtilization();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingwrapupcode": {
    "operationId": "getroutingwrapupcode",
    "functionName": "GetRoutingWrapupcode",
    "signature": "GetRoutingWrapupcode(codeId)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingWrapupcodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var codeId = \"codeId_example\";  // string | Wrapup Code ID\n\n            try\n            { \n                // Get details about this wrap-up code.\n                WrapupCode result = apiInstance.GetRoutingWrapupcode(codeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingWrapupcode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getroutingwrapupcodes": {
    "operationId": "getroutingwrapupcodes",
    "functionName": "GetRoutingWrapupcodes",
    "signature": "GetRoutingWrapupcodes(pageSize, pageNumber, sortBy, sortOrder, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WrapupCodeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetRoutingWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to name)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to ascending)\n            var name = \"name_example\";  // string | Wrapup code's name ('Sort by' param is ignored unless this field is provided) (optional) \n\n            try\n            { \n                // Get list of wrapup codes.\n                WrapupCodeEntityListing result = apiInstance.GetRoutingWrapupcodes(pageSize, pageNumber, sortBy, sortOrder, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.GetRoutingWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserqueues": {
    "operationId": "getuserqueues",
    "functionName": "GetUserQueues",
    "signature": "GetUserQueues(userId, pageSize, pageNumber, joined, divisionId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "joined",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserQueuesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var joined = true;  // bool? | Is joined to the queue (optional)  (default to true)\n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n\n            try\n            { \n                // Get queues for user\n                UserQueueEntityListing result = apiInstance.GetUserQueues(userId, pageSize, pageNumber, joined, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserQueues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserroutinglanguages": {
    "operationId": "getuserroutinglanguages",
    "functionName": "GetUserRoutinglanguages",
    "signature": "GetUserRoutinglanguages(userId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserLanguageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserRoutinglanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n\n            try\n            { \n                // List routing language for user\n                UserLanguageEntityListing result = apiInstance.GetUserRoutinglanguages(userId, pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserRoutinglanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserroutingskills": {
    "operationId": "getuserroutingskills",
    "functionName": "GetUserRoutingskills",
    "signature": "GetUserRoutingskills(userId, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserRoutingskillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n\n            try\n            { \n                // List routing skills for user\n                UserSkillEntityListing result = apiInstance.GetUserRoutingskills(userId, pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserRoutingskills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingconversation": {
    "operationId": "patchroutingconversation",
    "functionName": "PatchRoutingConversation",
    "signature": "PatchRoutingConversation(conversationId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoutingConversationAttributesRequest",
        "required": "true"
      }
    ],
    "return": "RoutingConversationAttributesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingConversationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var body = new RoutingConversationAttributesRequest(); // RoutingConversationAttributesRequest | Conversation Attributes\n\n            try\n            { \n                // Update attributes of an in-queue conversation\n                RoutingConversationAttributesResponse result = apiInstance.PatchRoutingConversation(conversationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingConversation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingemaildomain": {
    "operationId": "patchroutingemaildomain",
    "functionName": "PatchRoutingEmailDomain",
    "signature": "PatchRoutingEmailDomain(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundDomainPatchRequest",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingEmailDomainExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n            var body = new InboundDomainPatchRequest(); // InboundDomainPatchRequest | Domain settings\n\n            try\n            { \n                // Update domain settings\n                InboundDomain result = apiInstance.PatchRoutingEmailDomain(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingEmailDomain: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingemaildomainvalidate": {
    "operationId": "patchroutingemaildomainvalidate",
    "functionName": "PatchRoutingEmailDomainValidate",
    "signature": "PatchRoutingEmailDomainValidate(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundDomainPatchRequest",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingEmailDomainValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n            var body = new InboundDomainPatchRequest(); // InboundDomainPatchRequest | Domain settings\n\n            try\n            { \n                // Validate domain settings\n                InboundDomain result = apiInstance.PatchRoutingEmailDomainValidate(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingEmailDomainValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingpredictor": {
    "operationId": "patchroutingpredictor",
    "functionName": "PatchRoutingPredictor",
    "signature": "PatchRoutingPredictor(predictorId, body)",
    "parameters": [
      {
        "name": "predictorId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchPredictorRequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingPredictorExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var predictorId = \"predictorId_example\";  // string | Predictor ID\n            var body = new PatchPredictorRequest(); // PatchPredictorRequest |  (optional) \n\n            try\n            { \n                // Update single predictor.\n                Predictor result = apiInstance.PatchRoutingPredictor(predictorId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingPredictor: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingqueuemember": {
    "operationId": "patchroutingqueuemember",
    "functionName": "PatchRoutingQueueMember",
    "signature": "PatchRoutingQueueMember(queueId, memberId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueMember",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingQueueMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var memberId = \"memberId_example\";  // string | Member ID\n            var body = new QueueMember(); // QueueMember | Queue Member\n\n            try\n            { \n                // Update the ring number OR joined status for a queue member.\n                apiInstance.PatchRoutingQueueMember(queueId, memberId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingQueueMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingqueuemembers": {
    "operationId": "patchroutingqueuemembers",
    "functionName": "PatchRoutingQueueMembers",
    "signature": "PatchRoutingQueueMembers(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<QueueMember>",
        "required": "true"
      }
    ],
    "return": "QueueMemberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingQueueMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new List<QueueMember>(); // List<QueueMember> | Queue Members\n\n            try\n            { \n                // Join or unjoin a set of users for a queue\n                QueueMemberEntityListing result = apiInstance.PatchRoutingQueueMembers(queueId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingQueueMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingqueueuser": {
    "operationId": "patchroutingqueueuser",
    "functionName": "PatchRoutingQueueUser",
    "signature": "PatchRoutingQueueUser(queueId, memberId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueMember",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingQueueUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var memberId = \"memberId_example\";  // string | Member ID\n            var body = new QueueMember(); // QueueMember | Queue Member\n\n            try\n            { \n                // DEPRECATED: use PATCH /routing/queues/{queueId}/members/{memberId}.  Update the ring number OR joined status for a User in a Queue.\n                apiInstance.PatchRoutingQueueUser(queueId, memberId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingQueueUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingqueueusers": {
    "operationId": "patchroutingqueueusers",
    "functionName": "PatchRoutingQueueUsers",
    "signature": "PatchRoutingQueueUsers(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<QueueMember>",
        "required": "true"
      }
    ],
    "return": "QueueMemberEntityListingV1",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingQueueUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new List<QueueMember>(); // List<QueueMember> | Queue Members\n\n            try\n            { \n                // DEPRECATED: use PATCH /routing/queues/{queueId}/members.  Join or unjoin a set of users for a queue.\n                QueueMemberEntityListingV1 result = apiInstance.PatchRoutingQueueUsers(queueId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingQueueUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchroutingsettingscontactcenter": {
    "operationId": "patchroutingsettingscontactcenter",
    "functionName": "PatchRoutingSettingsContactcenter",
    "signature": "PatchRoutingSettingsContactcenter(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ContactCenterSettings",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchRoutingSettingsContactcenterExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new ContactCenterSettings(); // ContactCenterSettings | Contact Center Settings\n\n            try\n            { \n                // Update Contact Center Settings\n                apiInstance.PatchRoutingSettingsContactcenter(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PatchRoutingSettingsContactcenter: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserqueue": {
    "operationId": "patchuserqueue",
    "functionName": "PatchUserQueue",
    "signature": "PatchUserQueue(queueId, userId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserQueue",
        "required": "true"
      }
    ],
    "return": "UserQueue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserQueueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UserQueue(); // UserQueue | Queue Member\n\n            try\n            { \n                // Join or unjoin a queue for a user\n                UserQueue result = apiInstance.PatchUserQueue(queueId, userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserQueue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserqueues": {
    "operationId": "patchuserqueues",
    "functionName": "PatchUserQueues",
    "signature": "PatchUserQueues(userId, body, divisionId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<UserQueue>",
        "required": "true"
      },
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserQueueEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserQueuesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new List<UserQueue>(); // List<UserQueue> | User Queues\n            var divisionId = new List<string>(); // List<string> | Division ID(s) (optional) \n\n            try\n            { \n                // Join or unjoin a set of queues for a user\n                UserQueueEntityListing result = apiInstance.PatchUserQueues(userId, body, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserQueues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserroutinglanguage": {
    "operationId": "patchuserroutinglanguage",
    "functionName": "PatchUserRoutinglanguage",
    "signature": "PatchUserRoutinglanguage(userId, languageId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "languageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingLanguage",
        "required": "true"
      }
    ],
    "return": "UserRoutingLanguage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserRoutinglanguageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var languageId = \"languageId_example\";  // string | languageId\n            var body = new UserRoutingLanguage(); // UserRoutingLanguage | Language\n\n            try\n            { \n                // Update routing language proficiency or state.\n                UserRoutingLanguage result = apiInstance.PatchUserRoutinglanguage(userId, languageId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserRoutinglanguage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserroutinglanguagesbulk": {
    "operationId": "patchuserroutinglanguagesbulk",
    "functionName": "PatchUserRoutinglanguagesBulk",
    "signature": "PatchUserRoutinglanguagesBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<UserRoutingLanguagePost>",
        "required": "true"
      }
    ],
    "return": "UserLanguageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserRoutinglanguagesBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new List<UserRoutingLanguagePost>(); // List<UserRoutingLanguagePost> | Language\n\n            try\n            { \n                // Add bulk routing language to user. Max limit 50 languages\n                UserLanguageEntityListing result = apiInstance.PatchUserRoutinglanguagesBulk(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserRoutinglanguagesBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuserroutingskillsbulk": {
    "operationId": "patchuserroutingskillsbulk",
    "functionName": "PatchUserRoutingskillsBulk",
    "signature": "PatchUserRoutingskillsBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<UserRoutingSkillPost>",
        "required": "true"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserRoutingskillsBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new List<UserRoutingSkillPost>(); // List<UserRoutingSkillPost> | Skill\n\n            try\n            { \n                // Bulk add routing skills to user\n                UserSkillEntityListing result = apiInstance.PatchUserRoutingskillsBulk(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserRoutingskillsBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingassessments": {
    "operationId": "postroutingassessments",
    "functionName": "PostRoutingAssessments",
    "signature": "PostRoutingAssessments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBenefitAssessmentRequest",
        "required": "false"
      }
    ],
    "return": "BenefitAssessment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingAssessmentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new CreateBenefitAssessmentRequest(); // CreateBenefitAssessmentRequest |  (optional) \n\n            try\n            { \n                // Create a benefit assessment.\n                BenefitAssessment result = apiInstance.PostRoutingAssessments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingAssessments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingassessmentsjobs": {
    "operationId": "postroutingassessmentsjobs",
    "functionName": "PostRoutingAssessmentsJobs",
    "signature": "PostRoutingAssessmentsJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBenefitAssessmentJobRequest",
        "required": "false"
      }
    ],
    "return": "BenefitAssessmentJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingAssessmentsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new CreateBenefitAssessmentJobRequest(); // CreateBenefitAssessmentJobRequest |  (optional) \n\n            try\n            { \n                // Create a benefit assessment job.\n                BenefitAssessmentJob result = apiInstance.PostRoutingAssessmentsJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingAssessmentsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingemaildomainroutes": {
    "operationId": "postroutingemaildomainroutes",
    "functionName": "PostRoutingEmailDomainRoutes",
    "signature": "PostRoutingEmailDomainRoutes(domainName, body)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundRoute",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingEmailDomainRoutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainName = \"domainName_example\";  // string | email domain\n            var body = new InboundRoute(); // InboundRoute | Route\n\n            try\n            { \n                // Create a route\n                InboundRoute result = apiInstance.PostRoutingEmailDomainRoutes(domainName, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingEmailDomainRoutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingemaildomaintestconnection": {
    "operationId": "postroutingemaildomaintestconnection",
    "functionName": "PostRoutingEmailDomainTestconnection",
    "signature": "PostRoutingEmailDomainTestconnection(domainId, body)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TestMessage",
        "required": "false"
      }
    ],
    "return": "TestMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingEmailDomainTestconnectionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n            var body = new TestMessage(); // TestMessage | TestMessage (optional) \n\n            try\n            { \n                // Tests the custom SMTP server integration connection set on this domain\n                TestMessage result = apiInstance.PostRoutingEmailDomainTestconnection(domainId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingEmailDomainTestconnection: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingemaildomains": {
    "operationId": "postroutingemaildomains",
    "functionName": "PostRoutingEmailDomains",
    "signature": "PostRoutingEmailDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "InboundDomain",
        "required": "true"
      }
    ],
    "return": "InboundDomain",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingEmailDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new InboundDomain(); // InboundDomain | Domain\n\n            try\n            { \n                // Create a domain\n                InboundDomain result = apiInstance.PostRoutingEmailDomains(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingEmailDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingemailoutbounddomains": {
    "operationId": "postroutingemailoutbounddomains",
    "functionName": "PostRoutingEmailOutboundDomains",
    "signature": "PostRoutingEmailOutboundDomains(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundDomain",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingEmailOutboundDomainsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new OutboundDomain(); // OutboundDomain | Domain\n\n            try\n            { \n                // Create a domain\n                EmailOutboundDomainResult result = apiInstance.PostRoutingEmailOutboundDomains(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingEmailOutboundDomains: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingemailoutbounddomainssimulated": {
    "operationId": "postroutingemailoutbounddomainssimulated",
    "functionName": "PostRoutingEmailOutboundDomainsSimulated",
    "signature": "PostRoutingEmailOutboundDomainsSimulated(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundDomain",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingEmailOutboundDomainsSimulatedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new OutboundDomain(); // OutboundDomain | Domain\n\n            try\n            { \n                // Create a simulated domain\n                EmailOutboundDomainResult result = apiInstance.PostRoutingEmailOutboundDomainsSimulated(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingEmailOutboundDomainsSimulated: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutinglanguages": {
    "operationId": "postroutinglanguages",
    "functionName": "PostRoutingLanguages",
    "signature": "PostRoutingLanguages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Language",
        "required": "true"
      }
    ],
    "return": "Language",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingLanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new Language(); // Language | Language\n\n            try\n            { \n                // Create Language\n                Language result = apiInstance.PostRoutingLanguages(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingLanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingpredictors": {
    "operationId": "postroutingpredictors",
    "functionName": "PostRoutingPredictors",
    "signature": "PostRoutingPredictors(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreatePredictorRequest",
        "required": "false"
      }
    ],
    "return": "Predictor",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingPredictorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new CreatePredictorRequest(); // CreatePredictorRequest |  (optional) \n\n            try\n            { \n                // Create a predictor.\n                Predictor result = apiInstance.PostRoutingPredictors(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingPredictors: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingqueuemembers": {
    "operationId": "postroutingqueuemembers",
    "functionName": "PostRoutingQueueMembers",
    "signature": "PostRoutingQueueMembers(queueId, body, delete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<WritableEntity>",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingQueueMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new List<WritableEntity>(); // List<WritableEntity> | Queue Members\n            var delete = true;  // bool? | True to delete queue members (optional)  (default to false)\n\n            try\n            { \n                // Bulk add or delete up to 100 queue members\n                apiInstance.PostRoutingQueueMembers(queueId, body, delete);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingQueueMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingqueueusers": {
    "operationId": "postroutingqueueusers",
    "functionName": "PostRoutingQueueUsers",
    "signature": "PostRoutingQueueUsers(queueId, body, delete)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<WritableEntity>",
        "required": "true"
      },
      {
        "name": "delete",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingQueueUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new List<WritableEntity>(); // List<WritableEntity> | Queue Members\n            var delete = true;  // bool? | True to delete queue members (optional)  (default to false)\n\n            try\n            { \n                // DEPRECATED: use POST /routing/queues/{queueId}/members.  Bulk add or delete up to 100 queue members.\n                apiInstance.PostRoutingQueueUsers(queueId, body, delete);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingQueueUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingqueuewrapupcodes": {
    "operationId": "postroutingqueuewrapupcodes",
    "functionName": "PostRoutingQueueWrapupcodes",
    "signature": "PostRoutingQueueWrapupcodes(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<WrapUpCodeReference>",
        "required": "true"
      }
    ],
    "return": "List<WrapupCode>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingQueueWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new List<WrapUpCodeReference>(); // List<WrapUpCodeReference> | List of wrapup codes\n\n            try\n            { \n                // Add up to 100 wrap-up codes to a queue\n                List<WrapupCode> result = apiInstance.PostRoutingQueueWrapupcodes(queueId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingQueueWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingqueues": {
    "operationId": "postroutingqueues",
    "functionName": "PostRoutingQueues",
    "signature": "PostRoutingQueues(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateQueueRequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingQueuesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new CreateQueueRequest(); // CreateQueueRequest | Queue\n\n            try\n            { \n                // Create a queue\n                Queue result = apiInstance.PostRoutingQueues(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingQueues: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingskills": {
    "operationId": "postroutingskills",
    "functionName": "PostRoutingSkills",
    "signature": "PostRoutingSkills(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RoutingSkill",
        "required": "true"
      }
    ],
    "return": "RoutingSkill",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingSkillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new RoutingSkill(); // RoutingSkill | Skill\n\n            try\n            { \n                // Create Skill\n                RoutingSkill result = apiInstance.PostRoutingSkills(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingSkills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingsmsaddresses": {
    "operationId": "postroutingsmsaddresses",
    "functionName": "PostRoutingSmsAddresses",
    "signature": "PostRoutingSmsAddresses(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsAddressProvision",
        "required": "true"
      }
    ],
    "return": "SmsAddress",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingSmsAddressesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new SmsAddressProvision(); // SmsAddressProvision | SmsAddress\n\n            try\n            { \n                // Provision an Address for SMS\n                SmsAddress result = apiInstance.PostRoutingSmsAddresses(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingSmsAddresses: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingsmsphonenumbers": {
    "operationId": "postroutingsmsphonenumbers",
    "functionName": "PostRoutingSmsPhonenumbers",
    "signature": "PostRoutingSmsPhonenumbers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SmsPhoneNumberProvision",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingSmsPhonenumbersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new SmsPhoneNumberProvision(); // SmsPhoneNumberProvision | SmsPhoneNumber\n\n            try\n            { \n                // Provision a phone number for SMS\n                SmsPhoneNumber result = apiInstance.PostRoutingSmsPhonenumbers(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingSmsPhonenumbers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postroutingwrapupcodes": {
    "operationId": "postroutingwrapupcodes",
    "functionName": "PostRoutingWrapupcodes",
    "signature": "PostRoutingWrapupcodes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WrapupCode",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostRoutingWrapupcodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new WrapupCode(); // WrapupCode | WrapupCode\n\n            try\n            { \n                // Create a wrap-up code\n                WrapupCode result = apiInstance.PostRoutingWrapupcodes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PostRoutingWrapupcodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserroutinglanguages": {
    "operationId": "postuserroutinglanguages",
    "functionName": "PostUserRoutinglanguages",
    "signature": "PostUserRoutinglanguages(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingLanguagePost",
        "required": "true"
      }
    ],
    "return": "UserRoutingLanguage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserRoutinglanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UserRoutingLanguagePost(); // UserRoutingLanguagePost | Language\n\n            try\n            { \n                // Add routing language to user\n                UserRoutingLanguage result = apiInstance.PostUserRoutinglanguages(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUserRoutinglanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserroutingskills": {
    "operationId": "postuserroutingskills",
    "functionName": "PostUserRoutingskills",
    "signature": "PostUserRoutingskills(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingSkillPost",
        "required": "true"
      }
    ],
    "return": "UserRoutingSkill",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserRoutingskillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UserRoutingSkillPost(); // UserRoutingSkillPost | Skill\n\n            try\n            { \n                // Add routing skill to user\n                UserRoutingSkill result = apiInstance.PostUserRoutingskills(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUserRoutingskills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingemaildomainroute": {
    "operationId": "putroutingemaildomainroute",
    "functionName": "PutRoutingEmailDomainRoute",
    "signature": "PutRoutingEmailDomainRoute(domainName, routeId, body)",
    "parameters": [
      {
        "name": "domainName",
        "type": "string",
        "required": "true"
      },
      {
        "name": "routeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "InboundRoute",
        "required": "true"
      }
    ],
    "return": "InboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingEmailDomainRouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainName = \"domainName_example\";  // string | email domain\n            var routeId = \"routeId_example\";  // string | route ID\n            var body = new InboundRoute(); // InboundRoute | Route\n\n            try\n            { \n                // Update a route\n                InboundRoute result = apiInstance.PutRoutingEmailDomainRoute(domainName, routeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingEmailDomainRoute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingemailoutbounddomainactivation": {
    "operationId": "putroutingemailoutbounddomainactivation",
    "functionName": "PutRoutingEmailOutboundDomainActivation",
    "signature": "PutRoutingEmailOutboundDomainActivation(domainId)",
    "parameters": [
      {
        "name": "domainId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EmailOutboundDomainResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingEmailOutboundDomainActivationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var domainId = \"domainId_example\";  // string | domain ID\n\n            try\n            { \n                // Request an activation status (cname + dkim) update of an outbound domain\n                EmailOutboundDomainResult result = apiInstance.PutRoutingEmailOutboundDomainActivation(domainId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingEmailOutboundDomainActivation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingmessagerecipient": {
    "operationId": "putroutingmessagerecipient",
    "functionName": "PutRoutingMessageRecipient",
    "signature": "PutRoutingMessageRecipient(recipientId, body)",
    "parameters": [
      {
        "name": "recipientId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Recipient",
        "required": "true"
      }
    ],
    "return": "Recipient",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingMessageRecipientExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var recipientId = \"recipientId_example\";  // string | Recipient ID\n            var body = new Recipient(); // Recipient | Recipient\n\n            try\n            { \n                // Update a recipient\n                Recipient result = apiInstance.PutRoutingMessageRecipient(recipientId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingMessageRecipient: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingqueue": {
    "operationId": "putroutingqueue",
    "functionName": "PutRoutingQueue",
    "signature": "PutRoutingQueue(queueId, body)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueueRequest",
        "required": "true"
      }
    ],
    "return": "Queue",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingQueueExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var body = new QueueRequest(); // QueueRequest | Queue\n\n            try\n            { \n                // Update a queue\n                Queue result = apiInstance.PutRoutingQueue(queueId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingQueue: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingsettings": {
    "operationId": "putroutingsettings",
    "functionName": "PutRoutingSettings",
    "signature": "PutRoutingSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "RoutingSettings",
        "required": "true"
      }
    ],
    "return": "RoutingSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new RoutingSettings(); // RoutingSettings | Organization Settings\n\n            try\n            { \n                // Update an organization's routing settings\n                RoutingSettings result = apiInstance.PutRoutingSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingsettingstranscription": {
    "operationId": "putroutingsettingstranscription",
    "functionName": "PutRoutingSettingsTranscription",
    "signature": "PutRoutingSettingsTranscription(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptionSettings",
        "required": "true"
      }
    ],
    "return": "TranscriptionSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingSettingsTranscriptionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new TranscriptionSettings(); // TranscriptionSettings | Organization Settings\n\n            try\n            { \n                // Update Transcription Settings\n                TranscriptionSettings result = apiInstance.PutRoutingSettingsTranscription(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingSettingsTranscription: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingsmsphonenumber": {
    "operationId": "putroutingsmsphonenumber",
    "functionName": "PutRoutingSmsPhonenumber",
    "signature": "PutRoutingSmsPhonenumber(addressId, body)",
    "parameters": [
      {
        "name": "addressId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SmsPhoneNumber",
        "required": "true"
      }
    ],
    "return": "SmsPhoneNumber",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingSmsPhonenumberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var addressId = \"addressId_example\";  // string | Address ID\n            var body = new SmsPhoneNumber(); // SmsPhoneNumber | SmsPhoneNumber\n\n            try\n            { \n                // Update a phone number provisioned for SMS.\n                SmsPhoneNumber result = apiInstance.PutRoutingSmsPhonenumber(addressId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingSmsPhonenumber: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutinguserutilization": {
    "operationId": "putroutinguserutilization",
    "functionName": "PutRoutingUserUtilization",
    "signature": "PutRoutingUserUtilization(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Utilization",
        "required": "true"
      }
    ],
    "return": "AgentMaxUtilization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingUserUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new Utilization(); // Utilization | utilization\n\n            try\n            { \n                // Update the user's max utilization settings.  Include only those media types requiring custom configuration.\n                AgentMaxUtilization result = apiInstance.PutRoutingUserUtilization(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutRoutingUserUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingutilization": {
    "operationId": "putroutingutilization",
    "functionName": "PutRoutingUtilization",
    "signature": "PutRoutingUtilization(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Utilization",
        "required": "true"
      }
    ],
    "return": "Utilization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingUtilizationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var body = new Utilization(); // Utilization | utilization\n\n            try\n            { \n                // Update the organization-wide max utilization settings.  Include only those media types requiring custom configuration.\n                Utilization result = apiInstance.PutRoutingUtilization(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingUtilization: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putroutingwrapupcode": {
    "operationId": "putroutingwrapupcode",
    "functionName": "PutRoutingWrapupcode",
    "signature": "PutRoutingWrapupcode(codeId, body)",
    "parameters": [
      {
        "name": "codeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WrapupCode",
        "required": "true"
      }
    ],
    "return": "WrapupCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutRoutingWrapupcodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new RoutingApi();\n            var codeId = \"codeId_example\";  // string | Wrapup Code ID\n            var body = new WrapupCode(); // WrapupCode | WrapupCode\n\n            try\n            { \n                // Update wrap-up code\n                WrapupCode result = apiInstance.PutRoutingWrapupcode(codeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Routing.PutRoutingWrapupcode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserroutingskill": {
    "operationId": "putuserroutingskill",
    "functionName": "PutUserRoutingskill",
    "signature": "PutUserRoutingskill(userId, skillId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "skillId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRoutingSkill",
        "required": "true"
      }
    ],
    "return": "UserRoutingSkill",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserRoutingskillExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var skillId = \"skillId_example\";  // string | skillId\n            var body = new UserRoutingSkill(); // UserRoutingSkill | Skill\n\n            try\n            { \n                // Update routing skill proficiency or state.\n                UserRoutingSkill result = apiInstance.PutUserRoutingskill(userId, skillId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserRoutingskill: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserroutingskillsbulk": {
    "operationId": "putuserroutingskillsbulk",
    "functionName": "PutUserRoutingskillsBulk",
    "signature": "PutUserRoutingskillsBulk(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<UserRoutingSkillPost>",
        "required": "true"
      }
    ],
    "return": "UserSkillEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserRoutingskillsBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new List<UserRoutingSkillPost>(); // List<UserRoutingSkillPost> | Skill\n\n            try\n            { \n                // Replace all routing skills assigned to a user\n                UserSkillEntityListing result = apiInstance.PutUserRoutingskillsBulk(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserRoutingskillsBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletescimuser": {
    "operationId": "deletescimuser",
    "functionName": "DeleteScimUser",
    "signature": "DeleteScimUser(userId, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteScimUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/users.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Delete a user\n                Object result = apiInstance.DeleteScimUser(userId, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.DeleteScimUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletescimv2user": {
    "operationId": "deletescimv2user",
    "functionName": "DeleteScimV2User",
    "signature": "DeleteScimV2User(userId, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteScimV2UserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/v2/users.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Delete a user\n                Object result = apiInstance.DeleteScimV2User(userId, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.DeleteScimV2User: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimgroup": {
    "operationId": "getscimgroup",
    "functionName": "GetScimGroup",
    "signature": "GetScimGroup(groupId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/groups.\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional) \n\n            try\n            { \n                // Get a group\n                ScimV2Group result = apiInstance.GetScimGroup(groupId, attributes, excludedAttributes, ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimgroups": {
    "operationId": "getscimgroups",
    "functionName": "GetScimGroups",
    "signature": "GetScimGroups(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimGroupListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimGroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var startIndex = 56;  // int? | The 1-based index of the first query result. (optional)  (default to 1)\n            var count = 56;  // int? | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional)  (default to 25)\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var filter = \"displayName eq groupName\";  // string | Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\". (optional) \n\n            try\n            { \n                // Get a list of groups\n                ScimGroupListResponse result = apiInstance.GetScimGroups(startIndex, count, attributes, excludedAttributes, filter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimGroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimresourcetype": {
    "operationId": "getscimresourcetype",
    "functionName": "GetScimResourcetype",
    "signature": "GetScimResourcetype(resourceType)",
    "parameters": [
      {
        "name": "resourceType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScimConfigResourceType",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimResourcetypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var resourceType = \"resourceType_example\";  // string | The type of resource. Returned with GET /api/v2/scim/resourcetypes.\n\n            try\n            { \n                // Get a resource type\n                ScimConfigResourceType result = apiInstance.GetScimResourcetype(resourceType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimResourcetype: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimresourcetypes": {
    "operationId": "getscimresourcetypes",
    "functionName": "GetScimResourcetypes",
    "signature": "GetScimResourcetypes()",
    "return": "ScimConfigResourceTypesListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimResourcetypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n\n            try\n            { \n                // Get a list of resource types\n                ScimConfigResourceTypesListResponse result = apiInstance.GetScimResourcetypes();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimResourcetypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimschema": {
    "operationId": "getscimschema",
    "functionName": "GetScimSchema",
    "signature": "GetScimSchema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScimV2SchemaDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimSchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var schemaId = \"schemaId_example\";  // string | The ID of a schema. Returned with GET /api/v2/scim/schemas.\n\n            try\n            { \n                // Get a SCIM schema\n                ScimV2SchemaDefinition result = apiInstance.GetScimSchema(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimSchema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimschemas": {
    "operationId": "getscimschemas",
    "functionName": "GetScimSchemas",
    "signature": "GetScimSchemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2SchemaListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimSchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var filter = \"displayName eq groupName\";  // string | Filtered results are invalid and return 403 Unauthorized. (optional) \n\n            try\n            { \n                // Get a list of SCIM schemas\n                ScimV2SchemaListResponse result = apiInstance.GetScimSchemas(filter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimSchemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimserviceproviderconfig": {
    "operationId": "getscimserviceproviderconfig",
    "functionName": "GetScimServiceproviderconfig",
    "signature": "GetScimServiceproviderconfig(ifNoneMatch)",
    "parameters": [
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimServiceProviderConfig",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimServiceproviderconfigExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.  (optional) \n\n            try\n            { \n                // Get a service provider's configuration\n                ScimServiceProviderConfig result = apiInstance.GetScimServiceproviderconfig(ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimServiceproviderconfig: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimuser": {
    "operationId": "getscimuser",
    "functionName": "GetScimUser",
    "signature": "GetScimUser(userId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/users.\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional) \n\n            try\n            { \n                // Get a user\n                ScimV2User result = apiInstance.GetScimUser(userId, attributes, excludedAttributes, ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimusers": {
    "operationId": "getscimusers",
    "functionName": "GetScimUsers",
    "signature": "GetScimUsers(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimUserListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var startIndex = 56;  // int? | The 1-based index of the first query result. (optional)  (default to 1)\n            var count = 56;  // int? | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional)  (default to 25)\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var filter = \"filter_example\";  // string | Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\". (optional) \n\n            try\n            { \n                // Get a list of users\n                ScimUserListResponse result = apiInstance.GetScimUsers(startIndex, count, attributes, excludedAttributes, filter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2group": {
    "operationId": "getscimv2group",
    "functionName": "GetScimV2Group",
    "signature": "GetScimV2Group(groupId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2GroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional) \n\n            try\n            { \n                // Get a group\n                ScimV2Group result = apiInstance.GetScimV2Group(groupId, attributes, excludedAttributes, ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Group: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2groups": {
    "operationId": "getscimv2groups",
    "functionName": "GetScimV2Groups",
    "signature": "GetScimV2Groups(filter, startIndex, count, attributes, excludedAttributes)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "true"
      },
      {
        "name": "startIndex",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ScimGroupListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2GroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var filter = \"displayName eq groupName\";  // string | Filters results. If nothing is specified, returns all groups. Examples of valid values: \\\"id eq 5f4bc742-a019-4e38-8e2a-d39d5bc0b0f3\\\", \\\"displayname eq Sales\\\".\n            var startIndex = 56;  // int? | The 1-based index of the first query result. (optional)  (default to 1)\n            var count = 56;  // int? | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional)  (default to 25)\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns \\\"id\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n\n            try\n            { \n                // Get a list of groups\n                ScimGroupListResponse result = apiInstance.GetScimV2Groups(filter, startIndex, count, attributes, excludedAttributes);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Groups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2resourcetype": {
    "operationId": "getscimv2resourcetype",
    "functionName": "GetScimV2Resourcetype",
    "signature": "GetScimV2Resourcetype(resourceType)",
    "parameters": [
      {
        "name": "resourceType",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScimConfigResourceType",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2ResourcetypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var resourceType = \"resourceType_example\";  // string | The type of resource. Returned with GET /api/v2/scim/v2/resourcetypes.\n\n            try\n            { \n                // Get a resource type\n                ScimConfigResourceType result = apiInstance.GetScimV2Resourcetype(resourceType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Resourcetype: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2resourcetypes": {
    "operationId": "getscimv2resourcetypes",
    "functionName": "GetScimV2Resourcetypes",
    "signature": "GetScimV2Resourcetypes()",
    "return": "ScimConfigResourceTypesListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2ResourcetypesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n\n            try\n            { \n                // Get a list of resource types\n                ScimConfigResourceTypesListResponse result = apiInstance.GetScimV2Resourcetypes();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Resourcetypes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2schema": {
    "operationId": "getscimv2schema",
    "functionName": "GetScimV2Schema",
    "signature": "GetScimV2Schema(schemaId)",
    "parameters": [
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScimV2SchemaDefinition",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2SchemaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var schemaId = \"schemaId_example\";  // string | The ID of a schema. Returned with GET /api/v2/scim/v2/schemas.\n\n            try\n            { \n                // Get a SCIM schema\n                ScimV2SchemaDefinition result = apiInstance.GetScimV2Schema(schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Schema: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2schemas": {
    "operationId": "getscimv2schemas",
    "functionName": "GetScimV2Schemas",
    "signature": "GetScimV2Schemas(filter)",
    "parameters": [
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2SchemaListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2SchemasExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var filter = \"displayName eq groupName\";  // string | Filtered results are invalid and return 403 Unauthorized. (optional) \n\n            try\n            { \n                // Get a list of SCIM schemas\n                ScimV2SchemaListResponse result = apiInstance.GetScimV2Schemas(filter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Schemas: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2serviceproviderconfig": {
    "operationId": "getscimv2serviceproviderconfig",
    "functionName": "GetScimV2Serviceproviderconfig",
    "signature": "GetScimV2Serviceproviderconfig(ifNoneMatch)",
    "parameters": [
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimServiceProviderConfig",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2ServiceproviderconfigExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/serviceproviderconfig. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified.  (optional) \n\n            try\n            { \n                // Get a service provider's configuration\n                ScimServiceProviderConfig result = apiInstance.GetScimV2Serviceproviderconfig(ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Serviceproviderconfig: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2user": {
    "operationId": "getscimv2user",
    "functionName": "GetScimV2User",
    "signature": "GetScimV2User(userId, attributes, excludedAttributes, ifNoneMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "ifNoneMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2UserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/v2/users.\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var ifNoneMatch = \"ifNoneMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns the current configuration of the resource. If the ETag is current, returns 304 Not Modified. (optional) \n\n            try\n            { \n                // Get a user\n                ScimV2User result = apiInstance.GetScimV2User(userId, attributes, excludedAttributes, ifNoneMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2User: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscimv2users": {
    "operationId": "getscimv2users",
    "functionName": "GetScimV2Users",
    "signature": "GetScimV2Users(startIndex, count, attributes, excludedAttributes, filter)",
    "parameters": [
      {
        "name": "startIndex",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "count",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "attributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "excludedAttributes",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "filter",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimUserListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScimV2UsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var startIndex = 56;  // int? | The 1-based index of the first query result. (optional)  (default to 1)\n            var count = 56;  // int? | The requested number of items per page. A value of 0 returns \\\"totalResults\\\". A page size over 25 may exceed internal resource limits and return a 429 error. For a page size over 25, use the \\\"excludedAttributes\\\" or \\\"attributes\\\" query parameters to exclude or only include secondary lookup values such as \\\"externalId\\\",  \\\"roles\\\", \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingLanguages\\\", or \\\"urn:ietf:params:scim:schemas:extension:genesys:purecloud:2.0:User:routingSkills\\\". (optional)  (default to 25)\n            var attributes = new List<string>(); // List<string> | Indicates which attributes to include. Returns these attributes and the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"attributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var excludedAttributes = new List<string>(); // List<string> | Indicates which attributes to exclude. Returns the default attributes minus \\\"excludedAttributes\\\". Always returns the \\\"id\\\", \\\"userName\\\", \\\"active\\\", and \\\"meta\\\" attributes. Use \\\"excludedAttributes\\\" to avoid expensive secondary calls for the default attributes. (optional) \n            var filter = \"filter_example\";  // string | Filters results. If nothing is specified, returns all active users. Examples of valid values: \\\"id eq 857449b0-d9e7-4cd0-acbf-a6adfb9ef1e9\\\", \\\"userName eq search@sample.org\\\", \\\"manager eq 16e10e2f-1136-43fe-bb84-eac073168a49\\\", \\\"email eq search@sample.org\\\", \\\"division eq divisionName\\\", \\\"externalId eq 167844\\\", \\\"active eq false\\\", \\\"employeeNumber eq 9876543210\\\". (optional) \n\n            try\n            { \n                // Get a list of users\n                ScimUserListResponse result = apiInstance.GetScimV2Users(startIndex, count, attributes, excludedAttributes, filter);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.GetScimV2Users: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchscimgroup": {
    "operationId": "patchscimgroup",
    "functionName": "PatchScimGroup",
    "signature": "PatchScimGroup(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchScimGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/groups.\n            var body = new ScimV2PatchRequest(); // ScimV2PatchRequest | The information used to modify a group.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Modify a group\n                ScimV2Group result = apiInstance.PatchScimGroup(groupId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PatchScimGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchscimuser": {
    "operationId": "patchscimuser",
    "functionName": "PatchScimUser",
    "signature": "PatchScimUser(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchScimUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/users.\n            var body = new ScimV2PatchRequest(); // ScimV2PatchRequest | The information used to modify a user.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Modify a user\n                ScimV2User result = apiInstance.PatchScimUser(userId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PatchScimUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchscimv2group": {
    "operationId": "patchscimv2group",
    "functionName": "PatchScimV2Group",
    "signature": "PatchScimV2Group(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchScimV2GroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\n            var body = new ScimV2PatchRequest(); // ScimV2PatchRequest | The information used to modify a group.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Modify a group\n                ScimV2Group result = apiInstance.PatchScimV2Group(groupId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PatchScimV2Group: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchscimv2user": {
    "operationId": "patchscimv2user",
    "functionName": "PatchScimV2User",
    "signature": "PatchScimV2User(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2PatchRequest",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchScimV2UserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/v2/users.\n            var body = new ScimV2PatchRequest(); // ScimV2PatchRequest | The information used to modify a user.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Modify a user\n                ScimV2User result = apiInstance.PatchScimV2User(userId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PatchScimV2User: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postscimusers": {
    "operationId": "postscimusers",
    "functionName": "PostScimUsers",
    "signature": "PostScimUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScimV2CreateUser",
        "required": "true"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostScimUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var body = new ScimV2CreateUser(); // ScimV2CreateUser | The information used to create a user.\n\n            try\n            { \n                // Create a user\n                ScimV2User result = apiInstance.PostScimUsers(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PostScimUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postscimv2users": {
    "operationId": "postscimv2users",
    "functionName": "PostScimV2Users",
    "signature": "PostScimV2Users(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ScimV2CreateUser",
        "required": "true"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostScimV2UsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var body = new ScimV2CreateUser(); // ScimV2CreateUser | The information used to create a user.\n\n            try\n            { \n                // Create a user\n                ScimV2User result = apiInstance.PostScimV2Users(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PostScimV2Users: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putscimgroup": {
    "operationId": "putscimgroup",
    "functionName": "PutScimGroup",
    "signature": "PutScimGroup(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2Group",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutScimGroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/groups.\n            var body = new ScimV2Group(); // ScimV2Group | The information used to replace a group.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Replace a group\n                ScimV2Group result = apiInstance.PutScimGroup(groupId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PutScimGroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putscimuser": {
    "operationId": "putscimuser",
    "functionName": "PutScimUser",
    "signature": "PutScimUser(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2User",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutScimUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/users.\n            var body = new ScimV2User(); // ScimV2User | The information used to replace a user.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Replace a user\n                ScimV2User result = apiInstance.PutScimUser(userId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PutScimUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putscimv2group": {
    "operationId": "putscimv2group",
    "functionName": "PutScimV2Group",
    "signature": "PutScimV2Group(groupId, body, ifMatch)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2Group",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2Group",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutScimV2GroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var groupId = \"groupId_example\";  // string | The ID of a group. Returned with GET /api/v2/scim/v2/groups.\n            var body = new ScimV2Group(); // ScimV2Group | The information used to replace a group.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/groups/{groupId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Replace a group\n                ScimV2Group result = apiInstance.PutScimV2Group(groupId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PutScimV2Group: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putscimv2user": {
    "operationId": "putscimv2user",
    "functionName": "PutScimV2User",
    "signature": "PutScimV2User(userId, body, ifMatch)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ScimV2User",
        "required": "true"
      },
      {
        "name": "ifMatch",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScimV2User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutScimV2UserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SCIMApi();\n            var userId = \"userId_example\";  // string | The ID of a user. Returned with GET /api/v2/scim/v2/users.\n            var body = new ScimV2User(); // ScimV2User | The information used to replace a user.\n            var ifMatch = \"ifMatch_example\";  // string | The ETag of a resource in double quotes. Returned as header and meta.version with initial call to GET /api/v2/scim/v2/users/{userId}. Example: \\\"42\\\". If the ETag is different from the version on the server, returns 400 with a \\\"scimType\\\" of \\\"invalidVers\\\". (optional) \n\n            try\n            { \n                // Replace a user\n                ScimV2User result = apiInstance.PutScimV2User(userId, body, ifMatch);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SCIM.PutScimV2User: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscript": {
    "operationId": "getscript",
    "functionName": "GetScript",
    "signature": "GetScript(scriptId)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Script",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n\n            try\n            { \n                // Get a script\n                Script result = apiInstance.GetScript(scriptId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScript: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptpage": {
    "operationId": "getscriptpage",
    "functionName": "GetScriptPage",
    "signature": "GetScriptPage(scriptId, pageId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptPageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var pageId = \"pageId_example\";  // string | Page ID\n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get a page\n                Page result = apiInstance.GetScriptPage(scriptId, pageId, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptPage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptpages": {
    "operationId": "getscriptpages",
    "functionName": "GetScriptPages",
    "signature": "GetScriptPages(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "List<Page>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptPagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get the list of pages\n                List<Page> result = apiInstance.GetScriptPages(scriptId, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptPages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscripts": {
    "operationId": "getscripts",
    "functionName": "GetScripts",
    "signature": "GetScripts(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand (optional) \n            var name = \"name_example\";  // string | Name filter (optional) \n            var feature = \"feature_example\";  // string | Feature filter (optional) \n            var flowId = \"flowId_example\";  // string | Secure flow id filter (optional) \n            var sortBy = \"sortBy_example\";  // string | SortBy (optional) \n            var sortOrder = \"sortOrder_example\";  // string | SortOrder (optional) \n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n            var divisionIds = \"divisionIds_example\";  // string | Filters scripts to requested divisionIds (optional) \n\n            try\n            { \n                // Get the list of scripts\n                ScriptEntityListing result = apiInstance.GetScripts(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScripts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptsdivisionviews": {
    "operationId": "getscriptsdivisionviews",
    "functionName": "GetScriptsDivisionviews",
    "signature": "GetScriptsDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand (optional) \n            var name = \"name_example\";  // string | Name filter (optional) \n            var feature = \"feature_example\";  // string | Feature filter (optional) \n            var flowId = \"flowId_example\";  // string | Secure flow id filter (optional) \n            var sortBy = \"sortBy_example\";  // string | SortBy (optional) \n            var sortOrder = \"sortOrder_example\";  // string | SortOrder (optional) \n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n            var divisionIds = \"divisionIds_example\";  // string | Filters scripts to requested divisionIds (optional) \n\n            try\n            { \n                // Get the metadata for a list of scripts\n                ScriptEntityListing result = apiInstance.GetScriptsDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, sortBy, sortOrder, scriptDataVersion, divisionIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublished": {
    "operationId": "getscriptspublished",
    "functionName": "GetScriptsPublished",
    "signature": "GetScriptsPublished(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand (optional) \n            var name = \"name_example\";  // string | Name filter (optional) \n            var feature = \"feature_example\";  // string | Feature filter (optional) \n            var flowId = \"flowId_example\";  // string | Secure flow id filter (optional) \n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n            var divisionIds = \"divisionIds_example\";  // string | Filters scripts to requested divisionIds (optional) \n\n            try\n            { \n                // Get the published scripts.\n                ScriptEntityListing result = apiInstance.GetScriptsPublished(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublished: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublisheddivisionviews": {
    "operationId": "getscriptspublisheddivisionviews",
    "functionName": "GetScriptsPublishedDivisionviews",
    "signature": "GetScriptsPublishedDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "flowId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionIds",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ScriptEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = \"expand_example\";  // string | Expand (optional) \n            var name = \"name_example\";  // string | Name filter (optional) \n            var feature = \"feature_example\";  // string | Feature filter (optional) \n            var flowId = \"flowId_example\";  // string | Secure flow id filter (optional) \n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n            var divisionIds = \"divisionIds_example\";  // string | Filters scripts to requested divisionIds (optional) \n\n            try\n            { \n                // Get the published scripts metadata.\n                ScriptEntityListing result = apiInstance.GetScriptsPublishedDivisionviews(pageSize, pageNumber, expand, name, feature, flowId, scriptDataVersion, divisionIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublishedDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublishedscriptid": {
    "operationId": "getscriptspublishedscriptid",
    "functionName": "GetScriptsPublishedScriptId",
    "signature": "GetScriptsPublishedScriptId(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Script",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedScriptIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get the published script.\n                Script result = apiInstance.GetScriptsPublishedScriptId(scriptId, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublishedScriptId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublishedscriptidpage": {
    "operationId": "getscriptspublishedscriptidpage",
    "functionName": "GetScriptsPublishedScriptIdPage",
    "signature": "GetScriptsPublishedScriptIdPage(scriptId, pageId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Page",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedScriptIdPageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var pageId = \"pageId_example\";  // string | Page ID\n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get the published page.\n                Page result = apiInstance.GetScriptsPublishedScriptIdPage(scriptId, pageId, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublishedScriptIdPage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublishedscriptidpages": {
    "operationId": "getscriptspublishedscriptidpages",
    "functionName": "GetScriptsPublishedScriptIdPages",
    "signature": "GetScriptsPublishedScriptIdPages(scriptId, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "List<Page>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedScriptIdPagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get the list of published pages\n                List<Page> result = apiInstance.GetScriptsPublishedScriptIdPages(scriptId, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublishedScriptIdPages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptspublishedscriptidvariables": {
    "operationId": "getscriptspublishedscriptidvariables",
    "functionName": "GetScriptsPublishedScriptIdVariables",
    "signature": "GetScriptsPublishedScriptIdVariables(scriptId, input, output, type, scriptDataVersion)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "input",
        "type": "string",
        "required": "false"
      },
      {
        "name": "output",
        "type": "string",
        "required": "false"
      },
      {
        "name": "type",
        "type": "string",
        "required": "false"
      },
      {
        "name": "scriptDataVersion",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsPublishedScriptIdVariablesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var input = \"input_example\";  // string | input (optional) \n            var output = \"output_example\";  // string | output (optional) \n            var type = \"type_example\";  // string | type (optional) \n            var scriptDataVersion = \"scriptDataVersion_example\";  // string | Advanced usage - controls the data version of the script (optional) \n\n            try\n            { \n                // Get the published variables\n                Object result = apiInstance.GetScriptsPublishedScriptIdVariables(scriptId, input, output, type, scriptDataVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsPublishedScriptIdVariables: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getscriptsuploadstatus": {
    "operationId": "getscriptsuploadstatus",
    "functionName": "GetScriptsUploadStatus",
    "signature": "GetScriptsUploadStatus(uploadId, longPoll)",
    "parameters": [
      {
        "name": "uploadId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "longPoll",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "ImportScriptStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetScriptsUploadStatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var uploadId = \"uploadId_example\";  // string | Upload ID\n            var longPoll = true;  // bool? | Enable longPolling endpoint (optional)  (default to false)\n\n            try\n            { \n                // Get the upload status of an imported script\n                ImportScriptStatusResponse result = apiInstance.GetScriptsUploadStatus(uploadId, longPoll);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.GetScriptsUploadStatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postscriptexport": {
    "operationId": "postscriptexport",
    "functionName": "PostScriptExport",
    "signature": "PostScriptExport(scriptId, body)",
    "parameters": [
      {
        "name": "scriptId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExportScriptRequest",
        "required": "false"
      }
    ],
    "return": "ExportScriptResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostScriptExportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new ScriptsApi();\n            var scriptId = \"scriptId_example\";  // string | Script ID\n            var body = new ExportScriptRequest(); // ExportScriptRequest |  (optional) \n\n            try\n            { \n                // Export a script via download service.\n                ExportScriptResponse result = apiInstance.PostScriptExport(scriptId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Scripts.PostScriptExport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdocumentationgknsearch": {
    "operationId": "getdocumentationgknsearch",
    "functionName": "GetDocumentationGknSearch",
    "signature": "GetDocumentationGknSearch(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "GKNDocumentationSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDocumentationGknSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new SearchApi();\n            var q64 = \"q64_example\";  // string | q64\n\n            try\n            { \n                // Search gkn documentation using the q64 value returned from a previous search\n                GKNDocumentationSearchResponse result = apiInstance.GetDocumentationGknSearch(q64);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.GetDocumentationGknSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdocumentationsearch": {
    "operationId": "getdocumentationsearch",
    "functionName": "GetDocumentationSearch",
    "signature": "GetDocumentationSearch(q64)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DocumentationSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDocumentationSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new SearchApi();\n            var q64 = \"q64_example\";  // string | q64\n\n            try\n            { \n                // Search documentation using the q64 value returned from a previous search\n                DocumentationSearchResponse result = apiInstance.GetDocumentationSearch(q64);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.GetDocumentationSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getsearch": {
    "operationId": "getsearch",
    "functionName": "GetSearch",
    "signature": "GetSearch(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SuggestApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var profile = true;  // bool? | profile (optional)  (default to true)\n\n            try\n            { \n                // Search using the q64 value returned from a previous search.\n                JsonNodeSearchResponse result = apiInstance.GetSearch(q64, expand, profile);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Suggest.GetSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getsearchsuggest": {
    "operationId": "getsearchsuggest",
    "functionName": "GetSearchSuggest",
    "signature": "GetSearchSuggest(q64, expand, profile)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "profile",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSearchSuggestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SuggestApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var profile = true;  // bool? | profile (optional)  (default to true)\n\n            try\n            { \n                // Suggest resources using the q64 value returned from a previous suggest query.\n                JsonNodeSearchResponse result = apiInstance.GetSearchSuggest(q64, expand, profile);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Suggest.GetSearchSuggest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserssearch": {
    "operationId": "getuserssearch",
    "functionName": "GetUsersSearch",
    "signature": "GetUsersSearch(q64, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | expand (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | integrationPresenceSource (optional) \n\n            try\n            { \n                // Search users using the q64 value returned from a previous search\n                UsersSearchResponse result = apiInstance.GetUsersSearch(q64, expand, integrationPresenceSource);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsersSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailsearch": {
    "operationId": "getvoicemailsearch",
    "functionName": "GetVoicemailSearch",
    "signature": "GetVoicemailSearch(q64, expand)",
    "parameters": [
      {
        "name": "q64",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "VoicemailsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var q64 = \"q64_example\";  // string | q64\n            var expand = new List<string>(); // List<string> | expand (optional) \n\n            try\n            { \n                // Search voicemails using the q64 value returned from a previous search\n                VoicemailsSearchResponse result = apiInstance.GetVoicemailSearch(q64, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postdocumentationgknsearch": {
    "operationId": "postdocumentationgknsearch",
    "functionName": "PostDocumentationGknSearch",
    "signature": "PostDocumentationGknSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GKNDocumentationSearchRequest",
        "required": "true"
      }
    ],
    "return": "GKNDocumentationSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostDocumentationGknSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new SearchApi();\n            var body = new GKNDocumentationSearchRequest(); // GKNDocumentationSearchRequest | Search request options\n\n            try\n            { \n                // Search gkn documentation\n                GKNDocumentationSearchResponse result = apiInstance.PostDocumentationGknSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostDocumentationGknSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postdocumentationsearch": {
    "operationId": "postdocumentationsearch",
    "functionName": "PostDocumentationSearch",
    "signature": "PostDocumentationSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DocumentationSearchRequest",
        "required": "true"
      }
    ],
    "return": "DocumentationSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostDocumentationSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new SearchApi();\n            var body = new DocumentationSearchRequest(); // DocumentationSearchRequest | Search request options\n\n            try\n            { \n                // Search documentation\n                DocumentationSearchResponse result = apiInstance.PostDocumentationSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Search.PostDocumentationSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postsearch": {
    "operationId": "postsearch",
    "functionName": "PostSearch",
    "signature": "PostSearch(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "SearchRequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SuggestApi();\n            var body = new SearchRequest(); // SearchRequest | Search request options\n            var profile = true;  // bool? | profile (optional)  (default to true)\n\n            try\n            { \n                // Search resources.\n                JsonNodeSearchResponse result = apiInstance.PostSearch(body, profile);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Suggest.PostSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postsearchsuggest": {
    "operationId": "postsearchsuggest",
    "functionName": "PostSearchSuggest",
    "signature": "PostSearchSuggest(body, profile)",
    "parameters": [
      {
        "name": "body",
        "type": "SuggestSearchRequest",
        "required": "true"
      },
      {
        "name": "profile",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "JsonNodeSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSearchSuggestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SuggestApi();\n            var body = new SuggestSearchRequest(); // SuggestSearchRequest | Search request options\n            var profile = true;  // bool? | profile (optional)  (default to true)\n\n            try\n            { \n                // Suggest resources.\n                JsonNodeSearchResponse result = apiInstance.PostSearchSuggest(body, profile);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Suggest.PostSearchSuggest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticstranscriptssearch": {
    "operationId": "postspeechandtextanalyticstranscriptssearch",
    "functionName": "PostSpeechandtextanalyticsTranscriptsSearch",
    "signature": "PostSpeechandtextanalyticsTranscriptsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TranscriptSearchRequest",
        "required": "true"
      }
    ],
    "return": "JsonSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsTranscriptsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new TranscriptSearchRequest(); // TranscriptSearchRequest | Search request options\n\n            try\n            { \n                // Search resources.\n                JsonSearchResponse result = apiInstance.PostSpeechandtextanalyticsTranscriptsSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsTranscriptsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postteamssearch": {
    "operationId": "postteamssearch",
    "functionName": "PostTeamsSearch",
    "signature": "PostTeamsSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TeamSearchRequest",
        "required": "true"
      }
    ],
    "return": "TeamsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTeamsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var body = new TeamSearchRequest(); // TeamSearchRequest | Search request options\n\n            try\n            { \n                // Search resources.\n                TeamsSearchResponse result = apiInstance.PostTeamsSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.PostTeamsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserssearch": {
    "operationId": "postuserssearch",
    "functionName": "PostUsersSearch",
    "signature": "PostUsersSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsersSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new UserSearchRequest(); // UserSearchRequest | Search request options\n\n            try\n            { \n                // Search users\n                UsersSearchResponse result = apiInstance.PostUsersSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUsersSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserssearchteamsassign": {
    "operationId": "postuserssearchteamsassign",
    "functionName": "PostUsersSearchTeamsAssign",
    "signature": "PostUsersSearchTeamsAssign(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UserSearchRequest",
        "required": "true"
      }
    ],
    "return": "UsersSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsersSearchTeamsAssignExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new UserSearchRequest(); // UserSearchRequest | Search request options\n\n            try\n            { \n                // Search users assigned to teams\n                UsersSearchResponse result = apiInstance.PostUsersSearchTeamsAssign(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUsersSearchTeamsAssign: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postvoicemailsearch": {
    "operationId": "postvoicemailsearch",
    "functionName": "PostVoicemailSearch",
    "signature": "PostVoicemailSearch(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailSearchRequest",
        "required": "true"
      }
    ],
    "return": "VoicemailsSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostVoicemailSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var body = new VoicemailSearchRequest(); // VoicemailSearchRequest | Search request options\n\n            try\n            { \n                // Search voicemails\n                VoicemailsSearchResponse result = apiInstance.PostVoicemailSearch(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PostVoicemailSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletespeechandtextanalyticsprogram": {
    "operationId": "deletespeechandtextanalyticsprogram",
    "functionName": "DeleteSpeechandtextanalyticsProgram",
    "signature": "DeleteSpeechandtextanalyticsProgram(programId, forceDelete)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDelete",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteSpeechandtextanalyticsProgramExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var programId = \"programId_example\";  // string | The id of the program\n            var forceDelete = \"forceDelete_example\";  // bool? | Indicates whether the program is forced to be deleted or not. Required when the program to delete is the default program. (optional)  (default to false)\n\n            try\n            { \n                // Delete a Speech & Text Analytics program by id\n                apiInstance.DeleteSpeechandtextanalyticsProgram(programId, forceDelete);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.DeleteSpeechandtextanalyticsProgram: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletespeechandtextanalyticssentimentfeedback": {
    "operationId": "deletespeechandtextanalyticssentimentfeedback",
    "functionName": "DeleteSpeechandtextanalyticsSentimentfeedback",
    "signature": "DeleteSpeechandtextanalyticsSentimentfeedback()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteSpeechandtextanalyticsSentimentfeedbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n\n            try\n            { \n                // Delete All Speech & Text Analytics SentimentFeedback\n                apiInstance.DeleteSpeechandtextanalyticsSentimentfeedback();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.DeleteSpeechandtextanalyticsSentimentfeedback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletespeechandtextanalyticssentimentfeedbacksentimentfeedbackid": {
    "operationId": "deletespeechandtextanalyticssentimentfeedbacksentimentfeedbackid",
    "functionName": "DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId",
    "signature": "DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId(sentimentFeedbackId)",
    "parameters": [
      {
        "name": "sentimentFeedbackId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var sentimentFeedbackId = \"sentimentFeedbackId_example\";  // string | The Id of the SentimentFeedback\n\n            try\n            { \n                // Delete a Speech & Text Analytics SentimentFeedback by Id\n                apiInstance.DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId(sentimentFeedbackId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.DeleteSpeechandtextanalyticsSentimentfeedbackSentimentFeedbackId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletespeechandtextanalyticstopic": {
    "operationId": "deletespeechandtextanalyticstopic",
    "functionName": "DeleteSpeechandtextanalyticsTopic",
    "signature": "DeleteSpeechandtextanalyticsTopic(topicId)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteSpeechandtextanalyticsTopicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var topicId = \"topicId_example\";  // string | The id of the topic\n\n            try\n            { \n                // Delete a Speech & Text Analytics topic by id\n                apiInstance.DeleteSpeechandtextanalyticsTopic(topicId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.DeleteSpeechandtextanalyticsTopic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsconversation": {
    "operationId": "getspeechandtextanalyticsconversation",
    "functionName": "GetSpeechandtextanalyticsConversation",
    "signature": "GetSpeechandtextanalyticsConversation(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ConversationMetrics",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsConversationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation Id\n\n            try\n            { \n                // Get Speech and Text Analytics for a specific conversation\n                ConversationMetrics result = apiInstance.GetSpeechandtextanalyticsConversation(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsConversation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsconversationcommunicationtranscripturl": {
    "operationId": "getspeechandtextanalyticsconversationcommunicationtranscripturl",
    "functionName": "GetSpeechandtextanalyticsConversationCommunicationTranscripturl",
    "signature": "GetSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId, communicationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "communicationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TranscriptUrl",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsConversationCommunicationTranscripturlExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var conversationId = \"conversationId_example\";  // string | Conversation ID\n            var communicationId = \"communicationId_example\";  // string | Communication ID\n\n            try\n            { \n                // Get the pre-signed S3 URL for the transcript of a specific communication of a conversation\n                TranscriptUrl result = apiInstance.GetSpeechandtextanalyticsConversationCommunicationTranscripturl(conversationId, communicationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsConversationCommunicationTranscripturl: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogram": {
    "operationId": "getspeechandtextanalyticsprogram",
    "functionName": "GetSpeechandtextanalyticsProgram",
    "signature": "GetSpeechandtextanalyticsProgram(programId)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var programId = \"programId_example\";  // string | The id of the program\n\n            try\n            { \n                // Get a Speech & Text Analytics program by id\n                Program result = apiInstance.GetSpeechandtextanalyticsProgram(programId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgram: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogrammappings": {
    "operationId": "getspeechandtextanalyticsprogrammappings",
    "functionName": "GetSpeechandtextanalyticsProgramMappings",
    "signature": "GetSpeechandtextanalyticsProgramMappings(programId)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ProgramMappings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramMappingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var programId = \"programId_example\";  // string | The id of the program\n\n            try\n            { \n                // Get Speech & Text Analytics program mappings to queues and flows by id\n                ProgramMappings result = apiInstance.GetSpeechandtextanalyticsProgramMappings(programId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgramMappings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprograms": {
    "operationId": "getspeechandtextanalyticsprograms",
    "functionName": "GetSpeechandtextanalyticsPrograms",
    "signature": "GetSpeechandtextanalyticsPrograms(nextPage, pageSize, state)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ProgramsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var nextPage = \"nextPage_example\";  // string | The key for listing the next page (optional) \n            var pageSize = 56;  // int? | The page size for the listing (optional)  (default to 20)\n            var state = \"state_example\";  // string | Program state. Defaults to Latest (optional) \n\n            try\n            { \n                // Get the list of Speech & Text Analytics programs\n                ProgramsEntityListing result = apiInstance.GetSpeechandtextanalyticsPrograms(nextPage, pageSize, state);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsPrograms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogramsgeneraljob": {
    "operationId": "getspeechandtextanalyticsprogramsgeneraljob",
    "functionName": "GetSpeechandtextanalyticsProgramsGeneralJob",
    "signature": "GetSpeechandtextanalyticsProgramsGeneralJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "GeneralProgramJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramsGeneralJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var jobId = \"jobId_example\";  // string | The id of the publish programs job\n\n            try\n            { \n                // Get a Speech & Text Analytics general program job by id\n                GeneralProgramJob result = apiInstance.GetSpeechandtextanalyticsProgramsGeneralJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgramsGeneralJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogramsmappings": {
    "operationId": "getspeechandtextanalyticsprogramsmappings",
    "functionName": "GetSpeechandtextanalyticsProgramsMappings",
    "signature": "GetSpeechandtextanalyticsProgramsMappings(nextPage, pageSize)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "ProgramsMappingsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramsMappingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var nextPage = \"nextPage_example\";  // string | The key for listing the next page (optional) \n            var pageSize = 56;  // int? | The page size for the listing (optional)  (default to 20)\n\n            try\n            { \n                // Get the list of Speech & Text Analytics programs mappings to queues and flows\n                ProgramsMappingsEntityListing result = apiInstance.GetSpeechandtextanalyticsProgramsMappings(nextPage, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgramsMappings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogramspublishjob": {
    "operationId": "getspeechandtextanalyticsprogramspublishjob",
    "functionName": "GetSpeechandtextanalyticsProgramsPublishjob",
    "signature": "GetSpeechandtextanalyticsProgramsPublishjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ProgramJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramsPublishjobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var jobId = \"jobId_example\";  // string | The id of the publish programs job\n\n            try\n            { \n                // Get a Speech & Text Analytics publish programs job by id\n                ProgramJob result = apiInstance.GetSpeechandtextanalyticsProgramsPublishjob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgramsPublishjob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticsprogramsunpublished": {
    "operationId": "getspeechandtextanalyticsprogramsunpublished",
    "functionName": "GetSpeechandtextanalyticsProgramsUnpublished",
    "signature": "GetSpeechandtextanalyticsProgramsUnpublished(nextPage, pageSize)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "UnpublishedProgramsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsProgramsUnpublishedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var nextPage = \"nextPage_example\";  // string | The key for listing the next page (optional) \n            var pageSize = 56;  // int? | The page size for the listing (optional)  (default to 20)\n\n            try\n            { \n                // Get the list of Speech & Text Analytics unpublished programs\n                UnpublishedProgramsEntityListing result = apiInstance.GetSpeechandtextanalyticsProgramsUnpublished(nextPage, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsProgramsUnpublished: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticssentimentdialects": {
    "operationId": "getspeechandtextanalyticssentimentdialects",
    "functionName": "GetSpeechandtextanalyticsSentimentDialects",
    "signature": "GetSpeechandtextanalyticsSentimentDialects()",
    "return": "EntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsSentimentDialectsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n\n            try\n            { \n                // Get the list of Speech & Text Analytics sentiment supported dialects\n                EntityListing result = apiInstance.GetSpeechandtextanalyticsSentimentDialects();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsSentimentDialects: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticssentimentfeedback": {
    "operationId": "getspeechandtextanalyticssentimentfeedback",
    "functionName": "GetSpeechandtextanalyticsSentimentfeedback",
    "signature": "GetSpeechandtextanalyticsSentimentfeedback(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SentimentFeedbackEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsSentimentfeedbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var dialect = \"en-US\";  // string | The key for filter the listing by dialect, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional) \n\n            try\n            { \n                // Get the list of Speech & Text Analytics SentimentFeedback\n                SentimentFeedbackEntityListing result = apiInstance.GetSpeechandtextanalyticsSentimentfeedback(dialect);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsSentimentfeedback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticssettings": {
    "operationId": "getspeechandtextanalyticssettings",
    "functionName": "GetSpeechandtextanalyticsSettings",
    "signature": "GetSpeechandtextanalyticsSettings()",
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n\n            try\n            { \n                // Get Speech And Text Analytics Settings\n                SpeechTextAnalyticsSettingsResponse result = apiInstance.GetSpeechandtextanalyticsSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticstopic": {
    "operationId": "getspeechandtextanalyticstopic",
    "functionName": "GetSpeechandtextanalyticsTopic",
    "signature": "GetSpeechandtextanalyticsTopic(topicId)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsTopicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var topicId = \"topicId_example\";  // string | The id of the topic\n\n            try\n            { \n                // Get a Speech & Text Analytics topic by id\n                Topic result = apiInstance.GetSpeechandtextanalyticsTopic(topicId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsTopic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticstopics": {
    "operationId": "getspeechandtextanalyticstopics",
    "functionName": "GetSpeechandtextanalyticsTopics",
    "signature": "GetSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, sortBy, sortOrder)",
    "parameters": [
      {
        "name": "nextPage",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ids",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TopicsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsTopicsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var nextPage = \"nextPage_example\";  // string | The key for listing the next page (optional) \n            var pageSize = 56;  // int? | The page size for the listing (optional)  (default to 20)\n            var state = \"state_example\";  // string | Topic state. Defaults to latest (optional) \n            var name = \"name_example\";  // string | Case insensitive partial name to filter by (optional) \n            var ids = new List<string>(); // List<string> | Comma separated Topic IDs to filter by. Cannot be used with other filters. Maximum of 50 IDs allowed. (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort results by. Defaults to name (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order. Defaults to asc (optional) \n\n            try\n            { \n                // Get the list of Speech & Text Analytics topics\n                TopicsEntityListing result = apiInstance.GetSpeechandtextanalyticsTopics(nextPage, pageSize, state, name, ids, sortBy, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsTopics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticstopicsdialects": {
    "operationId": "getspeechandtextanalyticstopicsdialects",
    "functionName": "GetSpeechandtextanalyticsTopicsDialects",
    "signature": "GetSpeechandtextanalyticsTopicsDialects()",
    "return": "EntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsTopicsDialectsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n\n            try\n            { \n                // Get list of supported Speech & Text Analytics topics dialects\n                EntityListing result = apiInstance.GetSpeechandtextanalyticsTopicsDialects();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsTopicsDialects: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticstopicsgeneral": {
    "operationId": "getspeechandtextanalyticstopicsgeneral",
    "functionName": "GetSpeechandtextanalyticsTopicsGeneral",
    "signature": "GetSpeechandtextanalyticsTopicsGeneral(dialect)",
    "parameters": [
      {
        "name": "dialect",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "GeneralTopicsEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsTopicsGeneralExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var dialect = \"dialect_example\";  // string | The dialect of the general topics, dialect format is {language}-{country} where language follows ISO 639-1 standard and country follows ISO 3166-1 alpha 2 standard (optional) \n\n            try\n            { \n                // Get the Speech & Text Analytics general topics for a given dialect\n                GeneralTopicsEntityListing result = apiInstance.GetSpeechandtextanalyticsTopicsGeneral(dialect);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsTopicsGeneral: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getspeechandtextanalyticstopicspublishjob": {
    "operationId": "getspeechandtextanalyticstopicspublishjob",
    "functionName": "GetSpeechandtextanalyticsTopicsPublishjob",
    "signature": "GetSpeechandtextanalyticsTopicsPublishjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TopicJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetSpeechandtextanalyticsTopicsPublishjobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var jobId = \"jobId_example\";  // string | The id of the publish topics job\n\n            try\n            { \n                // Get a Speech & Text Analytics publish topics job by id\n                TopicJob result = apiInstance.GetSpeechandtextanalyticsTopicsPublishjob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.GetSpeechandtextanalyticsTopicsPublishjob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchspeechandtextanalyticssettings": {
    "operationId": "patchspeechandtextanalyticssettings",
    "functionName": "PatchSpeechandtextanalyticsSettings",
    "signature": "PatchSpeechandtextanalyticsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SpeechTextAnalyticsSettingsRequest",
        "required": "true"
      }
    ],
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchSpeechandtextanalyticsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new SpeechTextAnalyticsSettingsRequest(); // SpeechTextAnalyticsSettingsRequest | Speech And Text Analytics Settings\n\n            try\n            { \n                // Patch Speech And Text Analytics Settings\n                SpeechTextAnalyticsSettingsResponse result = apiInstance.PatchSpeechandtextanalyticsSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PatchSpeechandtextanalyticsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticsprograms": {
    "operationId": "postspeechandtextanalyticsprograms",
    "functionName": "PostSpeechandtextanalyticsPrograms",
    "signature": "PostSpeechandtextanalyticsPrograms(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ProgramRequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsProgramsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new ProgramRequest(); // ProgramRequest | The program to create\n\n            try\n            { \n                // Create new Speech & Text Analytics program\n                Program result = apiInstance.PostSpeechandtextanalyticsPrograms(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsPrograms: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticsprogramsgeneraljobs": {
    "operationId": "postspeechandtextanalyticsprogramsgeneraljobs",
    "functionName": "PostSpeechandtextanalyticsProgramsGeneralJobs",
    "signature": "PostSpeechandtextanalyticsProgramsGeneralJobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "GeneralProgramJobRequest",
        "required": "true"
      }
    ],
    "return": "GeneralProgramJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsProgramsGeneralJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new GeneralProgramJobRequest(); // GeneralProgramJobRequest | The general programs job to create\n\n            try\n            { \n                // Create new Speech & Text Analytics general program job\n                GeneralProgramJob result = apiInstance.PostSpeechandtextanalyticsProgramsGeneralJobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsProgramsGeneralJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticsprogramspublishjobs": {
    "operationId": "postspeechandtextanalyticsprogramspublishjobs",
    "functionName": "PostSpeechandtextanalyticsProgramsPublishjobs",
    "signature": "PostSpeechandtextanalyticsProgramsPublishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ProgramJobRequest",
        "required": "true"
      }
    ],
    "return": "ProgramJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsProgramsPublishjobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new ProgramJobRequest(); // ProgramJobRequest | The publish programs job to create\n\n            try\n            { \n                // Create new Speech & Text Analytics publish programs job\n                ProgramJob result = apiInstance.PostSpeechandtextanalyticsProgramsPublishjobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsProgramsPublishjobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticssentimentfeedback": {
    "operationId": "postspeechandtextanalyticssentimentfeedback",
    "functionName": "PostSpeechandtextanalyticsSentimentfeedback",
    "signature": "PostSpeechandtextanalyticsSentimentfeedback(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SentimentFeedback",
        "required": "true"
      }
    ],
    "return": "SentimentFeedback",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsSentimentfeedbackExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new SentimentFeedback(); // SentimentFeedback | The SentimentFeedback to create\n\n            try\n            { \n                // Create a Speech & Text Analytics SentimentFeedback\n                SentimentFeedback result = apiInstance.PostSpeechandtextanalyticsSentimentfeedback(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsSentimentfeedback: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticstopics": {
    "operationId": "postspeechandtextanalyticstopics",
    "functionName": "PostSpeechandtextanalyticsTopics",
    "signature": "PostSpeechandtextanalyticsTopics(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TopicRequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsTopicsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new TopicRequest(); // TopicRequest | The topic to create\n\n            try\n            { \n                // Create new Speech & Text Analytics topic\n                Topic result = apiInstance.PostSpeechandtextanalyticsTopics(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsTopics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postspeechandtextanalyticstopicspublishjobs": {
    "operationId": "postspeechandtextanalyticstopicspublishjobs",
    "functionName": "PostSpeechandtextanalyticsTopicsPublishjobs",
    "signature": "PostSpeechandtextanalyticsTopicsPublishjobs(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TopicJobRequest",
        "required": "true"
      }
    ],
    "return": "TopicJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostSpeechandtextanalyticsTopicsPublishjobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new TopicJobRequest(); // TopicJobRequest | The publish topics job to create\n\n            try\n            { \n                // Create new Speech & Text Analytics publish topics job\n                TopicJob result = apiInstance.PostSpeechandtextanalyticsTopicsPublishjobs(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PostSpeechandtextanalyticsTopicsPublishjobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putspeechandtextanalyticsprogram": {
    "operationId": "putspeechandtextanalyticsprogram",
    "functionName": "PutSpeechandtextanalyticsProgram",
    "signature": "PutSpeechandtextanalyticsProgram(programId, body)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProgramRequest",
        "required": "true"
      }
    ],
    "return": "Program",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutSpeechandtextanalyticsProgramExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var programId = \"programId_example\";  // string | The id of the program\n            var body = new ProgramRequest(); // ProgramRequest | The program to update\n\n            try\n            { \n                // Update existing Speech & Text Analytics program\n                Program result = apiInstance.PutSpeechandtextanalyticsProgram(programId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PutSpeechandtextanalyticsProgram: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putspeechandtextanalyticsprogrammappings": {
    "operationId": "putspeechandtextanalyticsprogrammappings",
    "functionName": "PutSpeechandtextanalyticsProgramMappings",
    "signature": "PutSpeechandtextanalyticsProgramMappings(programId, body)",
    "parameters": [
      {
        "name": "programId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProgramMappingsRequest",
        "required": "true"
      }
    ],
    "return": "ProgramMappings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutSpeechandtextanalyticsProgramMappingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var programId = \"programId_example\";  // string | The id of the program\n            var body = new ProgramMappingsRequest(); // ProgramMappingsRequest | The program to set mappings for\n\n            try\n            { \n                // Set Speech & Text Analytics program mappings to queues and flows\n                ProgramMappings result = apiInstance.PutSpeechandtextanalyticsProgramMappings(programId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PutSpeechandtextanalyticsProgramMappings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putspeechandtextanalyticssettings": {
    "operationId": "putspeechandtextanalyticssettings",
    "functionName": "PutSpeechandtextanalyticsSettings",
    "signature": "PutSpeechandtextanalyticsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "SpeechTextAnalyticsSettingsRequest",
        "required": "true"
      }
    ],
    "return": "SpeechTextAnalyticsSettingsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutSpeechandtextanalyticsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var body = new SpeechTextAnalyticsSettingsRequest(); // SpeechTextAnalyticsSettingsRequest | Speech And Text Analytics Settings\n\n            try\n            { \n                // Update Speech And Text Analytics Settings\n                SpeechTextAnalyticsSettingsResponse result = apiInstance.PutSpeechandtextanalyticsSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PutSpeechandtextanalyticsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putspeechandtextanalyticstopic": {
    "operationId": "putspeechandtextanalyticstopic",
    "functionName": "PutSpeechandtextanalyticsTopic",
    "signature": "PutSpeechandtextanalyticsTopic(topicId, body)",
    "parameters": [
      {
        "name": "topicId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TopicRequest",
        "required": "true"
      }
    ],
    "return": "Topic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutSpeechandtextanalyticsTopicExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new SpeechTextAnalyticsApi();\n            var topicId = \"topicId_example\";  // string | The id of the topic\n            var body = new TopicRequest(); // TopicRequest | The topic to update\n\n            try\n            { \n                // Update existing Speech & Text Analytics topic\n                Topic result = apiInstance.PutSpeechandtextanalyticsTopic(topicId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling SpeechTextAnalytics.PutSpeechandtextanalyticsTopic: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletestationassociateduser": {
    "operationId": "deletestationassociateduser",
    "functionName": "DeleteStationAssociateduser",
    "signature": "DeleteStationAssociateduser(stationId)",
    "parameters": [
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteStationAssociateduserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new StationsApi();\n            var stationId = \"stationId_example\";  // string | Station ID\n\n            try\n            { \n                // Unassigns the user assigned to this station\n                apiInstance.DeleteStationAssociateduser(stationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Stations.DeleteStationAssociateduser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getstation": {
    "operationId": "getstation",
    "functionName": "GetStation",
    "signature": "GetStation(stationId)",
    "parameters": [
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Station",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetStationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new StationsApi();\n            var stationId = \"stationId_example\";  // string | Station ID\n\n            try\n            { \n                // Get station.\n                Station result = apiInstance.GetStation(stationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Stations.GetStation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getstations": {
    "operationId": "getstations",
    "functionName": "GetStations",
    "signature": "GetStations(pageSize, pageNumber, sortBy, name, userSelectable, webRtcUserId, id, lineAppearanceId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "userSelectable",
        "type": "string",
        "required": "false"
      },
      {
        "name": "webRtcUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "string",
        "required": "false"
      },
      {
        "name": "lineAppearanceId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "StationEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetStationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new StationsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var name = \"name_example\";  // string | Name (optional) \n            var userSelectable = \"userSelectable_example\";  // string | True for stations that the user can select otherwise false (optional) \n            var webRtcUserId = \"webRtcUserId_example\";  // string | Filter for the webRtc station of the webRtcUserId (optional) \n            var id = \"id_example\";  // string | Comma separated list of stationIds (optional) \n            var lineAppearanceId = \"lineAppearanceId_example\";  // string | lineAppearanceId (optional) \n\n            try\n            { \n                // Get the list of available stations.\n                StationEntityListing result = apiInstance.GetStations(pageSize, pageNumber, sortBy, name, userSelectable, webRtcUserId, id, lineAppearanceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Stations.GetStations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getstationssettings": {
    "operationId": "getstationssettings",
    "functionName": "GetStationsSettings",
    "signature": "GetStationsSettings()",
    "return": "StationSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetStationsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new StationsApi();\n\n            try\n            { \n                // Get an organization's StationSettings\n                StationSettings result = apiInstance.GetStationsSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Stations.GetStationsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchstationssettings": {
    "operationId": "patchstationssettings",
    "functionName": "PatchStationsSettings",
    "signature": "PatchStationsSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "StationSettings",
        "required": "true"
      }
    ],
    "return": "StationSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchStationsSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new StationsApi();\n            var body = new StationSettings(); // StationSettings | Station settings\n\n            try\n            { \n                // Patch an organization's StationSettings\n                StationSettings result = apiInstance.PatchStationsSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Stations.PatchStationsSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteteam": {
    "operationId": "deleteteam",
    "functionName": "DeleteTeam",
    "signature": "DeleteTeam(teamId)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTeamExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n\n            try\n            { \n                // Delete team\n                apiInstance.DeleteTeam(teamId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.DeleteTeam: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteteammembers": {
    "operationId": "deleteteammembers",
    "functionName": "DeleteTeamMembers",
    "signature": "DeleteTeamMembers(teamId, id)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "id",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTeamMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n            var id = \"id_example\";  // string | Comma separated list of member ids to remove\n\n            try\n            { \n                // Delete team members\n                apiInstance.DeleteTeamMembers(teamId, id);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.DeleteTeamMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getteam": {
    "operationId": "getteam",
    "functionName": "GetTeam",
    "signature": "GetTeam(teamId)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTeamExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n\n            try\n            { \n                // Get team\n                Team result = apiInstance.GetTeam(teamId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.GetTeam: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getteammembers": {
    "operationId": "getteammembers",
    "functionName": "GetTeamMembers",
    "signature": "GetTeamMembers(teamId, pageSize, before, after, expand)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TeamMemberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTeamMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var before = \"before_example\";  // string | The cursor that points to the previous item in the complete list of teams (optional) \n            var after = \"after_example\";  // string | The cursor that points to the next item in the complete list of teams (optional) \n            var expand = \"expand_example\";  // string | Expand the name on each user (optional) \n\n            try\n            { \n                // Get team membership\n                TeamMemberEntityListing result = apiInstance.GetTeamMembers(teamId, pageSize, before, after, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.GetTeamMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getteams": {
    "operationId": "getteams",
    "functionName": "GetTeams",
    "signature": "GetTeams(pageSize, name, after, before, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TeamEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTeamsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var name = \"name_example\";  // string | Return only teams whose names start with this value (case-insensitive matching) (optional) \n            var after = \"after_example\";  // string | The cursor that points to the next item in the complete list of teams (optional) \n            var before = \"before_example\";  // string | The cursor that points to the previous item in the complete list of teams (optional) \n            var expand = \"expand_example\";  // string | Expand the name on each user (optional) \n\n            try\n            { \n                // Get Team listing\n                TeamEntityListing result = apiInstance.GetTeams(pageSize, name, after, before, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.GetTeams: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchteam": {
    "operationId": "patchteam",
    "functionName": "PatchTeam",
    "signature": "PatchTeam(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchTeamExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n            var body = new Team(); // Team | Team\n\n            try\n            { \n                // Update team\n                Team result = apiInstance.PatchTeam(teamId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.PatchTeam: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postteammembers": {
    "operationId": "postteammembers",
    "functionName": "PostTeamMembers",
    "signature": "PostTeamMembers(teamId, body)",
    "parameters": [
      {
        "name": "teamId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TeamMembers",
        "required": "true"
      }
    ],
    "return": "TeamMemberAddListingResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTeamMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var teamId = \"teamId_example\";  // string | Team ID\n            var body = new TeamMembers(); // TeamMembers | TeamMembers\n\n            try\n            { \n                // Add team members\n                TeamMemberAddListingResponse result = apiInstance.PostTeamMembers(teamId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.PostTeamMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postteams": {
    "operationId": "postteams",
    "functionName": "PostTeams",
    "signature": "PostTeams(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Team",
        "required": "true"
      }
    ],
    "return": "Team",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTeamsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TeamsApi();\n            var body = new Team(); // Team | Team\n\n            try\n            { \n                // Create a team\n                Team result = apiInstance.PostTeams(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Teams.PostTeams: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonysiptraces": {
    "operationId": "gettelephonysiptraces",
    "functionName": "GetTelephonySiptraces",
    "signature": "GetTelephonySiptraces(dateStart, dateEnd, callId, toUser, fromUser, conversationId)",
    "parameters": [
      {
        "name": "dateStart",
        "type": "DateTime?",
        "required": "true"
      },
      {
        "name": "dateEnd",
        "type": "DateTime?",
        "required": "true"
      },
      {
        "name": "callId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "toUser",
        "type": "string",
        "required": "false"
      },
      {
        "name": "fromUser",
        "type": "string",
        "required": "false"
      },
      {
        "name": "conversationId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "SipSearchResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonySiptracesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyApi();\n            var dateStart = new DateTime();  // DateTime? | Start date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Zvar dateStart = 2013-10-20T19:20:30+01:00;  // DateTime? | Start date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n            var dateEnd = new DateTime();  // DateTime? | End date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Zvar dateEnd = 2013-10-20T19:20:30+01:00;  // DateTime? | End date of the search. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z\n            var callId = \"callId_example\";  // string | unique identification of the placed call (optional) \n            var toUser = \"toUser_example\";  // string | User to who the call was placed (optional) \n            var fromUser = \"fromUser_example\";  // string | user who placed the call (optional) \n            var conversationId = \"conversationId_example\";  // string | Unique identification of the conversation (optional) \n\n            try\n            { \n                // Fetch SIP metadata\n                SipSearchResult result = apiInstance.GetTelephonySiptraces(dateStart, dateEnd, callId, toUser, fromUser, conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Telephony.GetTelephonySiptraces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonysiptracesdownloaddownloadid": {
    "operationId": "gettelephonysiptracesdownloaddownloadid",
    "functionName": "GetTelephonySiptracesDownloadDownloadId",
    "signature": "GetTelephonySiptracesDownloadDownloadId(downloadId)",
    "parameters": [
      {
        "name": "downloadId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SignedUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonySiptracesDownloadDownloadIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyApi();\n            var downloadId = \"downloadId_example\";  // string | unique id for the downloaded file in S3\n\n            try\n            { \n                // Get signed S3 URL for a pcap download\n                SignedUrlResponse result = apiInstance.GetTelephonySiptracesDownloadDownloadId(downloadId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Telephony.GetTelephonySiptracesDownloadDownloadId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonysiptracesdownload": {
    "operationId": "posttelephonysiptracesdownload",
    "functionName": "PostTelephonySiptracesDownload",
    "signature": "PostTelephonySiptracesDownload(sIPSearchPublicRequest)",
    "parameters": [
      {
        "name": "sIPSearchPublicRequest",
        "type": "SIPSearchPublicRequest",
        "required": "true"
      }
    ],
    "return": "SipDownloadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonySiptracesDownloadExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyApi();\n            var sIPSearchPublicRequest = new SIPSearchPublicRequest(); // SIPSearchPublicRequest | \n\n            try\n            { \n                // Request a download of a pcap file to S3\n                SipDownloadResponse result = apiInstance.PostTelephonySiptracesDownload(sIPSearchPublicRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Telephony.PostTelephonySiptracesDownload: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedge": {
    "operationId": "deletetelephonyprovidersedge",
    "functionName": "DeleteTelephonyProvidersEdge",
    "signature": "DeleteTelephonyProvidersEdge(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Delete a edge.\n                apiInstance.DeleteTelephonyProvidersEdge(edgeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdge: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgelogicalinterface": {
    "operationId": "deletetelephonyprovidersedgelogicalinterface",
    "functionName": "DeleteTelephonyProvidersEdgeLogicalinterface",
    "signature": "DeleteTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgeLogicalinterfaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var interfaceId = \"interfaceId_example\";  // string | Interface ID\n\n            try\n            { \n                // Delete an edge logical interface\n                apiInstance.DeleteTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgeLogicalinterface: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesoftwareupdate": {
    "operationId": "deletetelephonyprovidersedgesoftwareupdate",
    "functionName": "DeleteTelephonyProvidersEdgeSoftwareupdate",
    "signature": "DeleteTelephonyProvidersEdgeSoftwareupdate(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgeSoftwareupdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Cancels any in-progress update for this edge.\n                apiInstance.DeleteTelephonyProvidersEdgeSoftwareupdate(edgeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgeSoftwareupdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgescertificateauthority": {
    "operationId": "deletetelephonyprovidersedgescertificateauthority",
    "functionName": "DeleteTelephonyProvidersEdgesCertificateauthority",
    "signature": "DeleteTelephonyProvidersEdgesCertificateauthority(certificateId)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesCertificateauthorityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var certificateId = \"certificateId_example\";  // string | Certificate ID\n\n            try\n            { \n                // Delete a certificate authority.\n                apiInstance.DeleteTelephonyProvidersEdgesCertificateauthority(certificateId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesCertificateauthority: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesdidpool": {
    "operationId": "deletetelephonyprovidersedgesdidpool",
    "functionName": "DeleteTelephonyProvidersEdgesDidpool",
    "signature": "DeleteTelephonyProvidersEdgesDidpool(didPoolId)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesDidpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var didPoolId = \"didPoolId_example\";  // string | DID pool ID\n\n            try\n            { \n                // Delete a DID Pool by ID.\n                apiInstance.DeleteTelephonyProvidersEdgesDidpool(didPoolId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesDidpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesedgegroup": {
    "operationId": "deletetelephonyprovidersedgesedgegroup",
    "functionName": "DeleteTelephonyProvidersEdgesEdgegroup",
    "signature": "DeleteTelephonyProvidersEdgesEdgegroup(edgeGroupId)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesEdgegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeGroupId = \"edgeGroupId_example\";  // string | Edge group ID\n\n            try\n            { \n                // Delete an edge group.\n                apiInstance.DeleteTelephonyProvidersEdgesEdgegroup(edgeGroupId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesEdgegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesextensionpool": {
    "operationId": "deletetelephonyprovidersedgesextensionpool",
    "functionName": "DeleteTelephonyProvidersEdgesExtensionpool",
    "signature": "DeleteTelephonyProvidersEdgesExtensionpool(extensionPoolId)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesExtensionpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var extensionPoolId = \"extensionPoolId_example\";  // string | Extension pool ID\n\n            try\n            { \n                // Delete an extension pool by ID\n                apiInstance.DeleteTelephonyProvidersEdgesExtensionpool(extensionPoolId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesExtensionpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesoutboundroute": {
    "operationId": "deletetelephonyprovidersedgesoutboundroute",
    "functionName": "DeleteTelephonyProvidersEdgesOutboundroute",
    "signature": "DeleteTelephonyProvidersEdgesOutboundroute(outboundRouteId)",
    "parameters": [
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n\n            try\n            { \n                // Delete Outbound Route\n                apiInstance.DeleteTelephonyProvidersEdgesOutboundroute(outboundRouteId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesphone": {
    "operationId": "deletetelephonyprovidersedgesphone",
    "functionName": "DeleteTelephonyProvidersEdgesPhone",
    "signature": "DeleteTelephonyProvidersEdgesPhone(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesPhoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneId = \"phoneId_example\";  // string | Phone ID\n\n            try\n            { \n                // Delete a Phone by ID\n                apiInstance.DeleteTelephonyProvidersEdgesPhone(phoneId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesPhone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgesphonebasesetting": {
    "operationId": "deletetelephonyprovidersedgesphonebasesetting",
    "functionName": "DeleteTelephonyProvidersEdgesPhonebasesetting",
    "signature": "DeleteTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesPhonebasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneBaseId = \"phoneBaseId_example\";  // string | Phone base ID\n\n            try\n            { \n                // Delete a Phone Base Settings by ID\n                apiInstance.DeleteTelephonyProvidersEdgesPhonebasesetting(phoneBaseId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesPhonebasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgessite": {
    "operationId": "deletetelephonyprovidersedgessite",
    "functionName": "DeleteTelephonyProvidersEdgesSite",
    "signature": "DeleteTelephonyProvidersEdgesSite(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesSiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n\n            try\n            { \n                // Delete a Site by ID\n                apiInstance.DeleteTelephonyProvidersEdgesSite(siteId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesSite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgessiteoutboundroute": {
    "operationId": "deletetelephonyprovidersedgessiteoutboundroute",
    "functionName": "DeleteTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "DeleteTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesSiteOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n\n            try\n            { \n                // Delete Outbound Route\n                apiInstance.DeleteTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesSiteOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetelephonyprovidersedgestrunkbasesetting": {
    "operationId": "deletetelephonyprovidersedgestrunkbasesetting",
    "functionName": "DeleteTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "DeleteTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTelephonyProvidersEdgesTrunkbasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkBaseSettingsId = \"trunkBaseSettingsId_example\";  // string | Trunk Base ID\n\n            try\n            { \n                // Delete a Trunk Base Settings object by ID\n                apiInstance.DeleteTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.DeleteTelephonyProvidersEdgesTrunkbasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconfigurationschemasedgesvnext": {
    "operationId": "getconfigurationschemasedgesvnext",
    "functionName": "GetConfigurationSchemasEdgesVnext",
    "signature": "GetConfigurationSchemasEdgesVnext(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SchemaCategoryEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConfigurationSchemasEdgesVnextExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Lists available schema categories (Deprecated)\n                SchemaCategoryEntityListing result = apiInstance.GetConfigurationSchemasEdgesVnext(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetConfigurationSchemasEdgesVnext: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconfigurationschemasedgesvnextschemacategory": {
    "operationId": "getconfigurationschemasedgesvnextschemacategory",
    "functionName": "GetConfigurationSchemasEdgesVnextSchemaCategory",
    "signature": "GetConfigurationSchemasEdgesVnextSchemaCategory(schemaCategory, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "schemaCategory",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SchemaReferenceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConfigurationSchemasEdgesVnextSchemaCategoryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var schemaCategory = \"schemaCategory_example\";  // string | Schema category\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List schemas of a specific category (Deprecated)\n                SchemaReferenceEntityListing result = apiInstance.GetConfigurationSchemasEdgesVnextSchemaCategory(schemaCategory, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetConfigurationSchemasEdgesVnextSchemaCategory: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconfigurationschemasedgesvnextschemacategoryschematype": {
    "operationId": "getconfigurationschemasedgesvnextschemacategoryschematype",
    "functionName": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaType",
    "signature": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaType(schemaCategory, schemaType, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "schemaCategory",
        "type": "string",
        "required": "true"
      },
      {
        "name": "schemaType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "SchemaReferenceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var schemaCategory = \"schemaCategory_example\";  // string | Schema category\n            var schemaType = \"schemaType_example\";  // string | Schema type\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List schemas of a specific category (Deprecated)\n                SchemaReferenceEntityListing result = apiInstance.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaType(schemaCategory, schemaType, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaType: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconfigurationschemasedgesvnextschemacategoryschematypeschemaid": {
    "operationId": "getconfigurationschemasedgesvnextschemacategoryschematypeschemaid",
    "functionName": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaId",
    "signature": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaId(schemaCategory, schemaType, schemaId)",
    "parameters": [
      {
        "name": "schemaCategory",
        "type": "string",
        "required": "true"
      },
      {
        "name": "schemaType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Organization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var schemaCategory = \"schemaCategory_example\";  // string | Schema category\n            var schemaType = \"schemaType_example\";  // string | Schema type\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n\n            try\n            { \n                // Get a json schema (Deprecated)\n                Organization result = apiInstance.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaId(schemaCategory, schemaType, schemaId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getconfigurationschemasedgesvnextschemacategoryschematypeschemaidextensiontypemetadataid": {
    "operationId": "getconfigurationschemasedgesvnextschemacategoryschematypeschemaidextensiontypemetadataid",
    "functionName": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataId",
    "signature": "GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataId(schemaCategory, schemaType, schemaId, extensionType, metadataId, type)",
    "parameters": [
      {
        "name": "schemaCategory",
        "type": "string",
        "required": "true"
      },
      {
        "name": "schemaType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "schemaId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "extensionType",
        "type": "string",
        "required": "true"
      },
      {
        "name": "metadataId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "type",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "Organization",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var schemaCategory = \"schemaCategory_example\";  // string | Schema category\n            var schemaType = \"schemaType_example\";  // string | Schema type\n            var schemaId = \"schemaId_example\";  // string | Schema ID\n            var extensionType = \"extensionType_example\";  // string | extension\n            var metadataId = \"metadataId_example\";  // string | Metadata ID\n            var type = \"type_example\";  // string | Type (optional) \n\n            try\n            { \n                // Get metadata for a schema (Deprecated)\n                Organization result = apiInstance.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataId(schemaCategory, schemaType, schemaId, extensionType, metadataId, type);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetConfigurationSchemasEdgesVnextSchemaCategorySchemaTypeSchemaIdExtensionTypeMetadataId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedge": {
    "operationId": "gettelephonyprovidersedge",
    "functionName": "GetTelephonyProvidersEdge",
    "signature": "GetTelephonyProvidersEdge(edgeId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Edge",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n\n            try\n            { \n                // Get edge.\n                Edge result = apiInstance.GetTelephonyProvidersEdge(edgeId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdge: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgediagnosticnslookup": {
    "operationId": "gettelephonyprovidersedgediagnosticnslookup",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticNslookup",
    "signature": "GetTelephonyProvidersEdgeDiagnosticNslookup(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeDiagnosticNslookupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Get networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnosticResponse result = apiInstance.GetTelephonyProvidersEdgeDiagnosticNslookup(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeDiagnosticNslookup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgediagnosticping": {
    "operationId": "gettelephonyprovidersedgediagnosticping",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticPing",
    "signature": "GetTelephonyProvidersEdgeDiagnosticPing(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeDiagnosticPingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Get networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnosticResponse result = apiInstance.GetTelephonyProvidersEdgeDiagnosticPing(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeDiagnosticPing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgediagnosticroute": {
    "operationId": "gettelephonyprovidersedgediagnosticroute",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticRoute",
    "signature": "GetTelephonyProvidersEdgeDiagnosticRoute(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeDiagnosticRouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Get networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnosticResponse result = apiInstance.GetTelephonyProvidersEdgeDiagnosticRoute(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeDiagnosticRoute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgediagnostictracepath": {
    "operationId": "gettelephonyprovidersedgediagnostictracepath",
    "functionName": "GetTelephonyProvidersEdgeDiagnosticTracepath",
    "signature": "GetTelephonyProvidersEdgeDiagnosticTracepath(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnosticResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeDiagnosticTracepathExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Get networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnosticResponse result = apiInstance.GetTelephonyProvidersEdgeDiagnosticTracepath(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeDiagnosticTracepath: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeline": {
    "operationId": "gettelephonyprovidersedgeline",
    "functionName": "GetTelephonyProvidersEdgeLine",
    "signature": "GetTelephonyProvidersEdgeLine(edgeId, lineId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "lineId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeLine",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeLineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var lineId = \"lineId_example\";  // string | Line ID\n\n            try\n            { \n                // Get line\n                EdgeLine result = apiInstance.GetTelephonyProvidersEdgeLine(edgeId, lineId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeLine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgelines": {
    "operationId": "gettelephonyprovidersedgelines",
    "functionName": "GetTelephonyProvidersEdgeLines",
    "signature": "GetTelephonyProvidersEdgeLines(edgeId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "EdgeLineEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeLinesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get the list of lines.\n                EdgeLineEntityListing result = apiInstance.GetTelephonyProvidersEdgeLines(edgeId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeLines: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgelogicalinterface": {
    "operationId": "gettelephonyprovidersedgelogicalinterface",
    "functionName": "GetTelephonyProvidersEdgeLogicalinterface",
    "signature": "GetTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeLogicalinterfaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var interfaceId = \"interfaceId_example\";  // string | Interface ID\n            var expand = new List<string>(); // List<string> | Field to expand in the response (optional) \n\n            try\n            { \n                // Get an edge logical interface\n                DomainLogicalInterface result = apiInstance.GetTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeLogicalinterface: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgelogicalinterfaces": {
    "operationId": "gettelephonyprovidersedgelogicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgeLogicalinterfaces",
    "signature": "GetTelephonyProvidersEdgeLogicalinterfaces(edgeId, expand)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LogicalInterfaceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeLogicalinterfacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var expand = new List<string>(); // List<string> | Field to expand in the response (optional) \n\n            try\n            { \n                // Get edge logical interfaces.\n                LogicalInterfaceEntityListing result = apiInstance.GetTelephonyProvidersEdgeLogicalinterfaces(edgeId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeLogicalinterfaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgelogsjob": {
    "operationId": "gettelephonyprovidersedgelogsjob",
    "functionName": "GetTelephonyProvidersEdgeLogsJob",
    "signature": "GetTelephonyProvidersEdgeLogsJob(edgeId, jobId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeLogsJob",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeLogsJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var jobId = \"jobId_example\";  // string | Job ID\n\n            try\n            { \n                // Get an Edge logs job.\n                EdgeLogsJob result = apiInstance.GetTelephonyProvidersEdgeLogsJob(edgeId, jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeLogsJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgemetrics": {
    "operationId": "gettelephonyprovidersedgemetrics",
    "functionName": "GetTelephonyProvidersEdgeMetrics",
    "signature": "GetTelephonyProvidersEdgeMetrics(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeMetrics",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Get the edge metrics.\n                EdgeMetrics result = apiInstance.GetTelephonyProvidersEdgeMetrics(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgephysicalinterface": {
    "operationId": "gettelephonyprovidersedgephysicalinterface",
    "functionName": "GetTelephonyProvidersEdgePhysicalinterface",
    "signature": "GetTelephonyProvidersEdgePhysicalinterface(edgeId, interfaceId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainPhysicalInterface",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgePhysicalinterfaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var interfaceId = \"interfaceId_example\";  // string | Interface ID\n\n            try\n            { \n                // Get edge physical interface.\n                DomainPhysicalInterface result = apiInstance.GetTelephonyProvidersEdgePhysicalinterface(edgeId, interfaceId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgePhysicalinterface: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgephysicalinterfaces": {
    "operationId": "gettelephonyprovidersedgephysicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgePhysicalinterfaces",
    "signature": "GetTelephonyProvidersEdgePhysicalinterfaces(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PhysicalInterfaceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgePhysicalinterfacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Retrieve a list of all configured physical interfaces from a specific edge.\n                PhysicalInterfaceEntityListing result = apiInstance.GetTelephonyProvidersEdgePhysicalinterfaces(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgePhysicalinterfaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesetuppackage": {
    "operationId": "gettelephonyprovidersedgesetuppackage",
    "functionName": "GetTelephonyProvidersEdgeSetuppackage",
    "signature": "GetTelephonyProvidersEdgeSetuppackage(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "VmPairingInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeSetuppackageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Get the setup package for a locally deployed edge device. This is needed to complete the setup process for the virtual edge.\n                VmPairingInfo result = apiInstance.GetTelephonyProvidersEdgeSetuppackage(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeSetuppackage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesoftwareupdate": {
    "operationId": "gettelephonyprovidersedgesoftwareupdate",
    "functionName": "GetTelephonyProvidersEdgeSoftwareupdate",
    "signature": "GetTelephonyProvidersEdgeSoftwareupdate(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareUpdateDto",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeSoftwareupdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Gets software update status information about any edge.\n                DomainEdgeSoftwareUpdateDto result = apiInstance.GetTelephonyProvidersEdgeSoftwareupdate(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeSoftwareupdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesoftwareversions": {
    "operationId": "gettelephonyprovidersedgesoftwareversions",
    "functionName": "GetTelephonyProvidersEdgeSoftwareversions",
    "signature": "GetTelephonyProvidersEdgeSoftwareversions(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareVersionDtoEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeSoftwareversionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n\n            try\n            { \n                // Gets all the available software versions for this edge.\n                DomainEdgeSoftwareVersionDtoEntityListing result = apiInstance.GetTelephonyProvidersEdgeSoftwareversions(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeSoftwareversions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgetrunks": {
    "operationId": "gettelephonyprovidersedgetrunks",
    "functionName": "GetTelephonyProvidersEdgeTrunks",
    "signature": "GetTelephonyProvidersEdgeTrunks(edgeId, pageNumber, pageSize, sortBy, sortOrder, trunkBaseId, trunkType)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkBaseId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TrunkEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgeTrunksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var trunkBaseId = \"trunkBaseId_example\";  // string | Filter by Trunk Base Ids (optional) \n            var trunkType = \"trunkType_example\";  // string | Filter by a Trunk type (optional) \n\n            try\n            { \n                // Get the list of available trunks for the given Edge.\n                TrunkEntityListing result = apiInstance.GetTelephonyProvidersEdgeTrunks(edgeId, pageNumber, pageSize, sortBy, sortOrder, trunkBaseId, trunkType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgeTrunks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedges": {
    "operationId": "gettelephonyprovidersedges",
    "functionName": "GetTelephonyProvidersEdges",
    "signature": "GetTelephonyProvidersEdges(pageSize, pageNumber, name, siteId, edgeGroupId, sortBy, managed)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "EdgeEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var siteId = \"siteId_example\";  // string | Filter by site.id (optional) \n            var edgeGroupId = \"edgeGroupId_example\";  // string | Filter by edgeGroup.id (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var managed = true;  // bool? | Filter by managed (optional) \n\n            try\n            { \n                // Get the list of edges.\n                EdgeEntityListing result = apiInstance.GetTelephonyProvidersEdges(pageSize, pageNumber, name, siteId, edgeGroupId, sortBy, managed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdges: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesavailablelanguages": {
    "operationId": "gettelephonyprovidersedgesavailablelanguages",
    "functionName": "GetTelephonyProvidersEdgesAvailablelanguages",
    "signature": "GetTelephonyProvidersEdgesAvailablelanguages()",
    "return": "AvailableLanguageList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesAvailablelanguagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n\n            try\n            { \n                // Get the list of available languages.\n                AvailableLanguageList result = apiInstance.GetTelephonyProvidersEdgesAvailablelanguages();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesAvailablelanguages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgescertificateauthorities": {
    "operationId": "gettelephonyprovidersedgescertificateauthorities",
    "functionName": "GetTelephonyProvidersEdgesCertificateauthorities",
    "signature": "GetTelephonyProvidersEdgesCertificateauthorities()",
    "return": "CertificateAuthorityEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesCertificateauthoritiesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n\n            try\n            { \n                // Get the list of certificate authorities.\n                CertificateAuthorityEntityListing result = apiInstance.GetTelephonyProvidersEdgesCertificateauthorities();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesCertificateauthorities: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgescertificateauthority": {
    "operationId": "gettelephonyprovidersedgescertificateauthority",
    "functionName": "GetTelephonyProvidersEdgesCertificateauthority",
    "signature": "GetTelephonyProvidersEdgesCertificateauthority(certificateId)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesCertificateauthorityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var certificateId = \"certificateId_example\";  // string | Certificate ID\n\n            try\n            { \n                // Get a certificate authority.\n                DomainCertificateAuthority result = apiInstance.GetTelephonyProvidersEdgesCertificateauthority(certificateId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesCertificateauthority: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesdid": {
    "operationId": "gettelephonyprovidersedgesdid",
    "functionName": "GetTelephonyProvidersEdgesDid",
    "signature": "GetTelephonyProvidersEdgesDid(didId)",
    "parameters": [
      {
        "name": "didId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DID",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesDidExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var didId = \"didId_example\";  // string | DID ID\n\n            try\n            { \n                // Get a DID by ID.\n                DID result = apiInstance.GetTelephonyProvidersEdgesDid(didId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesDid: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesdidpool": {
    "operationId": "gettelephonyprovidersedgesdidpool",
    "functionName": "GetTelephonyProvidersEdgesDidpool",
    "signature": "GetTelephonyProvidersEdgesDidpool(didPoolId)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesDidpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var didPoolId = \"didPoolId_example\";  // string | DID pool ID\n\n            try\n            { \n                // Get a DID Pool by ID.\n                DIDPool result = apiInstance.GetTelephonyProvidersEdgesDidpool(didPoolId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesDidpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesdidpools": {
    "operationId": "gettelephonyprovidersedgesdidpools",
    "functionName": "GetTelephonyProvidersEdgesDidpools",
    "signature": "GetTelephonyProvidersEdgesDidpools(pageSize, pageNumber, sortBy, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DIDPoolEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesDidpoolsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"number\")\n            var id = new List<string>(); // List<string> | Filter by a specific list of ID's (optional) \n\n            try\n            { \n                // Get a listing of DID Pools\n                DIDPoolEntityListing result = apiInstance.GetTelephonyProvidersEdgesDidpools(pageSize, pageNumber, sortBy, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesDidpools: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesdidpoolsdids": {
    "operationId": "gettelephonyprovidersedgesdidpoolsdids",
    "functionName": "GetTelephonyProvidersEdgesDidpoolsDids",
    "signature": "GetTelephonyProvidersEdgesDidpoolsDids(type, id, numberMatch, pageSize, pageNumber, sortOrder)",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "required": "true"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "numberMatch",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "DIDNumberEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesDidpoolsDidsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var type = \"type_example\";  // string | The type of numbers to return.\n            var id = new List<string>(); // List<string> | Filter by a specific list of DID Pools.  If this is not provided, numbers from all DID Pools will be returned. (optional) \n            var numberMatch = \"numberMatch_example\";  // string | A number to filter the results by. (optional) \n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ascending\")\n\n            try\n            { \n                // Get a listing of unassigned and/or assigned numbers in a set of DID Pools.\n                DIDNumberEntityListing result = apiInstance.GetTelephonyProvidersEdgesDidpoolsDids(type, id, numberMatch, pageSize, pageNumber, sortOrder);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesDidpoolsDids: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesdids": {
    "operationId": "gettelephonyprovidersedgesdids",
    "functionName": "GetTelephonyProvidersEdgesDids",
    "signature": "GetTelephonyProvidersEdgesDids(pageSize, pageNumber, sortBy, sortOrder, phoneNumber, ownerId, didPoolId, id)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneNumber",
        "type": "string",
        "required": "false"
      },
      {
        "name": "ownerId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "didPoolId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DIDEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesDidsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"number\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var phoneNumber = \"phoneNumber_example\";  // string | Filter by phoneNumber (optional) \n            var ownerId = \"ownerId_example\";  // string | Filter by the owner of a phone number (optional) \n            var didPoolId = \"didPoolId_example\";  // string | Filter by the DID Pool assignment (optional) \n            var id = new List<string>(); // List<string> | Filter by a specific list of ID's (optional) \n\n            try\n            { \n                // Get a listing of DIDs\n                DIDEntityListing result = apiInstance.GetTelephonyProvidersEdgesDids(pageSize, pageNumber, sortBy, sortOrder, phoneNumber, ownerId, didPoolId, id);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesDids: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesedgegroup": {
    "operationId": "gettelephonyprovidersedgesedgegroup",
    "functionName": "GetTelephonyProvidersEdgesEdgegroup",
    "signature": "GetTelephonyProvidersEdgesEdgegroup(edgeGroupId, expand)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "EdgeGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesEdgegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeGroupId = \"edgeGroupId_example\";  // string | Edge group ID\n            var expand = new List<string>(); // List<string> | Fields to expand in the response (optional) \n\n            try\n            { \n                // Get edge group.\n                EdgeGroup result = apiInstance.GetTelephonyProvidersEdgesEdgegroup(edgeGroupId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesEdgegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesedgegroupedgetrunkbase": {
    "operationId": "gettelephonyprovidersedgesedgegroupedgetrunkbase",
    "functionName": "GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase",
    "signature": "GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId)",
    "parameters": [
      {
        "name": "edgegroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "edgetrunkbaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "EdgeTrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesEdgegroupEdgetrunkbaseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgegroupId = \"edgegroupId_example\";  // string | Edge Group ID\n            var edgetrunkbaseId = \"edgetrunkbaseId_example\";  // string | Edge Trunk Base ID\n\n            try\n            { \n                // Gets the edge trunk base associated with the edge group\n                EdgeTrunkBase result = apiInstance.GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesEdgegroupEdgetrunkbase: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesedgegroups": {
    "operationId": "gettelephonyprovidersedgesedgegroups",
    "functionName": "GetTelephonyProvidersEdgesEdgegroups",
    "signature": "GetTelephonyProvidersEdgesEdgegroups(pageSize, pageNumber, name, sortBy, managed)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "EdgeGroupEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesEdgegroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var managed = true;  // bool? | Filter by managed (optional) \n\n            try\n            { \n                // Get the list of edge groups.\n                EdgeGroupEntityListing result = apiInstance.GetTelephonyProvidersEdgesEdgegroups(pageSize, pageNumber, name, sortBy, managed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesEdgegroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesedgeversionreport": {
    "operationId": "gettelephonyprovidersedgesedgeversionreport",
    "functionName": "GetTelephonyProvidersEdgesEdgeversionreport",
    "signature": "GetTelephonyProvidersEdgesEdgeversionreport()",
    "return": "EdgeVersionReport",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesEdgeversionreportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n\n            try\n            { \n                // Get the edge version report.\n                EdgeVersionReport result = apiInstance.GetTelephonyProvidersEdgesEdgeversionreport();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesEdgeversionreport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesexpired": {
    "operationId": "gettelephonyprovidersedgesexpired",
    "functionName": "GetTelephonyProvidersEdgesExpired",
    "signature": "GetTelephonyProvidersEdgesExpired()",
    "return": "ExpiredEdgeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExpiredExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n\n            try\n            { \n                // List of edges more than 4 edge versions behind the latest software.\n                ExpiredEdgeListing result = apiInstance.GetTelephonyProvidersEdgesExpired();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesExpired: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesextension": {
    "operationId": "gettelephonyprovidersedgesextension",
    "functionName": "GetTelephonyProvidersEdgesExtension",
    "signature": "GetTelephonyProvidersEdgesExtension(extensionId)",
    "parameters": [
      {
        "name": "extensionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Extension",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExtensionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var extensionId = \"extensionId_example\";  // string | Extension ID\n\n            try\n            { \n                // Get an extension by ID.\n                Extension result = apiInstance.GetTelephonyProvidersEdgesExtension(extensionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesExtension: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesextensionpool": {
    "operationId": "gettelephonyprovidersedgesextensionpool",
    "functionName": "GetTelephonyProvidersEdgesExtensionpool",
    "signature": "GetTelephonyProvidersEdgesExtensionpool(extensionPoolId)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExtensionpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var extensionPoolId = \"extensionPoolId_example\";  // string | Extension pool ID\n\n            try\n            { \n                // Get an extension pool by ID\n                ExtensionPool result = apiInstance.GetTelephonyProvidersEdgesExtensionpool(extensionPoolId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesExtensionpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesextensionpools": {
    "operationId": "gettelephonyprovidersedgesextensionpools",
    "functionName": "GetTelephonyProvidersEdgesExtensionpools",
    "signature": "GetTelephonyProvidersEdgesExtensionpools(pageSize, pageNumber, sortBy, number)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "number",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ExtensionPoolEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExtensionpoolsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional) \n            var number = \"number_example\";  // string | Deprecated, filtering by number not supported (optional) \n\n            try\n            { \n                // Get a listing of extension pools\n                ExtensionPoolEntityListing result = apiInstance.GetTelephonyProvidersEdgesExtensionpools(pageSize, pageNumber, sortBy, number);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesExtensionpools: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesextensions": {
    "operationId": "gettelephonyprovidersedgesextensions",
    "functionName": "GetTelephonyProvidersEdgesExtensions",
    "signature": "GetTelephonyProvidersEdgesExtensions(pageSize, pageNumber, sortBy, sortOrder, number)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "number",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ExtensionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesExtensionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"number\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var number = \"number_example\";  // string | Filter by number (optional) \n\n            try\n            { \n                // Get a listing of extensions\n                ExtensionEntityListing result = apiInstance.GetTelephonyProvidersEdgesExtensions(pageSize, pageNumber, sortBy, sortOrder, number);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesExtensions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesline": {
    "operationId": "gettelephonyprovidersedgesline",
    "functionName": "GetTelephonyProvidersEdgesLine",
    "signature": "GetTelephonyProvidersEdgesLine(lineId)",
    "parameters": [
      {
        "name": "lineId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var lineId = \"lineId_example\";  // string | Line ID\n\n            try\n            { \n                // Get a Line by ID\n                Line result = apiInstance.GetTelephonyProvidersEdgesLine(lineId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeslinebasesetting": {
    "operationId": "gettelephonyprovidersedgeslinebasesetting",
    "functionName": "GetTelephonyProvidersEdgesLinebasesetting",
    "signature": "GetTelephonyProvidersEdgesLinebasesetting(lineBaseId)",
    "parameters": [
      {
        "name": "lineBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "LineBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLinebasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var lineBaseId = \"lineBaseId_example\";  // string | Line base ID\n\n            try\n            { \n                // Get a line base settings object by ID\n                LineBase result = apiInstance.GetTelephonyProvidersEdgesLinebasesetting(lineBaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLinebasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeslinebasesettings": {
    "operationId": "gettelephonyprovidersedgeslinebasesettings",
    "functionName": "GetTelephonyProvidersEdgesLinebasesettings",
    "signature": "GetTelephonyProvidersEdgesLinebasesettings(pageNumber, pageSize, sortBy, sortOrder, expand)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LineBaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLinebasesettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n\n            try\n            { \n                // Get a listing of line base settings objects\n                LineBaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesLinebasesettings(pageNumber, pageSize, sortBy, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLinebasesettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeslines": {
    "operationId": "gettelephonyprovidersedgeslines",
    "functionName": "GetTelephonyProvidersEdgesLines",
    "signature": "GetTelephonyProvidersEdgesLines(pageSize, pageNumber, name, sortBy, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LineEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLinesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n\n            try\n            { \n                // Get a list of Lines\n                LineEntityListing result = apiInstance.GetTelephonyProvidersEdgesLines(pageSize, pageNumber, name, sortBy, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLines: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeslinestemplate": {
    "operationId": "gettelephonyprovidersedgeslinestemplate",
    "functionName": "GetTelephonyProvidersEdgesLinesTemplate",
    "signature": "GetTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId)",
    "parameters": [
      {
        "name": "lineBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Line",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLinesTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var lineBaseSettingsId = \"lineBaseSettingsId_example\";  // string | The id of a Line Base Settings object upon which to base this Line\n\n            try\n            { \n                // Get a Line instance template based on a Line Base Settings object. This object can then be modified and saved as a new Line instance\n                Line result = apiInstance.GetTelephonyProvidersEdgesLinesTemplate(lineBaseSettingsId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLinesTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgeslogicalinterfaces": {
    "operationId": "gettelephonyprovidersedgeslogicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgesLogicalinterfaces",
    "signature": "GetTelephonyProvidersEdgesLogicalinterfaces(edgeIds, expand)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "LogicalInterfaceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesLogicalinterfacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeIds = \"edgeIds_example\";  // string | Comma separated list of Edge Id's\n            var expand = new List<string>(); // List<string> | Field to expand in the response (optional) \n\n            try\n            { \n                // Get edge logical interfaces.\n                LogicalInterfaceEntityListing result = apiInstance.GetTelephonyProvidersEdgesLogicalinterfaces(edgeIds, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesLogicalinterfaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesmetrics": {
    "operationId": "gettelephonyprovidersedgesmetrics",
    "functionName": "GetTelephonyProvidersEdgesMetrics",
    "signature": "GetTelephonyProvidersEdgesMetrics(edgeIds)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<EdgeMetrics>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeIds = \"edgeIds_example\";  // string | Comma separated list of Edge Id's\n\n            try\n            { \n                // Get the metrics for a list of edges.\n                List<EdgeMetrics> result = apiInstance.GetTelephonyProvidersEdgesMetrics(edgeIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesoutboundroute": {
    "operationId": "gettelephonyprovidersedgesoutboundroute",
    "functionName": "GetTelephonyProvidersEdgesOutboundroute",
    "signature": "GetTelephonyProvidersEdgesOutboundroute(outboundRouteId)",
    "parameters": [
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n\n            try\n            { \n                // Get outbound route\n                OutboundRoute result = apiInstance.GetTelephonyProvidersEdgesOutboundroute(outboundRouteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesoutboundroutes": {
    "operationId": "gettelephonyprovidersedgesoutboundroutes",
    "functionName": "GetTelephonyProvidersEdgesOutboundroutes",
    "signature": "GetTelephonyProvidersEdgesOutboundroutes(pageSize, pageNumber, name, siteId, externalTrunkBasesIds, sortBy)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "externalTrunkBasesIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OutboundRouteEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesOutboundroutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var siteId = \"siteId_example\";  // string | Filter by site.id (optional) \n            var externalTrunkBasesIds = \"externalTrunkBasesIds_example\";  // string | Filter by externalTrunkBases.ids (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n\n            try\n            { \n                // Get outbound routes\n                OutboundRouteEntityListing result = apiInstance.GetTelephonyProvidersEdgesOutboundroutes(pageSize, pageNumber, name, siteId, externalTrunkBasesIds, sortBy);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesOutboundroutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphone": {
    "operationId": "gettelephonyprovidersedgesphone",
    "functionName": "GetTelephonyProvidersEdgesPhone",
    "signature": "GetTelephonyProvidersEdgesPhone(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneId = \"phoneId_example\";  // string | Phone ID\n\n            try\n            { \n                // Get a Phone by ID\n                Phone result = apiInstance.GetTelephonyProvidersEdgesPhone(phoneId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphonebasesetting": {
    "operationId": "gettelephonyprovidersedgesphonebasesetting",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesetting",
    "signature": "GetTelephonyProvidersEdgesPhonebasesetting(phoneBaseId)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonebasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneBaseId = \"phoneBaseId_example\";  // string | Phone base ID\n\n            try\n            { \n                // Get a Phone Base Settings object by ID\n                PhoneBase result = apiInstance.GetTelephonyProvidersEdgesPhonebasesetting(phoneBaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhonebasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphonebasesettings": {
    "operationId": "gettelephonyprovidersedgesphonebasesettings",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettings",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettings(pageSize, pageNumber, sortBy, sortOrder, expand, name)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "PhoneBaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonebasesettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n            var name = \"name_example\";  // string | Name (optional) \n\n            try\n            { \n                // Get a list of Phone Base Settings objects\n                PhoneBaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesPhonebasesettings(pageSize, pageNumber, sortBy, sortOrder, expand, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhonebasesettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphonebasesettingsavailablemetabases": {
    "operationId": "gettelephonyprovidersedgesphonebasesettingsavailablemetabases",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "PhoneMetaBaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabasesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of available makes and models to create a new Phone Base Settings\n                PhoneMetaBaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhonebasesettingsAvailablemetabases: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphonebasesettingstemplate": {
    "operationId": "gettelephonyprovidersedgesphonebasesettingstemplate",
    "functionName": "GetTelephonyProvidersEdgesPhonebasesettingsTemplate",
    "signature": "GetTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId)",
    "parameters": [
      {
        "name": "phoneMetabaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonebasesettingsTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneMetabaseId = \"phoneMetabaseId_example\";  // string | The id of a metabase object upon which to base this Phone Base Settings\n\n            try\n            { \n                // Get a Phone Base Settings instance template from a given make and model. This object can then be modified and saved as a new Phone Base Settings instance\n                PhoneBase result = apiInstance.GetTelephonyProvidersEdgesPhonebasesettingsTemplate(phoneMetabaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhonebasesettingsTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphones": {
    "operationId": "gettelephonyprovidersedgesphones",
    "functionName": "GetTelephonyProvidersEdgesPhones",
    "signature": "GetTelephonyProvidersEdgesPhones(pageNumber, pageSize, sortBy, sortOrder, siteId, webRtcUserId, phoneBaseSettingsId, linesLoggedInUserId, linesDefaultForUserId, phoneHardwareId, linesId, linesName, name, statusOperationalStatus, secondaryStatusOperationalStatus, expand, fields)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "siteId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "webRtcUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneBaseSettingsId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesLoggedInUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesDefaultForUserId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "phoneHardwareId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "linesName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "statusOperationalStatus",
        "type": "string",
        "required": "false"
      },
      {
        "name": "secondaryStatusOperationalStatus",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "fields",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "PhoneEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | The field to sort by (optional)  (default to name)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var siteId = \"siteId_example\";  // string | Filter by site.id (optional) \n            var webRtcUserId = \"webRtcUserId_example\";  // string | Filter by webRtcUser.id (optional) \n            var phoneBaseSettingsId = \"phoneBaseSettingsId_example\";  // string | Filter by phoneBaseSettings.id (optional) \n            var linesLoggedInUserId = \"linesLoggedInUserId_example\";  // string | Filter by lines.loggedInUser.id (optional) \n            var linesDefaultForUserId = \"linesDefaultForUserId_example\";  // string | Filter by lines.defaultForUser.id (optional) \n            var phoneHardwareId = \"phoneHardwareId_example\";  // string | Filter by phone_hardwareId (optional) \n            var linesId = \"linesId_example\";  // string | Filter by lines.id (optional) \n            var linesName = \"linesName_example\";  // string | Filter by lines.name (optional) \n            var name = \"name_example\";  // string | Name of the Phone to filter by (optional) \n            var statusOperationalStatus = \"statusOperationalStatus_example\";  // string | The primary status to filter by (optional) \n            var secondaryStatusOperationalStatus = \"secondaryStatusOperationalStatus_example\";  // string | The secondary status to filter by (optional) \n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n            var fields = new List<string>(); // List<string> | Fields and properties to get, comma-separated (optional) \n\n            try\n            { \n                // Get a list of Phone Instances\n                PhoneEntityListing result = apiInstance.GetTelephonyProvidersEdgesPhones(pageNumber, pageSize, sortBy, sortOrder, siteId, webRtcUserId, phoneBaseSettingsId, linesLoggedInUserId, linesDefaultForUserId, phoneHardwareId, linesId, linesName, name, statusOperationalStatus, secondaryStatusOperationalStatus, expand, fields);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphonestemplate": {
    "operationId": "gettelephonyprovidersedgesphonestemplate",
    "functionName": "GetTelephonyProvidersEdgesPhonesTemplate",
    "signature": "GetTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId)",
    "parameters": [
      {
        "name": "phoneBaseSettingsId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhonesTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneBaseSettingsId = \"phoneBaseSettingsId_example\";  // string | The id of a Phone Base Settings object upon which to base this Phone\n\n            try\n            { \n                // Get a Phone instance template based on a Phone Base Settings object. This object can then be modified and saved as a new Phone instance\n                Phone result = apiInstance.GetTelephonyProvidersEdgesPhonesTemplate(phoneBaseSettingsId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhonesTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgesphysicalinterfaces": {
    "operationId": "gettelephonyprovidersedgesphysicalinterfaces",
    "functionName": "GetTelephonyProvidersEdgesPhysicalinterfaces",
    "signature": "GetTelephonyProvidersEdgesPhysicalinterfaces(edgeIds)",
    "parameters": [
      {
        "name": "edgeIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PhysicalInterfaceEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesPhysicalinterfacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeIds = \"edgeIds_example\";  // string | Comma separated list of Edge Id's\n\n            try\n            { \n                // Get physical interfaces for edges.\n                PhysicalInterfaceEntityListing result = apiInstance.GetTelephonyProvidersEdgesPhysicalinterfaces(edgeIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesPhysicalinterfaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessite": {
    "operationId": "gettelephonyprovidersedgessite",
    "functionName": "GetTelephonyProvidersEdgesSite",
    "signature": "GetTelephonyProvidersEdgesSite(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n\n            try\n            { \n                // Get a Site by ID.\n                Site result = apiInstance.GetTelephonyProvidersEdgesSite(siteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessitenumberplan": {
    "operationId": "gettelephonyprovidersedgessitenumberplan",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplan",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplan(siteId, numberPlanId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "numberPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "NumberPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteNumberplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var numberPlanId = \"numberPlanId_example\";  // string | Number Plan ID\n\n            try\n            { \n                // Get a Number Plan by ID.\n                NumberPlan result = apiInstance.GetTelephonyProvidersEdgesSiteNumberplan(siteId, numberPlanId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSiteNumberplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessitenumberplans": {
    "operationId": "gettelephonyprovidersedgessitenumberplans",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplans",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplans(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<NumberPlan>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteNumberplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n\n            try\n            { \n                // Get the list of Number Plans for this Site. Only fetches the first 200 records.\n                List<NumberPlan> result = apiInstance.GetTelephonyProvidersEdgesSiteNumberplans(siteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSiteNumberplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessitenumberplansclassifications": {
    "operationId": "gettelephonyprovidersedgessitenumberplansclassifications",
    "functionName": "GetTelephonyProvidersEdgesSiteNumberplansClassifications",
    "signature": "GetTelephonyProvidersEdgesSiteNumberplansClassifications(siteId, classification)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "classification",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteNumberplansClassificationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var classification = \"classification_example\";  // string | Classification (optional) \n\n            try\n            { \n                // Get a list of Classifications for this Site\n                List<string> result = apiInstance.GetTelephonyProvidersEdgesSiteNumberplansClassifications(siteId, classification);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSiteNumberplansClassifications: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessiteoutboundroute": {
    "operationId": "gettelephonyprovidersedgessiteoutboundroute",
    "functionName": "GetTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "GetTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n\n            try\n            { \n                // Get an outbound route\n                OutboundRouteBase result = apiInstance.GetTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSiteOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessiteoutboundroutes": {
    "operationId": "gettelephonyprovidersedgessiteoutboundroutes",
    "functionName": "GetTelephonyProvidersEdgesSiteOutboundroutes",
    "signature": "GetTelephonyProvidersEdgesSiteOutboundroutes(siteId, pageSize, pageNumber, name, externalTrunkBasesIds, sortBy)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "externalTrunkBasesIds",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "OutboundRouteBaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSiteOutboundroutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var name = \"name_example\";  // string | Name (optional) \n            var externalTrunkBasesIds = \"externalTrunkBasesIds_example\";  // string | externalTrunkBases.ids (optional) \n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n\n            try\n            { \n                // Get outbound routes\n                OutboundRouteBaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesSiteOutboundroutes(siteId, pageSize, pageNumber, name, externalTrunkBasesIds, sortBy);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSiteOutboundroutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgessites": {
    "operationId": "gettelephonyprovidersedgessites",
    "functionName": "GetTelephonyProvidersEdgesSites",
    "signature": "GetTelephonyProvidersEdgesSites(pageSize, pageNumber, sortBy, sortOrder, name, locationId, managed)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      },
      {
        "name": "locationId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "SiteEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesSitesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortBy = \"sortBy_example\";  // string | Sort by (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var name = \"name_example\";  // string | Name (optional) \n            var locationId = \"locationId_example\";  // string | Location Id (optional) \n            var managed = true;  // bool? | Filter by managed (optional) \n\n            try\n            { \n                // Get the list of Sites.\n                SiteEntityListing result = apiInstance.GetTelephonyProvidersEdgesSites(pageSize, pageNumber, sortBy, sortOrder, name, locationId, managed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesSites: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestimezones": {
    "operationId": "gettelephonyprovidersedgestimezones",
    "functionName": "GetTelephonyProvidersEdgesTimezones",
    "signature": "GetTelephonyProvidersEdgesTimezones(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TimeZoneEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTimezonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 1000)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of Edge-compatible time zones\n                TimeZoneEntityListing result = apiInstance.GetTelephonyProvidersEdgesTimezones(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTimezones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunk": {
    "operationId": "gettelephonyprovidersedgestrunk",
    "functionName": "GetTelephonyProvidersEdgesTrunk",
    "signature": "GetTelephonyProvidersEdgesTrunk(trunkId)",
    "parameters": [
      {
        "name": "trunkId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Trunk",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkId = \"trunkId_example\";  // string | Trunk ID\n\n            try\n            { \n                // Get a Trunk by ID\n                Trunk result = apiInstance.GetTelephonyProvidersEdgesTrunk(trunkId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkmetrics": {
    "operationId": "gettelephonyprovidersedgestrunkmetrics",
    "functionName": "GetTelephonyProvidersEdgesTrunkMetrics",
    "signature": "GetTelephonyProvidersEdgesTrunkMetrics(trunkId)",
    "parameters": [
      {
        "name": "trunkId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrunkMetrics",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkId = \"trunkId_example\";  // string | Trunk Id\n\n            try\n            { \n                // Get the trunk metrics.\n                TrunkMetrics result = apiInstance.GetTelephonyProvidersEdgesTrunkMetrics(trunkId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkbasesetting": {
    "operationId": "gettelephonyprovidersedgestrunkbasesetting",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, ignoreHidden)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "ignoreHidden",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "TrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkbasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkBaseSettingsId = \"trunkBaseSettingsId_example\";  // string | Trunk Base ID\n            var ignoreHidden = true;  // bool? | Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only. (optional) \n\n            try\n            { \n                // Get a Trunk Base Settings object by ID\n                TrunkBase result = apiInstance.GetTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, ignoreHidden);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkbasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettings": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettings",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettings",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettings(pageNumber, pageSize, sortBy, sortOrder, recordingEnabled, ignoreHidden, managed, expand, name)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "recordingEnabled",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "ignoreHidden",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "managed",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "name",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TrunkBaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkbasesettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var recordingEnabled = true;  // bool? | Filter trunks by recording enabled (optional) \n            var ignoreHidden = true;  // bool? | Set this to true to not receive trunk properties that are meant to be hidden or for internal system usage only. (optional) \n            var managed = true;  // bool? | Filter by managed (optional) \n            var expand = new List<string>(); // List<string> | Fields to expand in the response, comma-separated (optional) \n            var name = \"name_example\";  // string | Name of the TrunkBase to filter by (optional) \n\n            try\n            { \n                // Get Trunk Base Settings listing\n                TrunkBaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesTrunkbasesettings(pageNumber, pageSize, sortBy, sortOrder, recordingEnabled, ignoreHidden, managed, expand, name);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkbasesettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettingsavailablemetabases": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettingsavailablemetabases",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(type, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "type",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrunkMetabaseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabasesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var type = \"type_example\";  // string |  (optional) \n            var pageSize = 56;  // int? |  (optional)  (default to 25)\n            var pageNumber = 56;  // int? |  (optional)  (default to 1)\n\n            try\n            { \n                // Get a list of available makes and models to create a new Trunk Base Settings\n                TrunkMetabaseEntityListing result = apiInstance.GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases(type, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkbasesettingsAvailablemetabases: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkbasesettingstemplate": {
    "operationId": "gettelephonyprovidersedgestrunkbasesettingstemplate",
    "functionName": "GetTelephonyProvidersEdgesTrunkbasesettingsTemplate",
    "signature": "GetTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId)",
    "parameters": [
      {
        "name": "trunkMetabaseId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkbasesettingsTemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkMetabaseId = \"trunkMetabaseId_example\";  // string | The id of a metabase object upon which to base this Trunk Base Settings\n\n            try\n            { \n                // Get a Trunk Base Settings instance template from a given make and model. This object can then be modified and saved as a new Trunk Base Settings instance\n                TrunkBase result = apiInstance.GetTelephonyProvidersEdgesTrunkbasesettingsTemplate(trunkMetabaseId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkbasesettingsTemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunks": {
    "operationId": "gettelephonyprovidersedgestrunks",
    "functionName": "GetTelephonyProvidersEdgesTrunks",
    "signature": "GetTelephonyProvidersEdgesTrunks(pageNumber, pageSize, sortBy, sortOrder, edgeId, trunkBaseId, trunkType)",
    "parameters": [
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortBy",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "edgeId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkBaseId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TrunkEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunksExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var sortBy = \"sortBy_example\";  // string | Value by which to sort (optional)  (default to \"name\")\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var edgeId = \"edgeId_example\";  // string | Filter by Edge Ids (optional) \n            var trunkBaseId = \"trunkBaseId_example\";  // string | Filter by Trunk Base Ids (optional) \n            var trunkType = \"trunkType_example\";  // string | Filter by a Trunk type (optional) \n\n            try\n            { \n                // Get the list of available trunks.\n                TrunkEntityListing result = apiInstance.GetTelephonyProvidersEdgesTrunks(pageNumber, pageSize, sortBy, sortOrder, edgeId, trunkBaseId, trunkType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunks: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunksmetrics": {
    "operationId": "gettelephonyprovidersedgestrunksmetrics",
    "functionName": "GetTelephonyProvidersEdgesTrunksMetrics",
    "signature": "GetTelephonyProvidersEdgesTrunksMetrics(trunkIds)",
    "parameters": [
      {
        "name": "trunkIds",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<TrunkMetrics>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunksMetricsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkIds = \"trunkIds_example\";  // string | Comma separated list of Trunk Id's\n\n            try\n            { \n                // Get the metrics for a list of trunks.\n                List<TrunkMetrics> result = apiInstance.GetTelephonyProvidersEdgesTrunksMetrics(trunkIds);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunksMetrics: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettelephonyprovidersedgestrunkswithrecording": {
    "operationId": "gettelephonyprovidersedgestrunkswithrecording",
    "functionName": "GetTelephonyProvidersEdgesTrunkswithrecording",
    "signature": "GetTelephonyProvidersEdgesTrunkswithrecording(trunkType)",
    "parameters": [
      {
        "name": "trunkType",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "TrunkRecordingEnabledCount",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTelephonyProvidersEdgesTrunkswithrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkType = \"trunkType_example\";  // string | The type of this trunk base. (optional) \n\n            try\n            { \n                // Get Counts of trunks that have recording disabled or enabled\n                TrunkRecordingEnabledCount result = apiInstance.GetTelephonyProvidersEdgesTrunkswithrecording(trunkType);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.GetTelephonyProvidersEdgesTrunkswithrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgediagnosticnslookup": {
    "operationId": "posttelephonyprovidersedgediagnosticnslookup",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticNslookup",
    "signature": "PostTelephonyProvidersEdgeDiagnosticNslookup(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeDiagnosticNslookupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n            var body = new EdgeNetworkDiagnosticRequest(); // EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\n            try\n            { \n                // Nslookup request command to collect networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnostic result = apiInstance.PostTelephonyProvidersEdgeDiagnosticNslookup(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeDiagnosticNslookup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgediagnosticping": {
    "operationId": "posttelephonyprovidersedgediagnosticping",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticPing",
    "signature": "PostTelephonyProvidersEdgeDiagnosticPing(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeDiagnosticPingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n            var body = new EdgeNetworkDiagnosticRequest(); // EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\n            try\n            { \n                // Ping Request command to collect networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnostic result = apiInstance.PostTelephonyProvidersEdgeDiagnosticPing(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeDiagnosticPing: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgediagnosticroute": {
    "operationId": "posttelephonyprovidersedgediagnosticroute",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticRoute",
    "signature": "PostTelephonyProvidersEdgeDiagnosticRoute(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeDiagnosticRouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n            var body = new EdgeNetworkDiagnosticRequest(); // EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\n            try\n            { \n                // Route request command to collect networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnostic result = apiInstance.PostTelephonyProvidersEdgeDiagnosticRoute(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeDiagnosticRoute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgediagnostictracepath": {
    "operationId": "posttelephonyprovidersedgediagnostictracepath",
    "functionName": "PostTelephonyProvidersEdgeDiagnosticTracepath",
    "signature": "PostTelephonyProvidersEdgeDiagnosticTracepath(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeNetworkDiagnosticRequest",
        "required": "true"
      }
    ],
    "return": "EdgeNetworkDiagnostic",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeDiagnosticTracepathExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n            var body = new EdgeNetworkDiagnosticRequest(); // EdgeNetworkDiagnosticRequest | request payload to get network diagnostic\n\n            try\n            { \n                // Tracepath request command to collect networking-related information from an Edge for a target IP or host.\n                EdgeNetworkDiagnostic result = apiInstance.PostTelephonyProvidersEdgeDiagnosticTracepath(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeDiagnosticTracepath: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgelogicalinterfaces": {
    "operationId": "posttelephonyprovidersedgelogicalinterfaces",
    "functionName": "PostTelephonyProvidersEdgeLogicalinterfaces",
    "signature": "PostTelephonyProvidersEdgeLogicalinterfaces(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainLogicalInterface",
        "required": "true"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeLogicalinterfacesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new DomainLogicalInterface(); // DomainLogicalInterface | Logical interface\n\n            try\n            { \n                // Create an edge logical interface.\n                DomainLogicalInterface result = apiInstance.PostTelephonyProvidersEdgeLogicalinterfaces(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeLogicalinterfaces: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgelogsjobupload": {
    "operationId": "posttelephonyprovidersedgelogsjobupload",
    "functionName": "PostTelephonyProvidersEdgeLogsJobUpload",
    "signature": "PostTelephonyProvidersEdgeLogsJobUpload(edgeId, jobId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeLogsJobUploadRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeLogsJobUploadExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var jobId = \"jobId_example\";  // string | Job ID\n            var body = new EdgeLogsJobUploadRequest(); // EdgeLogsJobUploadRequest | Log upload request\n\n            try\n            { \n                // Request that the specified fileIds be uploaded from the Edge.\n                apiInstance.PostTelephonyProvidersEdgeLogsJobUpload(edgeId, jobId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeLogsJobUpload: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgelogsjobs": {
    "operationId": "posttelephonyprovidersedgelogsjobs",
    "functionName": "PostTelephonyProvidersEdgeLogsJobs",
    "signature": "PostTelephonyProvidersEdgeLogsJobs(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeLogsJobRequest",
        "required": "true"
      }
    ],
    "return": "EdgeLogsJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeLogsJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new EdgeLogsJobRequest(); // EdgeLogsJobRequest | EdgeLogsJobRequest\n\n            try\n            { \n                // Create a job to upload a list of Edge logs.\n                EdgeLogsJobResponse result = apiInstance.PostTelephonyProvidersEdgeLogsJobs(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeLogsJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgereboot": {
    "operationId": "posttelephonyprovidersedgereboot",
    "functionName": "PostTelephonyProvidersEdgeReboot",
    "signature": "PostTelephonyProvidersEdgeReboot(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeRebootParameters",
        "required": "false"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeRebootExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new EdgeRebootParameters(); // EdgeRebootParameters | Parameters for the edge reboot (optional) \n\n            try\n            { \n                // Reboot an Edge\n                string result = apiInstance.PostTelephonyProvidersEdgeReboot(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeReboot: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesoftwareupdate": {
    "operationId": "posttelephonyprovidersedgesoftwareupdate",
    "functionName": "PostTelephonyProvidersEdgeSoftwareupdate",
    "signature": "PostTelephonyProvidersEdgeSoftwareupdate(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainEdgeSoftwareUpdateDto",
        "required": "true"
      }
    ],
    "return": "DomainEdgeSoftwareUpdateDto",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeSoftwareupdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new DomainEdgeSoftwareUpdateDto(); // DomainEdgeSoftwareUpdateDto | Software update request\n\n            try\n            { \n                // Starts a software update for this edge.\n                DomainEdgeSoftwareUpdateDto result = apiInstance.PostTelephonyProvidersEdgeSoftwareupdate(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeSoftwareupdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgestatuscode": {
    "operationId": "posttelephonyprovidersedgestatuscode",
    "functionName": "PostTelephonyProvidersEdgeStatuscode",
    "signature": "PostTelephonyProvidersEdgeStatuscode(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeServiceStateRequest",
        "required": "false"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeStatuscodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new EdgeServiceStateRequest(); // EdgeServiceStateRequest | Edge Service State (optional) \n\n            try\n            { \n                // Take an Edge in or out of service\n                string result = apiInstance.PostTelephonyProvidersEdgeStatuscode(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeStatuscode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgeunpair": {
    "operationId": "posttelephonyprovidersedgeunpair",
    "functionName": "PostTelephonyProvidersEdgeUnpair",
    "signature": "PostTelephonyProvidersEdgeUnpair(edgeId)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgeUnpairExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge Id\n\n            try\n            { \n                // Unpair an Edge\n                string result = apiInstance.PostTelephonyProvidersEdgeUnpair(edgeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgeUnpair: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedges": {
    "operationId": "posttelephonyprovidersedges",
    "functionName": "PostTelephonyProvidersEdges",
    "signature": "PostTelephonyProvidersEdges(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new Edge(); // Edge | Edge\n\n            try\n            { \n                // Create an edge.\n                Edge result = apiInstance.PostTelephonyProvidersEdges(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdges: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesaddressvalidation": {
    "operationId": "posttelephonyprovidersedgesaddressvalidation",
    "functionName": "PostTelephonyProvidersEdgesAddressvalidation",
    "signature": "PostTelephonyProvidersEdgesAddressvalidation(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ValidateAddressRequest",
        "required": "true"
      }
    ],
    "return": "ValidateAddressResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesAddressvalidationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new ValidateAddressRequest(); // ValidateAddressRequest | Address\n\n            try\n            { \n                // Validates a street address\n                ValidateAddressResponse result = apiInstance.PostTelephonyProvidersEdgesAddressvalidation(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesAddressvalidation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgescertificateauthorities": {
    "operationId": "posttelephonyprovidersedgescertificateauthorities",
    "functionName": "PostTelephonyProvidersEdgesCertificateauthorities",
    "signature": "PostTelephonyProvidersEdgesCertificateauthorities(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DomainCertificateAuthority",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesCertificateauthoritiesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new DomainCertificateAuthority(); // DomainCertificateAuthority | CertificateAuthority\n\n            try\n            { \n                // Create a certificate authority.\n                DomainCertificateAuthority result = apiInstance.PostTelephonyProvidersEdgesCertificateauthorities(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesCertificateauthorities: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesdidpools": {
    "operationId": "posttelephonyprovidersedgesdidpools",
    "functionName": "PostTelephonyProvidersEdgesDidpools",
    "signature": "PostTelephonyProvidersEdgesDidpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DIDPool",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesDidpoolsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new DIDPool(); // DIDPool | DID pool\n\n            try\n            { \n                // Create a new DID pool\n                DIDPool result = apiInstance.PostTelephonyProvidersEdgesDidpools(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesDidpools: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesedgegroups": {
    "operationId": "posttelephonyprovidersedgesedgegroups",
    "functionName": "PostTelephonyProvidersEdgesEdgegroups",
    "signature": "PostTelephonyProvidersEdgesEdgegroups(body)",
    "parameters": [
      {
        "name": "body",
        "type": "EdgeGroup",
        "required": "true"
      }
    ],
    "return": "EdgeGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesEdgegroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new EdgeGroup(); // EdgeGroup | EdgeGroup\n\n            try\n            { \n                // Create an edge group.\n                EdgeGroup result = apiInstance.PostTelephonyProvidersEdgesEdgegroups(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesEdgegroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesextensionpools": {
    "operationId": "posttelephonyprovidersedgesextensionpools",
    "functionName": "PostTelephonyProvidersEdgesExtensionpools",
    "signature": "PostTelephonyProvidersEdgesExtensionpools(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ExtensionPool",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesExtensionpoolsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new ExtensionPool(); // ExtensionPool | ExtensionPool\n\n            try\n            { \n                // Create a new extension pool\n                ExtensionPool result = apiInstance.PostTelephonyProvidersEdgesExtensionpools(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesExtensionpools: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesoutboundroutes": {
    "operationId": "posttelephonyprovidersedgesoutboundroutes",
    "functionName": "PostTelephonyProvidersEdgesOutboundroutes",
    "signature": "PostTelephonyProvidersEdgesOutboundroutes(body)",
    "parameters": [
      {
        "name": "body",
        "type": "OutboundRoute",
        "required": "true"
      }
    ],
    "return": "OutboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesOutboundroutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new OutboundRoute(); // OutboundRoute | OutboundRoute\n\n            try\n            { \n                // Create outbound rule\n                OutboundRoute result = apiInstance.PostTelephonyProvidersEdgesOutboundroutes(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesOutboundroutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesphonereboot": {
    "operationId": "posttelephonyprovidersedgesphonereboot",
    "functionName": "PostTelephonyProvidersEdgesPhoneReboot",
    "signature": "PostTelephonyProvidersEdgesPhoneReboot(phoneId)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesPhoneRebootExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneId = \"phoneId_example\";  // string | Phone Id\n\n            try\n            { \n                // Reboot a Phone\n                apiInstance.PostTelephonyProvidersEdgesPhoneReboot(phoneId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesPhoneReboot: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesphonebasesettings": {
    "operationId": "posttelephonyprovidersedgesphonebasesettings",
    "functionName": "PostTelephonyProvidersEdgesPhonebasesettings",
    "signature": "PostTelephonyProvidersEdgesPhonebasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PhoneBase",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesPhonebasesettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new PhoneBase(); // PhoneBase | Phone base settings\n\n            try\n            { \n                // Create a new Phone Base Settings object\n                PhoneBase result = apiInstance.PostTelephonyProvidersEdgesPhonebasesettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesPhonebasesettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesphones": {
    "operationId": "posttelephonyprovidersedgesphones",
    "functionName": "PostTelephonyProvidersEdgesPhones",
    "signature": "PostTelephonyProvidersEdgesPhones(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesPhonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new Phone(); // Phone | Phone\n\n            try\n            { \n                // Create a new Phone\n                Phone result = apiInstance.PostTelephonyProvidersEdgesPhones(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesPhones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgesphonesreboot": {
    "operationId": "posttelephonyprovidersedgesphonesreboot",
    "functionName": "PostTelephonyProvidersEdgesPhonesReboot",
    "signature": "PostTelephonyProvidersEdgesPhonesReboot(body)",
    "parameters": [
      {
        "name": "body",
        "type": "PhonesReboot",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesPhonesRebootExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new PhonesReboot(); // PhonesReboot | Phones\n\n            try\n            { \n                // Reboot Multiple Phones\n                apiInstance.PostTelephonyProvidersEdgesPhonesReboot(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesPhonesReboot: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgessiteoutboundroutes": {
    "operationId": "posttelephonyprovidersedgessiteoutboundroutes",
    "functionName": "PostTelephonyProvidersEdgesSiteOutboundroutes",
    "signature": "PostTelephonyProvidersEdgesSiteOutboundroutes(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutboundRouteBase",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesSiteOutboundroutesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var body = new OutboundRouteBase(); // OutboundRouteBase | OutboundRoute\n\n            try\n            { \n                // Create outbound route\n                OutboundRouteBase result = apiInstance.PostTelephonyProvidersEdgesSiteOutboundroutes(siteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesSiteOutboundroutes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgessiterebalance": {
    "operationId": "posttelephonyprovidersedgessiterebalance",
    "functionName": "PostTelephonyProvidersEdgesSiteRebalance",
    "signature": "PostTelephonyProvidersEdgesSiteRebalance(siteId)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesSiteRebalanceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n\n            try\n            { \n                // Triggers the rebalance operation.\n                apiInstance.PostTelephonyProvidersEdgesSiteRebalance(siteId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesSiteRebalance: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgessites": {
    "operationId": "posttelephonyprovidersedgessites",
    "functionName": "PostTelephonyProvidersEdgesSites",
    "signature": "PostTelephonyProvidersEdgesSites(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesSitesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new Site(); // Site | Site\n\n            try\n            { \n                // Create a Site.\n                Site result = apiInstance.PostTelephonyProvidersEdgesSites(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesSites: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttelephonyprovidersedgestrunkbasesettings": {
    "operationId": "posttelephonyprovidersedgestrunkbasesettings",
    "functionName": "PostTelephonyProvidersEdgesTrunkbasesettings",
    "signature": "PostTelephonyProvidersEdgesTrunkbasesettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "TrunkBase",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTelephonyProvidersEdgesTrunkbasesettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var body = new TrunkBase(); // TrunkBase | Trunk base settings\n\n            try\n            { \n                // Create a Trunk Base Settings object\n                TrunkBase result = apiInstance.PostTelephonyProvidersEdgesTrunkbasesettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PostTelephonyProvidersEdgesTrunkbasesettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedge": {
    "operationId": "puttelephonyprovidersedge",
    "functionName": "PutTelephonyProvidersEdge",
    "signature": "PutTelephonyProvidersEdge(edgeId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Edge",
        "required": "true"
      }
    ],
    "return": "Edge",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var body = new Edge(); // Edge | Edge\n\n            try\n            { \n                // Update a edge.\n                Edge result = apiInstance.PutTelephonyProvidersEdge(edgeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdge: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgeline": {
    "operationId": "puttelephonyprovidersedgeline",
    "functionName": "PutTelephonyProvidersEdgeLine",
    "signature": "PutTelephonyProvidersEdgeLine(edgeId, lineId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "lineId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeLine",
        "required": "true"
      }
    ],
    "return": "EdgeLine",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgeLineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var lineId = \"lineId_example\";  // string | Line ID\n            var body = new EdgeLine(); // EdgeLine | Line\n\n            try\n            { \n                // Update a line.\n                EdgeLine result = apiInstance.PutTelephonyProvidersEdgeLine(edgeId, lineId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgeLine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgelogicalinterface": {
    "operationId": "puttelephonyprovidersedgelogicalinterface",
    "functionName": "PutTelephonyProvidersEdgeLogicalinterface",
    "signature": "PutTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, body)",
    "parameters": [
      {
        "name": "edgeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "interfaceId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainLogicalInterface",
        "required": "true"
      }
    ],
    "return": "DomainLogicalInterface",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgeLogicalinterfaceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeId = \"edgeId_example\";  // string | Edge ID\n            var interfaceId = \"interfaceId_example\";  // string | Interface ID\n            var body = new DomainLogicalInterface(); // DomainLogicalInterface | Logical interface\n\n            try\n            { \n                // Update an edge logical interface.\n                DomainLogicalInterface result = apiInstance.PutTelephonyProvidersEdgeLogicalinterface(edgeId, interfaceId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgeLogicalinterface: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgescertificateauthority": {
    "operationId": "puttelephonyprovidersedgescertificateauthority",
    "functionName": "PutTelephonyProvidersEdgesCertificateauthority",
    "signature": "PutTelephonyProvidersEdgesCertificateauthority(certificateId, body)",
    "parameters": [
      {
        "name": "certificateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DomainCertificateAuthority",
        "required": "true"
      }
    ],
    "return": "DomainCertificateAuthority",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesCertificateauthorityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var certificateId = \"certificateId_example\";  // string | Certificate ID\n            var body = new DomainCertificateAuthority(); // DomainCertificateAuthority | Certificate authority\n\n            try\n            { \n                // Update a certificate authority.\n                DomainCertificateAuthority result = apiInstance.PutTelephonyProvidersEdgesCertificateauthority(certificateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesCertificateauthority: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesdid": {
    "operationId": "puttelephonyprovidersedgesdid",
    "functionName": "PutTelephonyProvidersEdgesDid",
    "signature": "PutTelephonyProvidersEdgesDid(didId, body)",
    "parameters": [
      {
        "name": "didId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DID",
        "required": "true"
      }
    ],
    "return": "DID",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesDidExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var didId = \"didId_example\";  // string | DID ID\n            var body = new DID(); // DID | DID\n\n            try\n            { \n                // Update a DID by ID.\n                DID result = apiInstance.PutTelephonyProvidersEdgesDid(didId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesDid: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesdidpool": {
    "operationId": "puttelephonyprovidersedgesdidpool",
    "functionName": "PutTelephonyProvidersEdgesDidpool",
    "signature": "PutTelephonyProvidersEdgesDidpool(didPoolId, body)",
    "parameters": [
      {
        "name": "didPoolId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "DIDPool",
        "required": "true"
      }
    ],
    "return": "DIDPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesDidpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var didPoolId = \"didPoolId_example\";  // string | DID pool ID\n            var body = new DIDPool(); // DIDPool | DID pool\n\n            try\n            { \n                // Update a DID Pool by ID.\n                DIDPool result = apiInstance.PutTelephonyProvidersEdgesDidpool(didPoolId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesDidpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesedgegroup": {
    "operationId": "puttelephonyprovidersedgesedgegroup",
    "functionName": "PutTelephonyProvidersEdgesEdgegroup",
    "signature": "PutTelephonyProvidersEdgesEdgegroup(edgeGroupId, body)",
    "parameters": [
      {
        "name": "edgeGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeGroup",
        "required": "true"
      }
    ],
    "return": "EdgeGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesEdgegroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgeGroupId = \"edgeGroupId_example\";  // string | Edge group ID\n            var body = new EdgeGroup(); // EdgeGroup | EdgeGroup\n\n            try\n            { \n                // Update an edge group.\n                EdgeGroup result = apiInstance.PutTelephonyProvidersEdgesEdgegroup(edgeGroupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesEdgegroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesedgegroupedgetrunkbase": {
    "operationId": "puttelephonyprovidersedgesedgegroupedgetrunkbase",
    "functionName": "PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase",
    "signature": "PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId, body)",
    "parameters": [
      {
        "name": "edgegroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "edgetrunkbaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "EdgeTrunkBase",
        "required": "true"
      }
    ],
    "return": "EdgeTrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesEdgegroupEdgetrunkbaseExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var edgegroupId = \"edgegroupId_example\";  // string | Edge Group ID\n            var edgetrunkbaseId = \"edgetrunkbaseId_example\";  // string | Edge Trunk Base ID\n            var body = new EdgeTrunkBase(); // EdgeTrunkBase | EdgeTrunkBase\n\n            try\n            { \n                // Update the edge trunk base associated with the edge group\n                EdgeTrunkBase result = apiInstance.PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase(edgegroupId, edgetrunkbaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesEdgegroupEdgetrunkbase: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesextension": {
    "operationId": "puttelephonyprovidersedgesextension",
    "functionName": "PutTelephonyProvidersEdgesExtension",
    "signature": "PutTelephonyProvidersEdgesExtension(extensionId, body)",
    "parameters": [
      {
        "name": "extensionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Extension",
        "required": "true"
      }
    ],
    "return": "Extension",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesExtensionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var extensionId = \"extensionId_example\";  // string | Extension ID\n            var body = new Extension(); // Extension | Extension\n\n            try\n            { \n                // Update an extension by ID.\n                Extension result = apiInstance.PutTelephonyProvidersEdgesExtension(extensionId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesExtension: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesextensionpool": {
    "operationId": "puttelephonyprovidersedgesextensionpool",
    "functionName": "PutTelephonyProvidersEdgesExtensionpool",
    "signature": "PutTelephonyProvidersEdgesExtensionpool(extensionPoolId, body)",
    "parameters": [
      {
        "name": "extensionPoolId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ExtensionPool",
        "required": "true"
      }
    ],
    "return": "ExtensionPool",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesExtensionpoolExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var extensionPoolId = \"extensionPoolId_example\";  // string | Extension pool ID\n            var body = new ExtensionPool(); // ExtensionPool | ExtensionPool\n\n            try\n            { \n                // Update an extension pool by ID\n                ExtensionPool result = apiInstance.PutTelephonyProvidersEdgesExtensionpool(extensionPoolId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesExtensionpool: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesoutboundroute": {
    "operationId": "puttelephonyprovidersedgesoutboundroute",
    "functionName": "PutTelephonyProvidersEdgesOutboundroute",
    "signature": "PutTelephonyProvidersEdgesOutboundroute(outboundRouteId, body)",
    "parameters": [
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutboundRoute",
        "required": "true"
      }
    ],
    "return": "OutboundRoute",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n            var body = new OutboundRoute(); // OutboundRoute | OutboundRoute\n\n            try\n            { \n                // Update outbound route\n                OutboundRoute result = apiInstance.PutTelephonyProvidersEdgesOutboundroute(outboundRouteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesphone": {
    "operationId": "puttelephonyprovidersedgesphone",
    "functionName": "PutTelephonyProvidersEdgesPhone",
    "signature": "PutTelephonyProvidersEdgesPhone(phoneId, body)",
    "parameters": [
      {
        "name": "phoneId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Phone",
        "required": "true"
      }
    ],
    "return": "Phone",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesPhoneExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneId = \"phoneId_example\";  // string | Phone ID\n            var body = new Phone(); // Phone | Phone\n\n            try\n            { \n                // Update a Phone by ID\n                Phone result = apiInstance.PutTelephonyProvidersEdgesPhone(phoneId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesPhone: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgesphonebasesetting": {
    "operationId": "puttelephonyprovidersedgesphonebasesetting",
    "functionName": "PutTelephonyProvidersEdgesPhonebasesetting",
    "signature": "PutTelephonyProvidersEdgesPhonebasesetting(phoneBaseId, body)",
    "parameters": [
      {
        "name": "phoneBaseId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PhoneBase",
        "required": "true"
      }
    ],
    "return": "PhoneBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesPhonebasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var phoneBaseId = \"phoneBaseId_example\";  // string | Phone base ID\n            var body = new PhoneBase(); // PhoneBase | Phone base settings\n\n            try\n            { \n                // Update a Phone Base Settings by ID\n                PhoneBase result = apiInstance.PutTelephonyProvidersEdgesPhonebasesetting(phoneBaseId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesPhonebasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgessite": {
    "operationId": "puttelephonyprovidersedgessite",
    "functionName": "PutTelephonyProvidersEdgesSite",
    "signature": "PutTelephonyProvidersEdgesSite(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Site",
        "required": "true"
      }
    ],
    "return": "Site",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesSiteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var body = new Site(); // Site | Site\n\n            try\n            { \n                // Update a Site by ID.\n                Site result = apiInstance.PutTelephonyProvidersEdgesSite(siteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesSite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgessitenumberplans": {
    "operationId": "puttelephonyprovidersedgessitenumberplans",
    "functionName": "PutTelephonyProvidersEdgesSiteNumberplans",
    "signature": "PutTelephonyProvidersEdgesSiteNumberplans(siteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<NumberPlan>",
        "required": "true"
      }
    ],
    "return": "List<NumberPlan>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesSiteNumberplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var body = new List<NumberPlan>(); // List<NumberPlan> | List of number plans\n\n            try\n            { \n                // Update the list of Number Plans. A user can update maximum 200 number plans at a time.\n                List<NumberPlan> result = apiInstance.PutTelephonyProvidersEdgesSiteNumberplans(siteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesSiteNumberplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgessiteoutboundroute": {
    "operationId": "puttelephonyprovidersedgessiteoutboundroute",
    "functionName": "PutTelephonyProvidersEdgesSiteOutboundroute",
    "signature": "PutTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId, body)",
    "parameters": [
      {
        "name": "siteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "outboundRouteId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutboundRouteBase",
        "required": "true"
      }
    ],
    "return": "OutboundRouteBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesSiteOutboundrouteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var siteId = \"siteId_example\";  // string | Site ID\n            var outboundRouteId = \"outboundRouteId_example\";  // string | Outbound route ID\n            var body = new OutboundRouteBase(); // OutboundRouteBase | OutboundRoute\n\n            try\n            { \n                // Update outbound route\n                OutboundRouteBase result = apiInstance.PutTelephonyProvidersEdgesSiteOutboundroute(siteId, outboundRouteId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesSiteOutboundroute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "puttelephonyprovidersedgestrunkbasesetting": {
    "operationId": "puttelephonyprovidersedgestrunkbasesetting",
    "functionName": "PutTelephonyProvidersEdgesTrunkbasesetting",
    "signature": "PutTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, body)",
    "parameters": [
      {
        "name": "trunkBaseSettingsId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TrunkBase",
        "required": "true"
      }
    ],
    "return": "TrunkBase",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutTelephonyProvidersEdgesTrunkbasesettingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TelephonyProvidersEdgeApi();\n            var trunkBaseSettingsId = \"trunkBaseSettingsId_example\";  // string | Trunk Base ID\n            var body = new TrunkBase(); // TrunkBase | Trunk base settings\n\n            try\n            { \n                // Update a Trunk Base Settings object by ID\n                TrunkBase result = apiInstance.PutTelephonyProvidersEdgesTrunkbasesetting(trunkBaseSettingsId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling TelephonyProvidersEdge.PutTelephonyProvidersEdgesTrunkbasesetting: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettextbotsbotssearch": {
    "operationId": "gettextbotsbotssearch",
    "functionName": "GetTextbotsBotsSearch",
    "signature": "GetTextbotsBotsSearch(botType, botName, botId, pageSize)",
    "parameters": [
      {
        "name": "botType",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "botName",
        "type": "string",
        "required": "false"
      },
      {
        "name": "botId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "BotSearchResponseEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTextbotsBotsSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TextbotsApi();\n            var botType = new List<string>(); // List<string> | Bot types (optional) \n            var botName = \"botName_example\";  // string | Bot name (optional) \n            var botId = new List<string>(); // List<string> | Bot IDs (optional) \n            var pageSize = 56;  // int? | The maximum results to return (optional)  (default to 25)\n\n            try\n            { \n                // Find bots using the currently configured friendly name or ID.\n                BotSearchResponseEntityListing result = apiInstance.GetTextbotsBotsSearch(botType, botName, botId, pageSize);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Textbots.GetTextbotsBotsSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttextbotsbotflowssessionturns": {
    "operationId": "posttextbotsbotflowssessionturns",
    "functionName": "PostTextbotsBotflowsSessionTurns",
    "signature": "PostTextbotsBotflowsSessionTurns(sessionId, turnRequest)",
    "parameters": [
      {
        "name": "sessionId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "turnRequest",
        "type": "TextBotFlowTurnRequest",
        "required": "true"
      }
    ],
    "return": "TextBotFlowTurnResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTextbotsBotflowsSessionTurnsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TextbotsApi();\n            var sessionId = \"sessionId_example\";  // string | The bot flow session ID, typically obtained from 'POST /api/v2/textbots/botflows/sessions'\n            var turnRequest = new TextBotFlowTurnRequest(); // TextBotFlowTurnRequest | \n\n            try\n            { \n                // Issue a bot flow turn event\n                TextBotFlowTurnResponse result = apiInstance.PostTextbotsBotflowsSessionTurns(sessionId, turnRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Textbots.PostTextbotsBotflowsSessionTurns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttextbotsbotflowssessions": {
    "operationId": "posttextbotsbotflowssessions",
    "functionName": "PostTextbotsBotflowsSessions",
    "signature": "PostTextbotsBotflowsSessions(launchRequest)",
    "parameters": [
      {
        "name": "launchRequest",
        "type": "TextBotFlowLaunchRequest",
        "required": "true"
      }
    ],
    "return": "TextBotFlowLaunchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTextbotsBotflowsSessionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TextbotsApi();\n            var launchRequest = new TextBotFlowLaunchRequest(); // TextBotFlowLaunchRequest | \n\n            try\n            { \n                // Create an execution instance of a bot flow definition.\n                TextBotFlowLaunchResponse result = apiInstance.PostTextbotsBotflowsSessions(launchRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Textbots.PostTextbotsBotflowsSessions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "posttextbotsbotsexecute": {
    "operationId": "posttextbotsbotsexecute",
    "functionName": "PostTextbotsBotsExecute",
    "signature": "PostTextbotsBotsExecute(postTextRequest)",
    "parameters": [
      {
        "name": "postTextRequest",
        "type": "PostTextRequest",
        "required": "true"
      }
    ],
    "return": "PostTextResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostTextbotsBotsExecuteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TextbotsApi();\n            var postTextRequest = new PostTextRequest(); // PostTextRequest | \n\n            try\n            { \n                // Send an intent to a bot to start a dialog/interact with it via text\n                PostTextResponse result = apiInstance.PostTextbotsBotsExecute(postTextRequest);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Textbots.PostTextbotsBotsExecute: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetoken": {
    "operationId": "deletetoken",
    "functionName": "DeleteToken",
    "signature": "DeleteToken(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTokenExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TokensApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Delete all auth tokens for the specified user.\n                apiInstance.DeleteToken(userId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Tokens.DeleteToken: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletetokensme": {
    "operationId": "deletetokensme",
    "functionName": "DeleteTokensMe",
    "signature": "DeleteTokensMe()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteTokensMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TokensApi();\n\n            try\n            { \n                // Delete auth token used to make the request.\n                apiInstance.DeleteTokensMe();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Tokens.DeleteTokensMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettokensme": {
    "operationId": "gettokensme",
    "functionName": "GetTokensMe",
    "signature": "GetTokensMe()",
    "return": "TokenInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTokensMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TokensApi();\n\n            try\n            { \n                // Fetch information about the current token\n                TokenInfo result = apiInstance.GetTokensMe();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Tokens.GetTokensMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "headtokensme": {
    "operationId": "headtokensme",
    "functionName": "HeadTokensMe",
    "signature": "HeadTokensMe()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class HeadTokensMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new TokensApi();\n\n            try\n            { \n                // Verify user token\n                apiInstance.HeadTokensMe();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Tokens.HeadTokensMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postlanguageunderstandingmineruploads": {
    "operationId": "postlanguageunderstandingmineruploads",
    "functionName": "PostLanguageunderstandingMinerUploads",
    "signature": "PostLanguageunderstandingMinerUploads(minerId, body)",
    "parameters": [
      {
        "name": "minerId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "Object",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostLanguageunderstandingMinerUploadsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var minerId = \"minerId_example\";  // string | Miner ID\n            var body = ;  // Object | query\n\n            try\n            { \n                // Creates a presigned URL for uploading a chat corpus which will be used for mining by intent miner\n                UploadUrlResponse result = apiInstance.PostLanguageunderstandingMinerUploads(minerId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostLanguageunderstandingMinerUploads: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuploadslearningcoverart": {
    "operationId": "postuploadslearningcoverart",
    "functionName": "PostUploadsLearningCoverart",
    "signature": "PostUploadsLearningCoverart(body)",
    "parameters": [
      {
        "name": "body",
        "type": "LearningCoverArtUploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUploadsLearningCoverartExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var body = new LearningCoverArtUploadUrlRequest(); // LearningCoverArtUploadUrlRequest | query\n\n            try\n            { \n                // Generates pre-signed URL to upload cover art for learning modules\n                UploadUrlResponse result = apiInstance.PostUploadsLearningCoverart(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostUploadsLearningCoverart: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuploadspublicassetsimages": {
    "operationId": "postuploadspublicassetsimages",
    "functionName": "PostUploadsPublicassetsImages",
    "signature": "PostUploadsPublicassetsImages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUploadsPublicassetsImagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var body = new UploadUrlRequest(); // UploadUrlRequest | query\n\n            try\n            { \n                // Creates presigned url for uploading a public asset image\n                UploadUrlResponse result = apiInstance.PostUploadsPublicassetsImages(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostUploadsPublicassetsImages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuploadsrecordings": {
    "operationId": "postuploadsrecordings",
    "functionName": "PostUploadsRecordings",
    "signature": "PostUploadsRecordings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUploadsRecordingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var body = new UploadUrlRequest(); // UploadUrlRequest | query\n\n            try\n            { \n                // Creates presigned url for uploading a recording file\n                UploadUrlResponse result = apiInstance.PostUploadsRecordings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostUploadsRecordings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuploadsworkforcemanagementhistoricaldatacsv": {
    "operationId": "postuploadsworkforcemanagementhistoricaldatacsv",
    "functionName": "PostUploadsWorkforcemanagementHistoricaldataCsv",
    "signature": "PostUploadsWorkforcemanagementHistoricaldataCsv(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UploadUrlRequest",
        "required": "true"
      }
    ],
    "return": "UploadUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUploadsWorkforcemanagementHistoricaldataCsvExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UploadsApi();\n            var body = new UploadUrlRequest(); // UploadUrlRequest | query\n\n            try\n            { \n                // Creates presigned url for uploading WFM historical data file. Requires data in csv format.\n                UploadUrlResponse result = apiInstance.PostUploadsWorkforcemanagementHistoricaldataCsv(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Uploads.PostUploadsWorkforcemanagementHistoricaldataCsv: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusagequeryexecutionidresults": {
    "operationId": "getusagequeryexecutionidresults",
    "functionName": "GetUsageQueryExecutionIdResults",
    "signature": "GetUsageQueryExecutionIdResults(executionId)",
    "parameters": [
      {
        "name": "executionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ApiUsageQueryResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsageQueryExecutionIdResultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsageApi();\n            var executionId = \"executionId_example\";  // string | ID of the query execution\n\n            try\n            { \n                // Get the results of a usage query\n                ApiUsageQueryResult result = apiInstance.GetUsageQueryExecutionIdResults(executionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Usage.GetUsageQueryExecutionIdResults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postusagequery": {
    "operationId": "postusagequery",
    "functionName": "PostUsageQuery",
    "signature": "PostUsageQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ApiUsageQuery",
        "required": "true"
      }
    ],
    "return": "UsageExecutionResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsageQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsageApi();\n            var body = new ApiUsageQuery(); // ApiUsageQuery | Query\n\n            try\n            { \n                // Query organization API Usage - \n                UsageExecutionResult result = apiInstance.PostUsageQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Usage.PostUsageQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuserrecording": {
    "operationId": "deleteuserrecording",
    "functionName": "DeleteUserrecording",
    "signature": "DeleteUserrecording(recordingId)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n            var recordingId = \"recordingId_example\";  // string | User Recording ID\n\n            try\n            { \n                // Delete a user recording.\n                apiInstance.DeleteUserrecording(recordingId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.DeleteUserrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserrecording": {
    "operationId": "getuserrecording",
    "functionName": "GetUserrecording",
    "signature": "GetUserrecording(recordingId, expand)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserRecording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n            var recordingId = \"recordingId_example\";  // string | User Recording ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a user recording.\n                UserRecording result = apiInstance.GetUserrecording(recordingId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.GetUserrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserrecordingmedia": {
    "operationId": "getuserrecordingmedia",
    "functionName": "GetUserrecordingMedia",
    "signature": "GetUserrecordingMedia(recordingId, formatId, async)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "async",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "DownloadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserrecordingMediaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n            var recordingId = \"recordingId_example\";  // string | User Recording ID\n            var formatId = \"formatId_example\";  // string | The desired media format. (optional)  (default to WEBM)\n            var async = true;  // bool? | When set to true, api will return 202 response until the recording is ready for download (optional) \n\n            try\n            { \n                // Download a user recording.\n                DownloadResponse result = apiInstance.GetUserrecordingMedia(recordingId, formatId, async);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.GetUserrecordingMedia: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserrecordings": {
    "operationId": "getuserrecordings",
    "functionName": "GetUserrecordings",
    "signature": "GetUserrecordings(pageSize, pageNumber, expand)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserRecordingEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserrecordingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Get a list of user recordings.\n                UserRecordingEntityListing result = apiInstance.GetUserrecordings(pageSize, pageNumber, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.GetUserrecordings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserrecordingssummary": {
    "operationId": "getuserrecordingssummary",
    "functionName": "GetUserrecordingsSummary",
    "signature": "GetUserrecordingsSummary()",
    "return": "FaxSummary",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserrecordingsSummaryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n\n            try\n            { \n                // Get user recording summary\n                FaxSummary result = apiInstance.GetUserrecordingsSummary();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.GetUserrecordingsSummary: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserrecording": {
    "operationId": "putuserrecording",
    "functionName": "PutUserrecording",
    "signature": "PutUserrecording(recordingId, body, expand)",
    "parameters": [
      {
        "name": "recordingId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserRecording",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserRecording",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserrecordingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UserRecordingsApi();\n            var recordingId = \"recordingId_example\";  // string | User Recording ID\n            var body = new UserRecording(); // UserRecording | UserRecording\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n\n            try\n            { \n                // Update a user recording.\n                UserRecording result = apiInstance.PutUserrecording(recordingId, body, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserRecordings.PutUserrecording: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuser": {
    "operationId": "deleteuser",
    "functionName": "DeleteUser",
    "signature": "DeleteUser(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "Object",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Delete user\n                Object result = apiInstance.DeleteUser(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuserstationassociatedstation": {
    "operationId": "deleteuserstationassociatedstation",
    "functionName": "DeleteUserStationAssociatedstation",
    "signature": "DeleteUserStationAssociatedstation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserStationAssociatedstationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Clear associated station\n                apiInstance.DeleteUserStationAssociatedstation(userId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteUserStationAssociatedstation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteuserstationdefaultstation": {
    "operationId": "deleteuserstationdefaultstation",
    "functionName": "DeleteUserStationDefaultstation",
    "signature": "DeleteUserStationDefaultstation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteUserStationDefaultstationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Clear default station\n                apiInstance.DeleteUserStationDefaultstation(userId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.DeleteUserStationDefaultstation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getprofilesusers": {
    "operationId": "getprofilesusers",
    "functionName": "GetProfilesUsers",
    "signature": "GetProfilesUsers(pageSize, pageNumber, id, jid, sortOrder, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "jid",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserProfileEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetProfilesUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | id (optional) \n            var jid = new List<string>(); // List<string> | jid (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\". (optional) \n\n            try\n            { \n                // Get a user profile listing\n                UserProfileEntityListing result = apiInstance.GetProfilesUsers(pageSize, pageNumber, id, jid, sortOrder, expand, integrationPresenceSource);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetProfilesUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuser": {
    "operationId": "getuser",
    "functionName": "GetUser",
    "signature": "GetUser(userId, expand, integrationPresenceSource, state)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | Gets an integration presence for a user instead of their default. (optional) \n            var state = \"state_example\";  // string | Search for a user with this state (optional)  (default to active)\n\n            try\n            { \n                // Get user.\n                User result = apiInstance.GetUser(userId, expand, integrationPresenceSource, state);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuseradjacents": {
    "operationId": "getuseradjacents",
    "functionName": "GetUserAdjacents",
    "signature": "GetUserAdjacents(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "Adjacents",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserAdjacentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get adjacents\n                Adjacents result = apiInstance.GetUserAdjacents(userId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserAdjacents: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusercallforwarding": {
    "operationId": "getusercallforwarding",
    "functionName": "GetUserCallforwarding",
    "signature": "GetUserCallforwarding(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserCallforwardingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get a user's CallForwarding\n                CallForwarding result = apiInstance.GetUserCallforwarding(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserCallforwarding: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserdirectreports": {
    "operationId": "getuserdirectreports",
    "functionName": "GetUserDirectreports",
    "signature": "GetUserDirectreports(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "List<User>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserDirectreportsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get direct reports\n                List<User> result = apiInstance.GetUserDirectreports(userId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserDirectreports: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserfavorites": {
    "operationId": "getuserfavorites",
    "functionName": "GetUserFavorites",
    "signature": "GetUserFavorites(userId, pageSize, pageNumber, sortOrder, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserFavoritesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to \"ASC\")\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Deprecated; will be revived with new contract\n                UserEntityListing result = apiInstance.GetUserFavorites(userId, pageSize, pageNumber, sortOrder, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserFavorites: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuseroutofoffice": {
    "operationId": "getuseroutofoffice",
    "functionName": "GetUserOutofoffice",
    "signature": "GetUserOutofoffice(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "OutOfOffice",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserOutofofficeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get a OutOfOffice\n                OutOfOffice result = apiInstance.GetUserOutofoffice(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserOutofoffice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserprofile": {
    "operationId": "getuserprofile",
    "functionName": "GetUserProfile",
    "signature": "GetUserProfile(userId, expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserProfile",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserProfileExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | userId\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | Gets an integration presence for a user instead of their default. (optional) \n\n            try\n            { \n                // Get user profile\n                UserProfile result = apiInstance.GetUserProfile(userId, expand, integrationPresenceSource);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserProfile: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserprofileskills": {
    "operationId": "getuserprofileskills",
    "functionName": "GetUserProfileskills",
    "signature": "GetUserProfileskills(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserProfileskillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // List profile skills for a user\n                List<string> result = apiInstance.GetUserProfileskills(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserProfileskills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserroutingstatus": {
    "operationId": "getuserroutingstatus",
    "functionName": "GetUserRoutingstatus",
    "signature": "GetUserRoutingstatus(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "RoutingStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserRoutingstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Fetch the routing status of a user\n                RoutingStatus result = apiInstance.GetUserRoutingstatus(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserRoutingstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserstate": {
    "operationId": "getuserstate",
    "functionName": "GetUserState",
    "signature": "GetUserState(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserState",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserStateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get user state information.\n                UserState result = apiInstance.GetUserState(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserState: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getuserstation": {
    "operationId": "getuserstation",
    "functionName": "GetUserStation",
    "signature": "GetUserStation(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "UserStations",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserStationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get station information for user\n                UserStations result = apiInstance.GetUserStation(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserStation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusersuperiors": {
    "operationId": "getusersuperiors",
    "functionName": "GetUserSuperiors",
    "signature": "GetUserSuperiors(userId, expand)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "List<User>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserSuperiorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get superiors\n                List<User> result = apiInstance.GetUserSuperiors(userId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserSuperiors: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusertrustors": {
    "operationId": "getusertrustors",
    "functionName": "GetUserTrustors",
    "signature": "GetUserTrustors(userId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TrustorEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUserTrustorsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List the organizations that have authorized/trusted the user.\n                TrustorEntityListing result = apiInstance.GetUserTrustors(userId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUserTrustors: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusers": {
    "operationId": "getusers",
    "functionName": "GetUsers",
    "signature": "GetUsers(pageSize, pageNumber, id, jabberId, sortOrder, expand, integrationPresenceSource, state)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "id",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "jabberId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      },
      {
        "name": "state",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var id = new List<string>(); // List<string> | A list of user IDs to fetch by bulk (optional) \n            var jabberId = new List<string>(); // List<string> | A list of jabberIds to fetch by bulk (cannot be used with the \\\"id\\\" parameter) (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Ascending or descending sort order (optional)  (default to ASC)\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | Gets an integration presence for users instead of their defaults. This parameter will only be used when presence is provided as an \\\"expand\\\". When using this parameter the maximum number of users that can be returned is 100. (optional) \n            var state = \"state_example\";  // string | Only list users of this state (optional)  (default to active)\n\n            try\n            { \n                // Get the list of available users.\n                UserEntityListing result = apiInstance.GetUsers(pageSize, pageNumber, id, jabberId, sortOrder, expand, integrationPresenceSource, state);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusersdevelopmentactivities": {
    "operationId": "getusersdevelopmentactivities",
    "functionName": "GetUsersDevelopmentActivities",
    "signature": "GetUsersDevelopmentActivities(userId, moduleId, interval, completionInterval, overdue, pageSize, pageNumber, sortOrder, types, statuses, relationship)",
    "parameters": [
      {
        "name": "userId",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DevelopmentActivityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersDevelopmentActivitiesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = new List<string>(); // List<string> | Specifies the list of user IDs to be queried, up to 100 user IDs. It searches for any relationship for the userId. (optional) \n            var moduleId = \"moduleId_example\";  // string | Specifies the ID of the learning module. (optional) \n            var interval = \"interval_example\";  // string | Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (optional)  (default to Any)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (optional)  (default to Desc)\n            var types = new List<string>(); // List<string> | Specifies the activity types. (optional) \n            var statuses = new List<string>(); // List<string> | Specifies the activity statuses to filter by (optional) \n            var relationship = new List<string>(); // List<string> | Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied. (optional) \n\n            try\n            { \n                // Get list of Development Activities\n                DevelopmentActivityListing result = apiInstance.GetUsersDevelopmentActivities(userId, moduleId, interval, completionInterval, overdue, pageSize, pageNumber, sortOrder, types, statuses, relationship);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsersDevelopmentActivities: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusersdevelopmentactivitiesme": {
    "operationId": "getusersdevelopmentactivitiesme",
    "functionName": "GetUsersDevelopmentActivitiesMe",
    "signature": "GetUsersDevelopmentActivitiesMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, sortOrder, types, statuses, relationship)",
    "parameters": [
      {
        "name": "moduleId",
        "type": "string",
        "required": "false"
      },
      {
        "name": "interval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "completionInterval",
        "type": "string",
        "required": "false"
      },
      {
        "name": "overdue",
        "type": "string",
        "required": "false"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "types",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "statuses",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "relationship",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "DevelopmentActivityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersDevelopmentActivitiesMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var moduleId = \"moduleId_example\";  // string | Specifies the ID of the learning module. (optional) \n            var interval = \"interval_example\";  // string | Specifies the dateDue range to be queried. Milliseconds will be truncated. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var completionInterval = \"completionInterval_example\";  // string | Specifies the range of completion dates to be used for filtering. A maximum of 1 year can be specified in the range. End date is not inclusive. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss (optional) \n            var overdue = \"overdue_example\";  // string | Specifies if non-overdue, overdue, or all activities are returned. If not specified, all activities are returned (optional)  (default to Any)\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n            var sortOrder = \"sortOrder_example\";  // string | Specifies result set sort order sorted by the date due; if not specified, default sort order is descending (Desc) (optional)  (default to Desc)\n            var types = new List<string>(); // List<string> | Specifies the activity types. (optional) \n            var statuses = new List<string>(); // List<string> | Specifies the activity statuses to filter by (optional) \n            var relationship = new List<string>(); // List<string> | Specifies how the current user relation should be interpreted, and filters the activities returned to only the activities that have the specified relationship. If a value besides Attendee is specified, it will only return Coaching Appointments. If not specified, no filtering is applied. (optional) \n\n            try\n            { \n                // Get list of Development Activities for current user\n                DevelopmentActivityListing result = apiInstance.GetUsersDevelopmentActivitiesMe(moduleId, interval, completionInterval, overdue, pageSize, pageNumber, sortOrder, types, statuses, relationship);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsersDevelopmentActivitiesMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusersdevelopmentactivity": {
    "operationId": "getusersdevelopmentactivity",
    "functionName": "GetUsersDevelopmentActivity",
    "signature": "GetUsersDevelopmentActivity(activityId, type)",
    "parameters": [
      {
        "name": "activityId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "type",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "DevelopmentActivity",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersDevelopmentActivityExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var activityId = \"activityId_example\";  // string | Specifies the activity ID, maps to either assignment or appointment ID\n            var type = \"type_example\";  // string | Specifies the activity type.\n\n            try\n            { \n                // Get a Development Activity\n                DevelopmentActivity result = apiInstance.GetUsersDevelopmentActivity(activityId, type);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsersDevelopmentActivity: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getusersme": {
    "operationId": "getusersme",
    "functionName": "GetUsersMe",
    "signature": "GetUsersMe(expand, integrationPresenceSource)",
    "parameters": [
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "integrationPresenceSource",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "UserMe",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetUsersMeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var expand = new List<string>(); // List<string> | Which fields, if any, to expand. (optional) \n            var integrationPresenceSource = \"integrationPresenceSource_example\";  // string | Get your presence for a given integration. This parameter will only be used when presence is provided as an \\\"expand\\\". (optional) \n\n            try\n            { \n                // Get current user details.\n                UserMe result = apiInstance.GetUsersMe(expand, integrationPresenceSource);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.GetUsersMe: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchuser": {
    "operationId": "patchuser",
    "functionName": "PatchUser",
    "signature": "PatchUser(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateUser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UpdateUser(); // UpdateUser | User\n\n            try\n            { \n                // Update user\n                User result = apiInstance.PatchUser(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUser: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchusercallforwarding": {
    "operationId": "patchusercallforwarding",
    "functionName": "PatchUserCallforwarding",
    "signature": "PatchUserCallforwarding(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallForwarding",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUserCallforwardingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new CallForwarding(); // CallForwarding | Call forwarding\n\n            try\n            { \n                // Patch a user's CallForwarding\n                CallForwarding result = apiInstance.PatchUserCallforwarding(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUserCallforwarding: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchusersbulk": {
    "operationId": "patchusersbulk",
    "functionName": "PatchUsersBulk",
    "signature": "PatchUsersBulk(body)",
    "parameters": [
      {
        "name": "body",
        "type": "List<PatchUser>",
        "required": "true"
      }
    ],
    "return": "UserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchUsersBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new List<PatchUser>(); // List<PatchUser> | Users\n\n            try\n            { \n                // Update bulk acd autoanswer on users\n                UserEntityListing result = apiInstance.PatchUsersBulk(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PatchUsersBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserexternalid": {
    "operationId": "postuserexternalid",
    "functionName": "PostUserExternalid",
    "signature": "PostUserExternalid(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserExternalIdentifier",
        "required": "true"
      }
    ],
    "return": "List<UserExternalIdentifier>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserExternalidExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UserExternalIdentifier(); // UserExternalIdentifier | \n\n            try\n            { \n                // Create mapping between external identifier and user. Limit 100 per entity.\n                List<UserExternalIdentifier> result = apiInstance.PostUserExternalid(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUserExternalid: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserinvite": {
    "operationId": "postuserinvite",
    "functionName": "PostUserInvite",
    "signature": "PostUserInvite(userId, force)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "force",
        "type": "bool?",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserInviteExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var force = true;  // bool? | Resend the invitation even if one is already outstanding (optional)  (default to false)\n\n            try\n            { \n                // Send an activation email to the user\n                apiInstance.PostUserInvite(userId, force);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUserInvite: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postuserpassword": {
    "operationId": "postuserpassword",
    "functionName": "PostUserPassword",
    "signature": "PostUserPassword(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ChangePasswordRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUserPasswordExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new ChangePasswordRequest(); // ChangePasswordRequest | Password\n\n            try\n            { \n                // Change a users password\n                apiInstance.PostUserPassword(userId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUserPassword: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postusers": {
    "operationId": "postusers",
    "functionName": "PostUsers",
    "signature": "PostUsers(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateUser",
        "required": "true"
      }
    ],
    "return": "User",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new CreateUser(); // CreateUser | User\n\n            try\n            { \n                // Create user\n                User result = apiInstance.PostUsers(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postusersdevelopmentactivitiesaggregatesquery": {
    "operationId": "postusersdevelopmentactivitiesaggregatesquery",
    "functionName": "PostUsersDevelopmentActivitiesAggregatesQuery",
    "signature": "PostUsersDevelopmentActivitiesAggregatesQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "DevelopmentActivityAggregateParam",
        "required": "true"
      }
    ],
    "return": "DevelopmentActivityAggregateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsersDevelopmentActivitiesAggregatesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new DevelopmentActivityAggregateParam(); // DevelopmentActivityAggregateParam | Aggregate Request\n\n            try\n            { \n                // Retrieve aggregated development activity data\n                DevelopmentActivityAggregateResponse result = apiInstance.PostUsersDevelopmentActivitiesAggregatesQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUsersDevelopmentActivitiesAggregatesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postusersmepassword": {
    "operationId": "postusersmepassword",
    "functionName": "PostUsersMePassword",
    "signature": "PostUsersMePassword(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ChangeMyPasswordRequest",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostUsersMePasswordExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var body = new ChangeMyPasswordRequest(); // ChangeMyPasswordRequest | Password\n\n            try\n            { \n                // Change your password\n                apiInstance.PostUsersMePassword(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PostUsersMePassword: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putusercallforwarding": {
    "operationId": "putusercallforwarding",
    "functionName": "PutUserCallforwarding",
    "signature": "PutUserCallforwarding(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CallForwarding",
        "required": "true"
      }
    ],
    "return": "CallForwarding",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserCallforwardingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new CallForwarding(); // CallForwarding | Call forwarding\n\n            try\n            { \n                // Update a user's CallForwarding\n                CallForwarding result = apiInstance.PutUserCallforwarding(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserCallforwarding: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuseroutofoffice": {
    "operationId": "putuseroutofoffice",
    "functionName": "PutUserOutofoffice",
    "signature": "PutUserOutofoffice(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "OutOfOffice",
        "required": "true"
      }
    ],
    "return": "OutOfOffice",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserOutofofficeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new OutOfOffice(); // OutOfOffice | The updated OutOffOffice\n\n            try\n            { \n                // Update an OutOfOffice\n                OutOfOffice result = apiInstance.PutUserOutofoffice(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserOutofoffice: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserprofileskills": {
    "operationId": "putuserprofileskills",
    "functionName": "PutUserProfileskills",
    "signature": "PutUserProfileskills(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<string>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserProfileskillsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new List<string>(); // List<string> | Skills\n\n            try\n            { \n                // Update profile skills for a user\n                List<string> result = apiInstance.PutUserProfileskills(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserProfileskills: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserroutingstatus": {
    "operationId": "putuserroutingstatus",
    "functionName": "PutUserRoutingstatus",
    "signature": "PutUserRoutingstatus(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "RoutingStatus",
        "required": "true"
      }
    ],
    "return": "RoutingStatus",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserRoutingstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new RoutingStatus(); // RoutingStatus | Routing Status\n\n            try\n            { \n                // Update the routing status of a user\n                RoutingStatus result = apiInstance.PutUserRoutingstatus(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserRoutingstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserstate": {
    "operationId": "putuserstate",
    "functionName": "PutUserState",
    "signature": "PutUserState(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserState",
        "required": "true"
      }
    ],
    "return": "UserState",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserStateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new UserState(); // UserState | User\n\n            try\n            { \n                // Update user state information.\n                UserState result = apiInstance.PutUserState(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserState: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserstationassociatedstationstationid": {
    "operationId": "putuserstationassociatedstationstationid",
    "functionName": "PutUserStationAssociatedstationStationId",
    "signature": "PutUserStationAssociatedstationStationId(userId, stationId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserStationAssociatedstationStationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var stationId = \"stationId_example\";  // string | stationId\n\n            try\n            { \n                // Set associated station\n                apiInstance.PutUserStationAssociatedstationStationId(userId, stationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserStationAssociatedstationStationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putuserstationdefaultstationstationid": {
    "operationId": "putuserstationdefaultstationstationid",
    "functionName": "PutUserStationDefaultstationStationId",
    "signature": "PutUserStationDefaultstationStationId(userId, stationId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "stationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutUserStationDefaultstationStationIdExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UsersApi();\n            var userId = \"userId_example\";  // string | User ID\n            var stationId = \"stationId_example\";  // string | stationId\n\n            try\n            { \n                // Set default station\n                apiInstance.PutUserStationDefaultstationStationId(userId, stationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Users.PutUserStationDefaultstationStationId: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getdate": {
    "operationId": "getdate",
    "functionName": "GetDate",
    "signature": "GetDate()",
    "return": "ServerDate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetDateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UtilitiesApi();\n\n            try\n            { \n                // Get the current system date/time\n                ServerDate result = apiInstance.GetDate();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Utilities.GetDate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getipranges": {
    "operationId": "getipranges",
    "functionName": "GetIpranges",
    "signature": "GetIpranges()",
    "return": "IpAddressRangeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetIprangesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UtilitiesApi();\n\n            try\n            { \n                // Get public ip address ranges for Genesys Cloud\n                IpAddressRangeListing result = apiInstance.GetIpranges();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Utilities.GetIpranges: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "gettimezones": {
    "operationId": "gettimezones",
    "functionName": "GetTimezones",
    "signature": "GetTimezones(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "TimeZoneEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetTimezonesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UtilitiesApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get time zones list\n                TimeZoneEntityListing result = apiInstance.GetTimezones(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Utilities.GetTimezones: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postcertificatedetails": {
    "operationId": "postcertificatedetails",
    "functionName": "PostCertificateDetails",
    "signature": "PostCertificateDetails(body)",
    "parameters": [
      {
        "name": "body",
        "type": "Certificate",
        "required": "true"
      }
    ],
    "return": "ParsedCertificate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostCertificateDetailsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new UtilitiesApi();\n            var body = new Certificate(); // Certificate | Certificate\n\n            try\n            { \n                // Returns the information about an X509 PEM encoded certificate or certificate chain.\n                ParsedCertificate result = apiInstance.PostCertificateDetails(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Utilities.PostCertificateDetails: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletevoicemailmessage": {
    "operationId": "deletevoicemailmessage",
    "functionName": "DeleteVoicemailMessage",
    "signature": "DeleteVoicemailMessage(messageId)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteVoicemailMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var messageId = \"messageId_example\";  // string | Message ID\n\n            try\n            { \n                // Delete a voicemail message.\n                apiInstance.DeleteVoicemailMessage(messageId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.DeleteVoicemailMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletevoicemailmessages": {
    "operationId": "deletevoicemailmessages",
    "functionName": "DeleteVoicemailMessages",
    "signature": "DeleteVoicemailMessages()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteVoicemailMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n\n            try\n            { \n                // Delete all voicemail messages\n                apiInstance.DeleteVoicemailMessages();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.DeleteVoicemailMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailgroupmailbox": {
    "operationId": "getvoicemailgroupmailbox",
    "functionName": "GetVoicemailGroupMailbox",
    "signature": "GetVoicemailGroupMailbox(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "VoicemailMailboxInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailGroupMailboxExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var groupId = \"groupId_example\";  // string | groupId\n\n            try\n            { \n                // Get the group's mailbox information\n                VoicemailMailboxInfo result = apiInstance.GetVoicemailGroupMailbox(groupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailGroupMailbox: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailgroupmessages": {
    "operationId": "getvoicemailgroupmessages",
    "functionName": "GetVoicemailGroupMessages",
    "signature": "GetVoicemailGroupMessages(groupId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailGroupMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List voicemail messages\n                VoicemailMessageEntityListing result = apiInstance.GetVoicemailGroupMessages(groupId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailGroupMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailgrouppolicy": {
    "operationId": "getvoicemailgrouppolicy",
    "functionName": "GetVoicemailGroupPolicy",
    "signature": "GetVoicemailGroupPolicy(groupId)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "VoicemailGroupPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailGroupPolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n\n            try\n            { \n                // Get a group's voicemail policy\n                VoicemailGroupPolicy result = apiInstance.GetVoicemailGroupPolicy(groupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailGroupPolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmailbox": {
    "operationId": "getvoicemailmailbox",
    "functionName": "GetVoicemailMailbox",
    "signature": "GetVoicemailMailbox()",
    "return": "VoicemailMailboxInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMailboxExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n\n            try\n            { \n                // Get the current user's mailbox information\n                VoicemailMailboxInfo result = apiInstance.GetVoicemailMailbox();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMailbox: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmemailbox": {
    "operationId": "getvoicemailmemailbox",
    "functionName": "GetVoicemailMeMailbox",
    "signature": "GetVoicemailMeMailbox()",
    "return": "VoicemailMailboxInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMeMailboxExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n\n            try\n            { \n                // Get the current user's mailbox information\n                VoicemailMailboxInfo result = apiInstance.GetVoicemailMeMailbox();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMeMailbox: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmemessages": {
    "operationId": "getvoicemailmemessages",
    "functionName": "GetVoicemailMeMessages",
    "signature": "GetVoicemailMeMessages(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMeMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List voicemail messages\n                VoicemailMessageEntityListing result = apiInstance.GetVoicemailMeMessages(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMeMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmepolicy": {
    "operationId": "getvoicemailmepolicy",
    "functionName": "GetVoicemailMePolicy",
    "signature": "GetVoicemailMePolicy()",
    "return": "VoicemailUserPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMePolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n\n            try\n            { \n                // Get the current user's voicemail policy\n                VoicemailUserPolicy result = apiInstance.GetVoicemailMePolicy();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMePolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmessage": {
    "operationId": "getvoicemailmessage",
    "functionName": "GetVoicemailMessage",
    "signature": "GetVoicemailMessage(messageId, expand)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "VoicemailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var messageId = \"messageId_example\";  // string | Message ID\n            var expand = new List<string>(); // List<string> | If the caller is a known user, which fields, if any, to expand (optional) \n\n            try\n            { \n                // Get a voicemail message\n                VoicemailMessage result = apiInstance.GetVoicemailMessage(messageId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmessagemedia": {
    "operationId": "getvoicemailmessagemedia",
    "functionName": "GetVoicemailMessageMedia",
    "signature": "GetVoicemailMessageMedia(messageId, formatId)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "formatId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "VoicemailMediaInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMessageMediaExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var messageId = \"messageId_example\";  // string | Message ID\n            var formatId = \"formatId_example\";  // string | The desired media format. (optional)  (default to WEBM)\n\n            try\n            { \n                // Get media playback URI for this voicemail message\n                VoicemailMediaInfo result = apiInstance.GetVoicemailMessageMedia(messageId, formatId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMessageMedia: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailmessages": {
    "operationId": "getvoicemailmessages",
    "functionName": "GetVoicemailMessages",
    "signature": "GetVoicemailMessages(ids, expand)",
    "parameters": [
      {
        "name": "ids",
        "type": "string",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var ids = \"ids_example\";  // string | An optional comma separated list of VoicemailMessage ids (optional) \n            var expand = new List<string>(); // List<string> | If the caller is a known user, which fields, if any, to expand (optional) \n\n            try\n            { \n                // List voicemail messages\n                VoicemailMessageEntityListing result = apiInstance.GetVoicemailMessages(ids, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailpolicy": {
    "operationId": "getvoicemailpolicy",
    "functionName": "GetVoicemailPolicy",
    "signature": "GetVoicemailPolicy()",
    "return": "VoicemailOrganizationPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailPolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n\n            try\n            { \n                // Get a policy\n                VoicemailOrganizationPolicy result = apiInstance.GetVoicemailPolicy();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailPolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailqueuemessages": {
    "operationId": "getvoicemailqueuemessages",
    "functionName": "GetVoicemailQueueMessages",
    "signature": "GetVoicemailQueueMessages(queueId, pageSize, pageNumber)",
    "parameters": [
      {
        "name": "queueId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "VoicemailMessageEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailQueueMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var queueId = \"queueId_example\";  // string | Queue ID\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // List voicemail messages\n                VoicemailMessageEntityListing result = apiInstance.GetVoicemailQueueMessages(queueId, pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailQueueMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getvoicemailuserpolicy": {
    "operationId": "getvoicemailuserpolicy",
    "functionName": "GetVoicemailUserpolicy",
    "signature": "GetVoicemailUserpolicy(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetVoicemailUserpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var userId = \"userId_example\";  // string | User ID\n\n            try\n            { \n                // Get a user's voicemail policy\n                VoicemailUserPolicy result = apiInstance.GetVoicemailUserpolicy(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.GetVoicemailUserpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchvoicemailgrouppolicy": {
    "operationId": "patchvoicemailgrouppolicy",
    "functionName": "PatchVoicemailGroupPolicy",
    "signature": "PatchVoicemailGroupPolicy(groupId, body)",
    "parameters": [
      {
        "name": "groupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailGroupPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailGroupPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchVoicemailGroupPolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var groupId = \"groupId_example\";  // string | Group ID\n            var body = new VoicemailGroupPolicy(); // VoicemailGroupPolicy | The group's voicemail policy\n\n            try\n            { \n                // Update a group's voicemail policy\n                VoicemailGroupPolicy result = apiInstance.PatchVoicemailGroupPolicy(groupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PatchVoicemailGroupPolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchvoicemailmepolicy": {
    "operationId": "patchvoicemailmepolicy",
    "functionName": "PatchVoicemailMePolicy",
    "signature": "PatchVoicemailMePolicy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchVoicemailMePolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var body = new VoicemailUserPolicy(); // VoicemailUserPolicy | The user's voicemail policy\n\n            try\n            { \n                // Update the current user's voicemail policy\n                VoicemailUserPolicy result = apiInstance.PatchVoicemailMePolicy(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PatchVoicemailMePolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchvoicemailmessage": {
    "operationId": "patchvoicemailmessage",
    "functionName": "PatchVoicemailMessage",
    "signature": "PatchVoicemailMessage(messageId, body)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailMessage",
        "required": "true"
      }
    ],
    "return": "VoicemailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchVoicemailMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var messageId = \"messageId_example\";  // string | Message ID\n            var body = new VoicemailMessage(); // VoicemailMessage | VoicemailMessage\n\n            try\n            { \n                // Update a voicemail message\n                VoicemailMessage result = apiInstance.PatchVoicemailMessage(messageId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PatchVoicemailMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchvoicemailuserpolicy": {
    "operationId": "patchvoicemailuserpolicy",
    "functionName": "PatchVoicemailUserpolicy",
    "signature": "PatchVoicemailUserpolicy(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchVoicemailUserpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new VoicemailUserPolicy(); // VoicemailUserPolicy | The user's voicemail policy\n\n            try\n            { \n                // Update a user's voicemail policy\n                VoicemailUserPolicy result = apiInstance.PatchVoicemailUserpolicy(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PatchVoicemailUserpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postvoicemailmessages": {
    "operationId": "postvoicemailmessages",
    "functionName": "PostVoicemailMessages",
    "signature": "PostVoicemailMessages(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CopyVoicemailMessage",
        "required": "false"
      }
    ],
    "return": "VoicemailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostVoicemailMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var body = new CopyVoicemailMessage(); // CopyVoicemailMessage |  (optional) \n\n            try\n            { \n                // Copy a voicemail message to a user or group\n                VoicemailMessage result = apiInstance.PostVoicemailMessages(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PostVoicemailMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putvoicemailmessage": {
    "operationId": "putvoicemailmessage",
    "functionName": "PutVoicemailMessage",
    "signature": "PutVoicemailMessage(messageId, body)",
    "parameters": [
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailMessage",
        "required": "true"
      }
    ],
    "return": "VoicemailMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutVoicemailMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var messageId = \"messageId_example\";  // string | Message ID\n            var body = new VoicemailMessage(); // VoicemailMessage | VoicemailMessage\n\n            try\n            { \n                // Update a voicemail message\n                VoicemailMessage result = apiInstance.PutVoicemailMessage(messageId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PutVoicemailMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putvoicemailpolicy": {
    "operationId": "putvoicemailpolicy",
    "functionName": "PutVoicemailPolicy",
    "signature": "PutVoicemailPolicy(body)",
    "parameters": [
      {
        "name": "body",
        "type": "VoicemailOrganizationPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailOrganizationPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutVoicemailPolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var body = new VoicemailOrganizationPolicy(); // VoicemailOrganizationPolicy | Policy\n\n            try\n            { \n                // Update a policy\n                VoicemailOrganizationPolicy result = apiInstance.PutVoicemailPolicy(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PutVoicemailPolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putvoicemailuserpolicy": {
    "operationId": "putvoicemailuserpolicy",
    "functionName": "PutVoicemailUserpolicy",
    "signature": "PutVoicemailUserpolicy(userId, body)",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "VoicemailUserPolicy",
        "required": "true"
      }
    ],
    "return": "VoicemailUserPolicy",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutVoicemailUserpolicyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new VoicemailApi();\n            var userId = \"userId_example\";  // string | User ID\n            var body = new VoicemailUserPolicy(); // VoicemailUserPolicy | The user's voicemail policy\n\n            try\n            { \n                // Update a user's voicemail policy\n                VoicemailUserPolicy result = apiInstance.PutVoicemailUserpolicy(userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Voicemail.PutVoicemailUserpolicy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewebchatdeployment": {
    "operationId": "deletewebchatdeployment",
    "functionName": "DeleteWebchatDeployment",
    "signature": "DeleteWebchatDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWebchatDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n            var deploymentId = \"deploymentId_example\";  // string | Deployment Id\n\n            try\n            { \n                // Delete a WebChat deployment\n                apiInstance.DeleteWebchatDeployment(deploymentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.DeleteWebchatDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewebchatguestconversationmember": {
    "operationId": "deletewebchatguestconversationmember",
    "functionName": "DeleteWebchatGuestConversationMember",
    "signature": "DeleteWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWebchatGuestConversationMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var memberId = \"memberId_example\";  // string | memberId\n\n            try\n            { \n                // Remove a member from a chat conversation\n                apiInstance.DeleteWebchatGuestConversationMember(conversationId, memberId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.DeleteWebchatGuestConversationMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewebchatsettings": {
    "operationId": "deletewebchatsettings",
    "functionName": "DeleteWebchatSettings",
    "signature": "DeleteWebchatSettings()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWebchatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n\n            try\n            { \n                // Remove WebChat deployment settings\n                apiInstance.DeleteWebchatSettings();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.DeleteWebchatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatdeployment": {
    "operationId": "getwebchatdeployment",
    "functionName": "GetWebchatDeployment",
    "signature": "GetWebchatDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n            var deploymentId = \"deploymentId_example\";  // string | Deployment Id\n\n            try\n            { \n                // Get a WebChat deployment\n                WebChatDeployment result = apiInstance.GetWebchatDeployment(deploymentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatdeployments": {
    "operationId": "getwebchatdeployments",
    "functionName": "GetWebchatDeployments",
    "signature": "GetWebchatDeployments()",
    "return": "WebChatDeploymentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n\n            try\n            { \n                // List WebChat deployments\n                WebChatDeploymentEntityListing result = apiInstance.GetWebchatDeployments();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmediarequest": {
    "operationId": "getwebchatguestconversationmediarequest",
    "functionName": "GetWebchatGuestConversationMediarequest",
    "signature": "GetWebchatGuestConversationMediarequest(conversationId, mediaRequestId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMediarequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var mediaRequestId = \"mediaRequestId_example\";  // string | mediaRequestId\n\n            try\n            { \n                // Get a media request in the conversation\n                WebChatGuestMediaRequest result = apiInstance.GetWebchatGuestConversationMediarequest(conversationId, mediaRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMediarequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmediarequests": {
    "operationId": "getwebchatguestconversationmediarequests",
    "functionName": "GetWebchatGuestConversationMediarequests",
    "signature": "GetWebchatGuestConversationMediarequests(conversationId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequestEntityList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMediarequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n\n            try\n            { \n                // Get all media requests to the guest in the conversation\n                WebChatGuestMediaRequestEntityList result = apiInstance.GetWebchatGuestConversationMediarequests(conversationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMediarequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmember": {
    "operationId": "getwebchatguestconversationmember",
    "functionName": "GetWebchatGuestConversationMember",
    "signature": "GetWebchatGuestConversationMember(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatMemberInfo",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMemberExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var memberId = \"memberId_example\";  // string | memberId\n\n            try\n            { \n                // Get a web chat conversation member\n                WebChatMemberInfo result = apiInstance.GetWebchatGuestConversationMember(conversationId, memberId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMember: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmembers": {
    "operationId": "getwebchatguestconversationmembers",
    "functionName": "GetWebchatGuestConversationMembers",
    "signature": "GetWebchatGuestConversationMembers(conversationId, pageSize, pageNumber, excludeDisconnectedMembers)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "excludeDisconnectedMembers",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "WebChatMemberInfoEntityList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMembersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var pageSize = 56;  // int? | The number of entries to return per page, or omitted for the default. (optional)  (default to 25)\n            var pageNumber = 56;  // int? | The page number to return, or omitted for the first page. (optional)  (default to 1)\n            var excludeDisconnectedMembers = true;  // bool? | If true, the results will not contain members who have a DISCONNECTED state. (optional)  (default to false)\n\n            try\n            { \n                // Get the members of a chat conversation.\n                WebChatMemberInfoEntityList result = apiInstance.GetWebchatGuestConversationMembers(conversationId, pageSize, pageNumber, excludeDisconnectedMembers);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMembers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmessage": {
    "operationId": "getwebchatguestconversationmessage",
    "functionName": "GetWebchatGuestConversationMessage",
    "signature": "GetWebchatGuestConversationMessage(conversationId, messageId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "messageId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMessageExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var messageId = \"messageId_example\";  // string | messageId\n\n            try\n            { \n                // Get a web chat conversation message\n                WebChatMessage result = apiInstance.GetWebchatGuestConversationMessage(conversationId, messageId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMessage: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatguestconversationmessages": {
    "operationId": "getwebchatguestconversationmessages",
    "functionName": "GetWebchatGuestConversationMessages",
    "signature": "GetWebchatGuestConversationMessages(conversationId, after, before, sortOrder, maxResults)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "after",
        "type": "string",
        "required": "false"
      },
      {
        "name": "before",
        "type": "string",
        "required": "false"
      },
      {
        "name": "sortOrder",
        "type": "string",
        "required": "false"
      },
      {
        "name": "maxResults",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "WebChatMessageEntityList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatGuestConversationMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var after = \"after_example\";  // string | If available, get the messages chronologically after the id of this message (optional) \n            var before = \"before_example\";  // string | If available, get the messages chronologically before the id of this message (optional) \n            var sortOrder = \"sortOrder_example\";  // string | Sort order (optional)  (default to ascending)\n            var maxResults = 56;  // int? | Limit the returned number of messages, up to a maximum of 100 (optional)  (default to 100)\n\n            try\n            { \n                // Get the messages of a chat conversation.\n                WebChatMessageEntityList result = apiInstance.GetWebchatGuestConversationMessages(conversationId, after, before, sortOrder, maxResults);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatGuestConversationMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebchatsettings": {
    "operationId": "getwebchatsettings",
    "functionName": "GetWebchatSettings",
    "signature": "GetWebchatSettings()",
    "return": "WebChatSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebchatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n\n            try\n            { \n                // Get WebChat deployment settings\n                WebChatSettings result = apiInstance.GetWebchatSettings();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.GetWebchatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchwebchatguestconversationmediarequest": {
    "operationId": "patchwebchatguestconversationmediarequest",
    "functionName": "PatchWebchatGuestConversationMediarequest",
    "signature": "PatchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "mediaRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WebChatGuestMediaRequest",
        "required": "true"
      }
    ],
    "return": "WebChatGuestMediaRequest",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWebchatGuestConversationMediarequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var mediaRequestId = \"mediaRequestId_example\";  // string | mediaRequestId\n            var body = new WebChatGuestMediaRequest(); // WebChatGuestMediaRequest | Request\n\n            try\n            { \n                // Update a media request in the conversation, setting the state to ACCEPTED/DECLINED/ERRORED\n                WebChatGuestMediaRequest result = apiInstance.PatchWebchatGuestConversationMediarequest(conversationId, mediaRequestId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PatchWebchatGuestConversationMediarequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebchatdeployments": {
    "operationId": "postwebchatdeployments",
    "functionName": "PostWebchatDeployments",
    "signature": "PostWebchatDeployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebChatDeployment",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebchatDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n            var body = new WebChatDeployment(); // WebChatDeployment | Deployment\n\n            try\n            { \n                // Create WebChat deployment\n                WebChatDeployment result = apiInstance.PostWebchatDeployments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PostWebchatDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebchatguestconversationmembermessages": {
    "operationId": "postwebchatguestconversationmembermessages",
    "functionName": "PostWebchatGuestConversationMemberMessages",
    "signature": "PostWebchatGuestConversationMemberMessages(conversationId, memberId, body)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateWebChatMessageRequest",
        "required": "true"
      }
    ],
    "return": "WebChatMessage",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebchatGuestConversationMemberMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var memberId = \"memberId_example\";  // string | memberId\n            var body = new CreateWebChatMessageRequest(); // CreateWebChatMessageRequest | Message\n\n            try\n            { \n                // Send a message in a chat conversation.\n                WebChatMessage result = apiInstance.PostWebchatGuestConversationMemberMessages(conversationId, memberId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PostWebchatGuestConversationMemberMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebchatguestconversationmembertyping": {
    "operationId": "postwebchatguestconversationmembertyping",
    "functionName": "PostWebchatGuestConversationMemberTyping",
    "signature": "PostWebchatGuestConversationMemberTyping(conversationId, memberId)",
    "parameters": [
      {
        "name": "conversationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "memberId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebChatTyping",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebchatGuestConversationMemberTypingExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure API key authorization: Guest Chat JWT\n            Configuration.Default.ApiKey.Add(\"Authorization\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. BEARER) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"Authorization\", \"BEARER\");\n\n            var apiInstance = new WebChatApi();\n            var conversationId = \"conversationId_example\";  // string | conversationId\n            var memberId = \"memberId_example\";  // string | memberId\n\n            try\n            { \n                // Send a typing-indicator in a chat conversation.\n                WebChatTyping result = apiInstance.PostWebchatGuestConversationMemberTyping(conversationId, memberId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PostWebchatGuestConversationMemberTyping: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebchatguestconversations": {
    "operationId": "postwebchatguestconversations",
    "functionName": "PostWebchatGuestConversations",
    "signature": "PostWebchatGuestConversations(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateWebChatConversationRequest",
        "required": "true"
      }
    ],
    "return": "CreateWebChatConversationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebchatGuestConversationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new WebChatApi();\n            var body = new CreateWebChatConversationRequest(); // CreateWebChatConversationRequest | CreateConversationRequest\n\n            try\n            { \n                // Create an ACD chat conversation from an external customer.\n                CreateWebChatConversationResponse result = apiInstance.PostWebchatGuestConversations(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PostWebchatGuestConversations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putwebchatdeployment": {
    "operationId": "putwebchatdeployment",
    "functionName": "PutWebchatDeployment",
    "signature": "PutWebchatDeployment(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WebChatDeployment",
        "required": "true"
      }
    ],
    "return": "WebChatDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWebchatDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n            var deploymentId = \"deploymentId_example\";  // string | Deployment Id\n            var body = new WebChatDeployment(); // WebChatDeployment | Deployment\n\n            try\n            { \n                // Update a WebChat deployment\n                WebChatDeployment result = apiInstance.PutWebchatDeployment(deploymentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PutWebchatDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putwebchatsettings": {
    "operationId": "putwebchatsettings",
    "functionName": "PutWebchatSettings",
    "signature": "PutWebchatSettings(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WebChatSettings",
        "required": "true"
      }
    ],
    "return": "WebChatSettings",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWebchatSettingsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebChatApi();\n            var body = new WebChatSettings(); // WebChatSettings | webChatSettings\n\n            try\n            { \n                // Update WebChat deployment settings\n                WebChatSettings result = apiInstance.PutWebchatSettings(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebChat.PutWebchatSettings: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewebdeploymentsconfiguration": {
    "operationId": "deletewebdeploymentsconfiguration",
    "functionName": "DeleteWebdeploymentsConfiguration",
    "signature": "DeleteWebdeploymentsConfiguration(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWebdeploymentsConfigurationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n\n            try\n            { \n                // Delete all versions of a configuration\n                apiInstance.DeleteWebdeploymentsConfiguration(configurationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.DeleteWebdeploymentsConfiguration: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewebdeploymentsdeployment": {
    "operationId": "deletewebdeploymentsdeployment",
    "functionName": "DeleteWebdeploymentsDeployment",
    "signature": "DeleteWebdeploymentsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWebdeploymentsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var deploymentId = \"deploymentId_example\";  // string | The deployment ID\n\n            try\n            { \n                // Delete a deployment\n                apiInstance.DeleteWebdeploymentsDeployment(deploymentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.DeleteWebdeploymentsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsconfigurationversion": {
    "operationId": "getwebdeploymentsconfigurationversion",
    "functionName": "GetWebdeploymentsConfigurationVersion",
    "signature": "GetWebdeploymentsConfigurationVersion(configurationId, versionId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "versionId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsConfigurationVersionExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n            var versionId = \"versionId_example\";  // string | The version of the configuration to get\n\n            try\n            { \n                // Get a configuration version\n                WebDeploymentConfigurationVersion result = apiInstance.GetWebdeploymentsConfigurationVersion(configurationId, versionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsConfigurationVersion: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsconfigurationversions": {
    "operationId": "getwebdeploymentsconfigurationversions",
    "functionName": "GetWebdeploymentsConfigurationVersions",
    "signature": "GetWebdeploymentsConfigurationVersions(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsConfigurationVersionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n\n            try\n            { \n                // Get the versions of a configuration\n                WebDeploymentConfigurationVersionEntityListing result = apiInstance.GetWebdeploymentsConfigurationVersions(configurationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsConfigurationVersions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsconfigurationversionsdraft": {
    "operationId": "getwebdeploymentsconfigurationversionsdraft",
    "functionName": "GetWebdeploymentsConfigurationVersionsDraft",
    "signature": "GetWebdeploymentsConfigurationVersionsDraft(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsConfigurationVersionsDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n\n            try\n            { \n                // Get the configuration draft\n                WebDeploymentConfigurationVersion result = apiInstance.GetWebdeploymentsConfigurationVersionsDraft(configurationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsConfigurationVersionsDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsconfigurations": {
    "operationId": "getwebdeploymentsconfigurations",
    "functionName": "GetWebdeploymentsConfigurations",
    "signature": "GetWebdeploymentsConfigurations(showOnlyPublished)",
    "parameters": [
      {
        "name": "showOnlyPublished",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "WebDeploymentConfigurationVersionEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsConfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var showOnlyPublished = true;  // bool? | Get only configuration drafts with published versions (optional)  (default to false)\n\n            try\n            { \n                // View configuration drafts\n                WebDeploymentConfigurationVersionEntityListing result = apiInstance.GetWebdeploymentsConfigurations(showOnlyPublished);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsConfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsdeployment": {
    "operationId": "getwebdeploymentsdeployment",
    "functionName": "GetWebdeploymentsDeployment",
    "signature": "GetWebdeploymentsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var deploymentId = \"deploymentId_example\";  // string | The deployment ID\n\n            try\n            { \n                // Get a deployment\n                WebDeployment result = apiInstance.GetWebdeploymentsDeployment(deploymentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsdeploymentconfigurations": {
    "operationId": "getwebdeploymentsdeploymentconfigurations",
    "functionName": "GetWebdeploymentsDeploymentConfigurations",
    "signature": "GetWebdeploymentsDeploymentConfigurations(deploymentId, type)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "type",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WebDeploymentActiveConfigurationOnDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsDeploymentConfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var deploymentId = \"deploymentId_example\";  // string | The deployment ID\n            var type = \"type_example\";  // string | Get active configuration on a deployment (optional) \n\n            try\n            { \n                // Get active configuration for a given deployment\n                WebDeploymentActiveConfigurationOnDeployment result = apiInstance.GetWebdeploymentsDeploymentConfigurations(deploymentId, type);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsDeploymentConfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebdeploymentsdeployments": {
    "operationId": "getwebdeploymentsdeployments",
    "functionName": "GetWebdeploymentsDeployments",
    "signature": "GetWebdeploymentsDeployments(expand)",
    "parameters": [
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ExpandableWebDeploymentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebdeploymentsDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var expand = new List<string>(); // List<string> | The specified entity attributes will be filled. Comma separated values expected. Valid values: (optional) \n\n            try\n            { \n                // Get deployments\n                ExpandableWebDeploymentEntityListing result = apiInstance.GetWebdeploymentsDeployments(expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.GetWebdeploymentsDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebdeploymentsconfigurationversionsdraftpublish": {
    "operationId": "postwebdeploymentsconfigurationversionsdraftpublish",
    "functionName": "PostWebdeploymentsConfigurationVersionsDraftPublish",
    "signature": "PostWebdeploymentsConfigurationVersionsDraftPublish(configurationId)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebdeploymentsConfigurationVersionsDraftPublishExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n\n            try\n            { \n                // Publish the configuration draft and create a new version\n                WebDeploymentConfigurationVersion result = apiInstance.PostWebdeploymentsConfigurationVersionsDraftPublish(configurationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.PostWebdeploymentsConfigurationVersionsDraftPublish: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebdeploymentsconfigurations": {
    "operationId": "postwebdeploymentsconfigurations",
    "functionName": "PostWebdeploymentsConfigurations",
    "signature": "PostWebdeploymentsConfigurations(configurationVersion)",
    "parameters": [
      {
        "name": "configurationVersion",
        "type": "WebDeploymentConfigurationVersion",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebdeploymentsConfigurationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationVersion = new WebDeploymentConfigurationVersion(); // WebDeploymentConfigurationVersion | \n\n            try\n            { \n                // Create a configuration draft\n                WebDeploymentConfigurationVersion result = apiInstance.PostWebdeploymentsConfigurations(configurationVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.PostWebdeploymentsConfigurations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwebdeploymentsdeployments": {
    "operationId": "postwebdeploymentsdeployments",
    "functionName": "PostWebdeploymentsDeployments",
    "signature": "PostWebdeploymentsDeployments(deployment)",
    "parameters": [
      {
        "name": "deployment",
        "type": "WebDeployment",
        "required": "true"
      }
    ],
    "return": "WebDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWebdeploymentsDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var deployment = new WebDeployment(); // WebDeployment | \n\n            try\n            { \n                // Create a deployment\n                WebDeployment result = apiInstance.PostWebdeploymentsDeployments(deployment);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.PostWebdeploymentsDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putwebdeploymentsconfigurationversionsdraft": {
    "operationId": "putwebdeploymentsconfigurationversionsdraft",
    "functionName": "PutWebdeploymentsConfigurationVersionsDraft",
    "signature": "PutWebdeploymentsConfigurationVersionsDraft(configurationId, configurationVersion)",
    "parameters": [
      {
        "name": "configurationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "configurationVersion",
        "type": "WebDeploymentConfigurationVersion",
        "required": "true"
      }
    ],
    "return": "WebDeploymentConfigurationVersion",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWebdeploymentsConfigurationVersionsDraftExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var configurationId = \"configurationId_example\";  // string | The configuration version ID\n            var configurationVersion = new WebDeploymentConfigurationVersion(); // WebDeploymentConfigurationVersion | \n\n            try\n            { \n                // Update the configuration draft\n                WebDeploymentConfigurationVersion result = apiInstance.PutWebdeploymentsConfigurationVersionsDraft(configurationId, configurationVersion);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.PutWebdeploymentsConfigurationVersionsDraft: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putwebdeploymentsdeployment": {
    "operationId": "putwebdeploymentsdeployment",
    "functionName": "PutWebdeploymentsDeployment",
    "signature": "PutWebdeploymentsDeployment(deploymentId, deployment)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "deployment",
        "type": "WebDeployment",
        "required": "true"
      }
    ],
    "return": "WebDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWebdeploymentsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WebDeploymentsApi();\n            var deploymentId = \"deploymentId_example\";  // string | The deployment ID\n            var deployment = new WebDeployment(); // WebDeployment | \n\n            try\n            { \n                // Update a deployment\n                WebDeployment result = apiInstance.PutWebdeploymentsDeployment(deploymentId, deployment);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebDeployments.PutWebdeploymentsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwebmessagingmessages": {
    "operationId": "getwebmessagingmessages",
    "functionName": "GetWebmessagingMessages",
    "signature": "GetWebmessagingMessages(pageSize, pageNumber)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      }
    ],
    "return": "WebMessagingMessageEntityList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWebmessagingMessagesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new WebMessagingApi();\n            var pageSize = 56;  // int? | Page size (optional)  (default to 25)\n            var pageNumber = 56;  // int? | Page number (optional)  (default to 1)\n\n            try\n            { \n                // Get the messages for a web messaging session.\n                WebMessagingMessageEntityList result = apiInstance.GetWebmessagingMessages(pageSize, pageNumber);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WebMessaging.GetWebmessagingMessages: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deletewidgetsdeployment": {
    "operationId": "deletewidgetsdeployment",
    "functionName": "DeleteWidgetsDeployment",
    "signature": "DeleteWidgetsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWidgetsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WidgetsApi();\n            var deploymentId = \"deploymentId_example\";  // string | Widget Config Id\n\n            try\n            { \n                // Delete a Widget deployment\n                apiInstance.DeleteWidgetsDeployment(deploymentId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Widgets.DeleteWidgetsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwidgetsdeployment": {
    "operationId": "getwidgetsdeployment",
    "functionName": "GetWidgetsDeployment",
    "signature": "GetWidgetsDeployment(deploymentId)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWidgetsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WidgetsApi();\n            var deploymentId = \"deploymentId_example\";  // string | Widget Config Id\n\n            try\n            { \n                // Get a Widget deployment\n                WidgetDeployment result = apiInstance.GetWidgetsDeployment(deploymentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Widgets.GetWidgetsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getwidgetsdeployments": {
    "operationId": "getwidgetsdeployments",
    "functionName": "GetWidgetsDeployments",
    "signature": "GetWidgetsDeployments()",
    "return": "WidgetDeploymentEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWidgetsDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WidgetsApi();\n\n            try\n            { \n                // List Widget deployments\n                WidgetDeploymentEntityListing result = apiInstance.GetWidgetsDeployments();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Widgets.GetWidgetsDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postwidgetsdeployments": {
    "operationId": "postwidgetsdeployments",
    "functionName": "PostWidgetsDeployments",
    "signature": "PostWidgetsDeployments(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WidgetDeployment",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWidgetsDeploymentsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WidgetsApi();\n            var body = new WidgetDeployment(); // WidgetDeployment | Deployment\n\n            try\n            { \n                // Create Widget deployment\n                WidgetDeployment result = apiInstance.PostWidgetsDeployments(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Widgets.PostWidgetsDeployments: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putwidgetsdeployment": {
    "operationId": "putwidgetsdeployment",
    "functionName": "PutWidgetsDeployment",
    "signature": "PutWidgetsDeployment(deploymentId, body)",
    "parameters": [
      {
        "name": "deploymentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WidgetDeployment",
        "required": "true"
      }
    ],
    "return": "WidgetDeployment",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWidgetsDeploymentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WidgetsApi();\n            var deploymentId = \"deploymentId_example\";  // string | Widget Config Id\n            var body = new WidgetDeployment(); // WidgetDeployment | Deployment\n\n            try\n            { \n                // Update a Widget deployment\n                WidgetDeployment result = apiInstance.PutWidgetsDeployment(deploymentId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling Widgets.PutWidgetsDeployment: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunit": {
    "operationId": "deleteworkforcemanagementbusinessunit",
    "functionName": "DeleteWorkforcemanagementBusinessunit",
    "signature": "DeleteWorkforcemanagementBusinessunit(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n\n            try\n            { \n                // Delete business unit\n                apiInstance.DeleteWorkforcemanagementBusinessunit(businessUnitId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitactivitycode": {
    "operationId": "deleteworkforcemanagementbusinessunitactivitycode",
    "functionName": "DeleteWorkforcemanagementBusinessunitActivitycode",
    "signature": "DeleteWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitActivitycodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var activityCodeId = \"activityCodeId_example\";  // string | The ID of the activity code to delete\n\n            try\n            { \n                // Deletes an activity code\n                apiInstance.DeleteWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitActivitycode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "deleteworkforcemanagementbusinessunitplanninggroup",
    "functionName": "DeleteWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "DeleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitPlanninggroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var planningGroupId = \"planningGroupId_example\";  // string | The ID of a planning group to delete\n\n            try\n            { \n                // Deletes the planning group\n                apiInstance.DeleteWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitPlanninggroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "deleteworkforcemanagementbusinessunitschedulingrun",
    "functionName": "DeleteWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "DeleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitSchedulingRunExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var runId = \"runId_example\";  // string | The ID of the schedule run\n\n            try\n            { \n                // Cancel a scheduling run\n                apiInstance.DeleteWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitSchedulingRun: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "deleteworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "DeleteWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "DeleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitServicegoaltemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var serviceGoalTemplateId = \"serviceGoalTemplateId_example\";  // string | The ID of the service goal template to delete\n\n            try\n            { \n                // Delete a service goal template\n                apiInstance.DeleteWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitServicegoaltemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitweekschedule": {
    "operationId": "deleteworkforcemanagementbusinessunitweekschedule",
    "functionName": "DeleteWorkforcemanagementBusinessunitWeekSchedule",
    "signature": "DeleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitWeekScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n\n            try\n            { \n                // Delete a schedule\n                BuAsyncScheduleResponse result = apiInstance.DeleteWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitWeekSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementbusinessunitweekshorttermforecast": {
    "operationId": "deleteworkforcemanagementbusinessunitweekshorttermforecast",
    "functionName": "DeleteWorkforcemanagementBusinessunitWeekShorttermforecast",
    "signature": "DeleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementBusinessunitWeekShorttermforecastExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n\n            try\n            { \n                // Delete a short term forecast\n                apiInstance.DeleteWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementBusinessunitWeekShorttermforecast: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementcalendarurlics": {
    "operationId": "deleteworkforcemanagementcalendarurlics",
    "functionName": "DeleteWorkforcemanagementCalendarUrlIcs",
    "signature": "DeleteWorkforcemanagementCalendarUrlIcs()",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementCalendarUrlIcsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Disable generated calendar link for the current user\n                apiInstance.DeleteWorkforcemanagementCalendarUrlIcs();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementCalendarUrlIcs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementmanagementunit": {
    "operationId": "deleteworkforcemanagementmanagementunit",
    "functionName": "DeleteWorkforcemanagementManagementunit",
    "signature": "DeleteWorkforcemanagementManagementunit(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementManagementunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\n            try\n            { \n                // Delete management unit\n                apiInstance.DeleteWorkforcemanagementManagementunit(managementUnitId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementManagementunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "deleteworkforcemanagementmanagementunittimeofflimit",
    "functionName": "DeleteWorkforcemanagementManagementunitTimeofflimit",
    "signature": "DeleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementManagementunitTimeofflimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var timeOffLimitId = \"timeOffLimitId_example\";  // string | The ID of the time off limit object to delete\n\n            try\n            { \n                // Deletes a time off limit object\n                apiInstance.DeleteWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementManagementunitTimeofflimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "deleteworkforcemanagementmanagementunittimeoffplan",
    "functionName": "DeleteWorkforcemanagementManagementunitTimeoffplan",
    "signature": "DeleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementManagementunitTimeoffplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var timeOffPlanId = \"timeOffPlanId_example\";  // string | The ID of the time off plan to delete\n\n            try\n            { \n                // Deletes a time off plan\n                apiInstance.DeleteWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementManagementunitTimeoffplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementmanagementunitworkplan": {
    "operationId": "deleteworkforcemanagementmanagementunitworkplan",
    "functionName": "DeleteWorkforcemanagementManagementunitWorkplan",
    "signature": "DeleteWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementManagementunitWorkplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanId = \"workPlanId_example\";  // string | The ID of the work plan to delete\n\n            try\n            { \n                // Delete a work plan\n                apiInstance.DeleteWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementManagementunitWorkplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "deleteworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "deleteworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "DeleteWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "DeleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class DeleteWorkforcemanagementManagementunitWorkplanrotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanRotationId = \"workPlanRotationId_example\";  // string | The ID of the work plan rotation to be deleted\n\n            try\n            { \n                // Delete a work plan rotation\n                apiInstance.DeleteWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.DeleteWorkforcemanagementManagementunitWorkplanrotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementadherence": {
    "operationId": "getworkforcemanagementadherence",
    "functionName": "GetWorkforcemanagementAdherence",
    "signature": "GetWorkforcemanagementAdherence(userId)",
    "parameters": [
      {
        "name": "userId",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "List<UserScheduleAdherence>",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementAdherenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var userId = new List<string>(); // List<string> | User Id(s) for which to fetch current schedule adherence information.  Min 1, Max of 100 userIds per request\n\n            try\n            { \n                // Get a list of UserScheduleAdherence records for the requested users\n                List<UserScheduleAdherence> result = apiInstance.GetWorkforcemanagementAdherence(userId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementAdherence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementadherencehistoricaljob": {
    "operationId": "getworkforcemanagementadherencehistoricaljob",
    "functionName": "GetWorkforcemanagementAdherenceHistoricalJob",
    "signature": "GetWorkforcemanagementAdherenceHistoricalJob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementAdherenceHistoricalJobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var jobId = \"jobId_example\";  // string | jobId\n\n            try\n            { \n                // Query the status of a historical adherence request operation. Only the user who started the operation can query the status\n                WfmHistoricalAdherenceResponse result = apiInstance.GetWorkforcemanagementAdherenceHistoricalJob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementAdherenceHistoricalJob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementadhocmodelingjob": {
    "operationId": "getworkforcemanagementadhocmodelingjob",
    "functionName": "GetWorkforcemanagementAdhocmodelingjob",
    "signature": "GetWorkforcemanagementAdhocmodelingjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ModelingStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementAdhocmodelingjobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var jobId = \"jobId_example\";  // string | The id of the modeling job\n\n            try\n            { \n                // Get status of the modeling job\n                ModelingStatusResponse result = apiInstance.GetWorkforcemanagementAdhocmodelingjob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementAdhocmodelingjob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementagentmanagementunit": {
    "operationId": "getworkforcemanagementagentmanagementunit",
    "functionName": "GetWorkforcemanagementAgentManagementunit",
    "signature": "GetWorkforcemanagementAgentManagementunit(agentId)",
    "parameters": [
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "AgentManagementUnitReference",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementAgentManagementunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var agentId = \"agentId_example\";  // string | The ID of the agent to look up\n\n            try\n            { \n                // Get the management unit to which the agent belongs\n                AgentManagementUnitReference result = apiInstance.GetWorkforcemanagementAgentManagementunit(agentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementAgentManagementunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementagentsmemanagementunit": {
    "operationId": "getworkforcemanagementagentsmemanagementunit",
    "functionName": "GetWorkforcemanagementAgentsMeManagementunit",
    "signature": "GetWorkforcemanagementAgentsMeManagementunit()",
    "return": "AgentManagementUnitReference",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementAgentsMeManagementunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Get the management unit to which the currently logged in agent belongs\n                AgentManagementUnitReference result = apiInstance.GetWorkforcemanagementAgentsMeManagementunit();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementAgentsMeManagementunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunit": {
    "operationId": "getworkforcemanagementbusinessunit",
    "functionName": "GetWorkforcemanagementBusinessunit",
    "signature": "GetWorkforcemanagementBusinessunit(businessUnitId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var expand = new List<string>(); // List<string> |  (optional) \n\n            try\n            { \n                // Get business unit\n                BusinessUnitResponse result = apiInstance.GetWorkforcemanagementBusinessunit(businessUnitId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitactivitycode": {
    "operationId": "getworkforcemanagementbusinessunitactivitycode",
    "functionName": "GetWorkforcemanagementBusinessunitActivitycode",
    "signature": "GetWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitActivitycodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var activityCodeId = \"activityCodeId_example\";  // string | The ID of the activity code to fetch\n\n            try\n            { \n                // Get an activity code\n                BusinessUnitActivityCode result = apiInstance.GetWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitActivitycode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitactivitycodes": {
    "operationId": "getworkforcemanagementbusinessunitactivitycodes",
    "functionName": "GetWorkforcemanagementBusinessunitActivitycodes",
    "signature": "GetWorkforcemanagementBusinessunitActivitycodes(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BusinessUnitActivityCodeListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitActivitycodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n\n            try\n            { \n                // Get activity codes\n                BusinessUnitActivityCodeListing result = apiInstance.GetWorkforcemanagementBusinessunitActivitycodes(businessUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitActivitycodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitintradayplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitintradayplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitIntradayPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId, date)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "date",
        "type": "String",
        "required": "true"
      }
    ],
    "return": "WfmIntradayPlanningGroupListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitIntradayPlanninggroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var date = new Date();  // String | yyyy-MM-dd date string interpreted in the configured business unit time zone. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n\n            try\n            { \n                // Get intraday planning groups for the given date\n                WfmIntradayPlanningGroupListing result = apiInstance.GetWorkforcemanagementBusinessunitIntradayPlanninggroups(businessUnitId, date);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitIntradayPlanninggroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitmanagementunits": {
    "operationId": "getworkforcemanagementbusinessunitmanagementunits",
    "functionName": "GetWorkforcemanagementBusinessunitManagementunits",
    "signature": "GetWorkforcemanagementBusinessunitManagementunits(businessUnitId, feature, divisionId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitManagementunitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var feature = \"feature_example\";  // string |  (optional) \n            var divisionId = \"divisionId_example\";  // string |  (optional) \n\n            try\n            { \n                // Get all authorized management units in the business unit\n                ManagementUnitListing result = apiInstance.GetWorkforcemanagementBusinessunitManagementunits(businessUnitId, feature, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitManagementunits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "getworkforcemanagementbusinessunitplanninggroup",
    "functionName": "GetWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "GetWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PlanningGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitPlanninggroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var planningGroupId = \"planningGroupId_example\";  // string | The ID of a planning group to fetch\n\n            try\n            { \n                // Get a planning group\n                PlanningGroup result = apiInstance.GetWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitPlanninggroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitPlanninggroups(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "PlanningGroupList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitPlanninggroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n\n            try\n            { \n                // Gets list of planning groups\n                PlanningGroupList result = apiInstance.GetWorkforcemanagementBusinessunitPlanninggroups(businessUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitPlanninggroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "getworkforcemanagementbusinessunitschedulingrun",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuScheduleRun",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitSchedulingRunExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var runId = \"runId_example\";  // string | The ID of the schedule run\n\n            try\n            { \n                // Get a scheduling run\n                BuScheduleRun result = apiInstance.GetWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitSchedulingRun: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitschedulingrunresult": {
    "operationId": "getworkforcemanagementbusinessunitschedulingrunresult",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRunResult",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId, runId, managementUnitIds, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "managementUnitIds",
        "type": "List<string>",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "true"
      }
    ],
    "return": "BuRescheduleResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitSchedulingRunResultExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var runId = \"runId_example\";  // string | The ID of the schedule run\n            var managementUnitIds = new List<string>(); // List<string> | The IDs of the management units for which to fetch the reschedule results\n            var expand = new List<string>(); // List<string> | The fields to expand. Omitting will return an empty response\n\n            try\n            { \n                // Get the result of a rescheduling operation\n                BuRescheduleResult result = apiInstance.GetWorkforcemanagementBusinessunitSchedulingRunResult(businessUnitId, runId, managementUnitIds, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitSchedulingRunResult: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitschedulingruns": {
    "operationId": "getworkforcemanagementbusinessunitschedulingruns",
    "functionName": "GetWorkforcemanagementBusinessunitSchedulingRuns",
    "signature": "GetWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuScheduleRunListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitSchedulingRunsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n\n            try\n            { \n                // Get the list of scheduling runs\n                BuScheduleRunListing result = apiInstance.GetWorkforcemanagementBusinessunitSchedulingRuns(businessUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitSchedulingRuns: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "getworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "GetWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "GetWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitServicegoaltemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var serviceGoalTemplateId = \"serviceGoalTemplateId_example\";  // string | The ID of a service goal template to fetch\n\n            try\n            { \n                // Get a service goal template\n                ServiceGoalTemplate result = apiInstance.GetWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitServicegoaltemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitservicegoaltemplates": {
    "operationId": "getworkforcemanagementbusinessunitservicegoaltemplates",
    "functionName": "GetWorkforcemanagementBusinessunitServicegoaltemplates",
    "signature": "GetWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ServiceGoalTemplateList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitServicegoaltemplatesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n\n            try\n            { \n                // Gets list of service goal templates\n                ServiceGoalTemplateList result = apiInstance.GetWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitServicegoaltemplates: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekschedule": {
    "operationId": "getworkforcemanagementbusinessunitweekschedule",
    "functionName": "GetWorkforcemanagementBusinessunitWeekSchedule",
    "signature": "GetWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "BuScheduleMetadata",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var expand = \"expand_example\";  // string | expand (optional) \n\n            try\n            { \n                // Get the metadata for the schedule, describing which management units and agents are in the scheduleSchedule data can then be loaded with the query route\n                BuScheduleMetadata result = apiInstance.GetWorkforcemanagementBusinessunitWeekSchedule(businessUnitId, weekId, scheduleId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekschedulegenerationresults": {
    "operationId": "getworkforcemanagementbusinessunitweekschedulegenerationresults",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId, weekId, scheduleId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ScheduleGenerationResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekScheduleGenerationresultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n\n            try\n            { \n                // Get the generation results for a generated schedule\n                ScheduleGenerationResult result = apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults(businessUnitId, weekId, scheduleId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekScheduleGenerationresults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekscheduleheadcountforecast": {
    "operationId": "getworkforcemanagementbusinessunitweekscheduleheadcountforecast",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId, weekId, scheduleId, forceDownload)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownload",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "BuHeadcountForecastResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecastExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var forceDownload = true;  // bool? | Whether to force the result to come via download url.  For testing purposes only (optional) \n\n            try\n            { \n                // Get the headcount forecast by planning group for the schedule\n                BuHeadcountForecastResponse result = apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast(businessUnitId, weekId, scheduleId, forceDownload);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekScheduleHeadcountforecast: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekschedulehistoryagent": {
    "operationId": "getworkforcemanagementbusinessunitweekschedulehistoryagent",
    "functionName": "GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent",
    "signature": "GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId, weekId, scheduleId, agentId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuAgentScheduleHistoryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var agentId = \"agentId_example\";  // string | THe ID of the agent\n\n            try\n            { \n                // Loads agent's schedule history.\n                BuAgentScheduleHistoryResponse result = apiInstance.GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent(businessUnitId, weekId, scheduleId, agentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekScheduleHistoryAgent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekschedules": {
    "operationId": "getworkforcemanagementbusinessunitweekschedules",
    "functionName": "GetWorkforcemanagementBusinessunitWeekSchedules",
    "signature": "GetWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, includeOnlyPublished, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnlyPublished",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "BuScheduleListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = \"weekId_example\";  // string | First day of schedule week in yyyy-MM-dd format, or 'recent' (without quotes) to get recent schedules\n            var includeOnlyPublished = true;  // bool? | includeOnlyPublished (optional) \n            var expand = \"expand_example\";  // string | expand (optional) \n\n            try\n            { \n                // Get the list of week schedules for the specified week\n                BuScheduleListing result = apiInstance.GetWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, includeOnlyPublished, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecast": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecast",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecast",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId, expand)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "BuShortTermForecast",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n            var expand = new List<string>(); // List<string> |  (optional) \n\n            try\n            { \n                // Get a short term forecast\n                BuShortTermForecast result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecast(businessUnitId, weekDateId, forecastId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecast: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastdata": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastdata",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastData",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId, weekDateId, forecastId, weekNumber, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "BuForecastResultResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastDataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n            var weekNumber = 56;  // int? | The week number to fetch (for multi-week forecasts) (optional) \n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Get the result of a short term forecast calculation\n                BuForecastResultResponse result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastData(businessUnitId, weekDateId, forecastId, weekNumber, forceDownloadService);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecastData: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastgenerationresults": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastgenerationresults",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuForecastGenerationResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresultsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n\n            try\n            { \n                // Gets the forecast generation results\n                BuForecastGenerationResult result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults(businessUnitId, weekDateId, forecastId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecastGenerationresults: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastlongtermforecastdata": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastlongtermforecastdata",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId, weekDateId, forecastId, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "LongTermForecastResultResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdataExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Get the result of a long term forecast calculation\n                LongTermForecastResultResponse result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata(businessUnitId, weekDateId, forecastId, forceDownloadService);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecastLongtermforecastdata: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecastplanninggroups": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecastplanninggroups",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId, weekDateId, forecastId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ForecastPlanningGroupsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast\n\n            try\n            { \n                // Gets the forecast planning group snapshot\n                ForecastPlanningGroupsResponse result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups(businessUnitId, weekDateId, forecastId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecastPlanninggroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitweekshorttermforecasts": {
    "operationId": "getworkforcemanagementbusinessunitweekshorttermforecasts",
    "functionName": "GetWorkforcemanagementBusinessunitWeekShorttermforecasts",
    "signature": "GetWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId, weekDateId)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "BuShortTermForecastListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitWeekShorttermforecastsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = \"weekDateId_example\";  // string | The week start date of the forecast in yyyy-MM-dd format or 'recent' (without quotes) to fetch recent forecasts\n\n            try\n            { \n                // Get short term forecasts\n                BuShortTermForecastListing result = apiInstance.GetWorkforcemanagementBusinessunitWeekShorttermforecasts(businessUnitId, weekDateId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitWeekShorttermforecasts: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunits": {
    "operationId": "getworkforcemanagementbusinessunits",
    "functionName": "GetWorkforcemanagementBusinessunits",
    "signature": "GetWorkforcemanagementBusinessunits(feature, divisionId)",
    "parameters": [
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "BusinessUnitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var feature = \"feature_example\";  // string |  (optional) \n            var divisionId = \"divisionId_example\";  // string |  (optional) \n\n            try\n            { \n                // Get business units\n                BusinessUnitListing result = apiInstance.GetWorkforcemanagementBusinessunits(feature, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementbusinessunitsdivisionviews": {
    "operationId": "getworkforcemanagementbusinessunitsdivisionviews",
    "functionName": "GetWorkforcemanagementBusinessunitsDivisionviews",
    "signature": "GetWorkforcemanagementBusinessunitsDivisionviews(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "BusinessUnitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementBusinessunitsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var divisionId = new List<string>(); // List<string> | The divisionIds to filter by. If omitted, will return business units in all divisions (optional) \n\n            try\n            { \n                // Get business units across divisions\n                BusinessUnitListing result = apiInstance.GetWorkforcemanagementBusinessunitsDivisionviews(divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementBusinessunitsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementcalendardataics": {
    "operationId": "getworkforcemanagementcalendardataics",
    "functionName": "GetWorkforcemanagementCalendarDataIcs",
    "signature": "GetWorkforcemanagementCalendarDataIcs(calendarId)",
    "parameters": [
      {
        "name": "calendarId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "string",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementCalendarDataIcsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n\n            var apiInstance = new WorkforceManagementApi();\n            var calendarId = \"calendarId_example\";  // string | The id of the ics-formatted calendar\n\n            try\n            { \n                // Get ics formatted calendar based on shareable link\n                string result = apiInstance.GetWorkforcemanagementCalendarDataIcs(calendarId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementCalendarDataIcs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementcalendarurlics": {
    "operationId": "getworkforcemanagementcalendarurlics",
    "functionName": "GetWorkforcemanagementCalendarUrlIcs",
    "signature": "GetWorkforcemanagementCalendarUrlIcs()",
    "return": "CalendarUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementCalendarUrlIcsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Get existing calendar link for the current user\n                CalendarUrlResponse result = apiInstance.GetWorkforcemanagementCalendarUrlIcs();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementCalendarUrlIcs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementhistoricaldatadeletejob": {
    "operationId": "getworkforcemanagementhistoricaldatadeletejob",
    "functionName": "GetWorkforcemanagementHistoricaldataDeletejob",
    "signature": "GetWorkforcemanagementHistoricaldataDeletejob()",
    "return": "HistoricalImportDeleteJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementHistoricaldataDeletejobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Retrieves delete job status for historical data imports of the organization\n                HistoricalImportDeleteJobResponse result = apiInstance.GetWorkforcemanagementHistoricaldataDeletejob();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementHistoricaldataDeletejob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementhistoricaldataimportstatus": {
    "operationId": "getworkforcemanagementhistoricaldataimportstatus",
    "functionName": "GetWorkforcemanagementHistoricaldataImportstatus",
    "signature": "GetWorkforcemanagementHistoricaldataImportstatus()",
    "return": "HistoricalImportStatusListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementHistoricaldataImportstatusExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Retrieves status of the historical data imports of the organization\n                HistoricalImportStatusListing result = apiInstance.GetWorkforcemanagementHistoricaldataImportstatus();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementHistoricaldataImportstatus: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunit": {
    "operationId": "getworkforcemanagementmanagementunit",
    "functionName": "GetWorkforcemanagementManagementunit",
    "signature": "GetWorkforcemanagementManagementunit(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var expand = new List<string>(); // List<string> |  (optional) \n\n            try\n            { \n                // Get management unit\n                ManagementUnit result = apiInstance.GetWorkforcemanagementManagementunit(managementUnitId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitactivitycodes": {
    "operationId": "getworkforcemanagementmanagementunitactivitycodes",
    "functionName": "GetWorkforcemanagementManagementunitActivitycodes",
    "signature": "GetWorkforcemanagementManagementunitActivitycodes(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ActivityCodeContainer",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitActivitycodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\n            try\n            { \n                // Get activity codes\n                ActivityCodeContainer result = apiInstance.GetWorkforcemanagementManagementunitActivitycodes(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitActivitycodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitadherence": {
    "operationId": "getworkforcemanagementmanagementunitadherence",
    "functionName": "GetWorkforcemanagementManagementunitAdherence",
    "signature": "GetWorkforcemanagementManagementunitAdherence(managementUnitId, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "UserScheduleAdherenceListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitAdherenceExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Get a list of user schedule adherence records for the requested management unit\n                UserScheduleAdherenceListing result = apiInstance.GetWorkforcemanagementManagementunitAdherence(managementUnitId, forceDownloadService);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitAdherence: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitagent": {
    "operationId": "getworkforcemanagementmanagementunitagent",
    "functionName": "GetWorkforcemanagementManagementunitAgent",
    "signature": "GetWorkforcemanagementManagementunitAgent(managementUnitId, agentId, excludeCapabilities)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "excludeCapabilities",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "WfmAgent",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitAgentExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var agentId = \"agentId_example\";  // string | The agent id\n            var excludeCapabilities = true;  // bool? | Excludes all capabilities of the agent such as queues, languages, and skills (optional) \n\n            try\n            { \n                // Get data for agent in the management unit\n                WfmAgent result = apiInstance.GetWorkforcemanagementManagementunitAgent(managementUnitId, agentId, excludeCapabilities);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitAgent: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitagentshifttrades": {
    "operationId": "getworkforcemanagementmanagementunitagentshifttrades",
    "functionName": "GetWorkforcemanagementManagementunitAgentShifttrades",
    "signature": "GetWorkforcemanagementManagementunitAgentShifttrades(managementUnitId, agentId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "agentId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ShiftTradeListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitAgentShifttradesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var agentId = \"agentId_example\";  // string | The agent id\n\n            try\n            { \n                // Gets all the shift trades for a given agent\n                ShiftTradeListResponse result = apiInstance.GetWorkforcemanagementManagementunitAgentShifttrades(managementUnitId, agentId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitAgentShifttrades: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitshifttradesmatched": {
    "operationId": "getworkforcemanagementmanagementunitshifttradesmatched",
    "functionName": "GetWorkforcemanagementManagementunitShifttradesMatched",
    "signature": "GetWorkforcemanagementManagementunitShifttradesMatched(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "ShiftTradeMatchesSummaryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitShifttradesMatchedExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\n            try\n            { \n                // Gets a summary of all shift trades in the matched state\n                ShiftTradeMatchesSummaryResponse result = apiInstance.GetWorkforcemanagementManagementunitShifttradesMatched(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitShifttradesMatched: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitshifttradesusers": {
    "operationId": "getworkforcemanagementmanagementunitshifttradesusers",
    "functionName": "GetWorkforcemanagementManagementunitShifttradesUsers",
    "signature": "GetWorkforcemanagementManagementunitShifttradesUsers(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WfmUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitShifttradesUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\n            try\n            { \n                // Gets list of users available for whom you can send direct shift trade requests\n                WfmUserEntityListing result = apiInstance.GetWorkforcemanagementManagementunitShifttradesUsers(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitShifttradesUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "getworkforcemanagementmanagementunittimeofflimit",
    "functionName": "GetWorkforcemanagementManagementunitTimeofflimit",
    "signature": "GetWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffLimit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitTimeofflimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var timeOffLimitId = \"timeOffLimitId_example\";  // string | The ID of the time off limit to fetch\n\n            try\n            { \n                // Gets a time off limit object\n                TimeOffLimit result = apiInstance.GetWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitTimeofflimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunittimeofflimits": {
    "operationId": "getworkforcemanagementmanagementunittimeofflimits",
    "functionName": "GetWorkforcemanagementManagementunitTimeofflimits",
    "signature": "GetWorkforcemanagementManagementunitTimeofflimits(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffLimitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitTimeofflimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n\n            try\n            { \n                // Gets a list of time off limit objects under management unit.\n                TimeOffLimitListing result = apiInstance.GetWorkforcemanagementManagementunitTimeofflimits(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitTimeofflimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "getworkforcemanagementmanagementunittimeoffplan",
    "functionName": "GetWorkforcemanagementManagementunitTimeoffplan",
    "signature": "GetWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitTimeoffplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var timeOffPlanId = \"timeOffPlanId_example\";  // string | The ID of the time off plan to fetch\n\n            try\n            { \n                // Gets a time off plan\n                TimeOffPlan result = apiInstance.GetWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitTimeoffplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunittimeoffplans": {
    "operationId": "getworkforcemanagementmanagementunittimeoffplans",
    "functionName": "GetWorkforcemanagementManagementunitTimeoffplans",
    "signature": "GetWorkforcemanagementManagementunitTimeoffplans(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffPlanListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitTimeoffplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n\n            try\n            { \n                // Gets a list of time off plans\n                TimeOffPlanListing result = apiInstance.GetWorkforcemanagementManagementunitTimeoffplans(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitTimeoffplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequest": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequest",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequest",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitUserTimeoffrequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var userId = \"userId_example\";  // string | The userId to whom the Time Off Request applies.\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | Time Off Request Id\n\n            try\n            { \n                // Get a time off request\n                TimeOffRequestResponse result = apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitUserTimeoffrequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequesttimeofflimits": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequesttimeofflimits",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "QueryTimeOffLimitValuesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var userId = \"userId_example\";  // string | The userId to whom the time off request applies.\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The ID of the time off request, which dates and activityCodeId determine limit values to retrieve\n\n            try\n            { \n                // Retrieves time off limit, allocated and waitlisted values according to specific time off request\n                QueryTimeOffLimitValuesResponse result = apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits(managementUnitId, userId, timeOffRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitUserTimeoffrequestTimeofflimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitusertimeoffrequests": {
    "operationId": "getworkforcemanagementmanagementunitusertimeoffrequests",
    "functionName": "GetWorkforcemanagementManagementunitUserTimeoffrequests",
    "signature": "GetWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId, userId, recentlyReviewed)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "recentlyReviewed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitUserTimeoffrequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var userId = \"userId_example\";  // string | The userId to whom the Time Off Request applies.\n            var recentlyReviewed = true;  // bool? | Limit results to requests that have been reviewed within the preceding 30 days (optional)  (default to false)\n\n            try\n            { \n                // Get a list of time off requests for a given user\n                TimeOffRequestList result = apiInstance.GetWorkforcemanagementManagementunitUserTimeoffrequests(managementUnitId, userId, recentlyReviewed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitUserTimeoffrequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitusers": {
    "operationId": "getworkforcemanagementmanagementunitusers",
    "functionName": "GetWorkforcemanagementManagementunitUsers",
    "signature": "GetWorkforcemanagementManagementunitUsers(managementUnitId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WfmUserEntityListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitUsersExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n\n            try\n            { \n                // Get users in the management unit\n                WfmUserEntityListing result = apiInstance.GetWorkforcemanagementManagementunitUsers(managementUnitId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitUsers: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitweekschedule": {
    "operationId": "getworkforcemanagementmanagementunitweekschedule",
    "functionName": "GetWorkforcemanagementManagementunitWeekSchedule",
    "signature": "GetWorkforcemanagementManagementunitWeekSchedule(managementUnitId, weekId, scheduleId, expand, forceDownloadService)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "WeekScheduleResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWeekScheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekId = \"weekId_example\";  // string | First day of schedule week in yyyy-MM-dd format.\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule to fetch\n            var expand = \"expand_example\";  // string | Which fields, if any, to expand (optional) \n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Deprecated.  Use the equivalent business unit resource instead. Get a week schedule\n                WeekScheduleResponse result = apiInstance.GetWorkforcemanagementManagementunitWeekSchedule(managementUnitId, weekId, scheduleId, expand, forceDownloadService);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWeekSchedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitweekschedules": {
    "operationId": "getworkforcemanagementmanagementunitweekschedules",
    "functionName": "GetWorkforcemanagementManagementunitWeekSchedules",
    "signature": "GetWorkforcemanagementManagementunitWeekSchedules(managementUnitId, weekId, includeOnlyPublished, earliestWeekDate, latestWeekDate)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnlyPublished",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "earliestWeekDate",
        "type": "string",
        "required": "false"
      },
      {
        "name": "latestWeekDate",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "WeekScheduleListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWeekSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekId = \"weekId_example\";  // string | First day of schedule week in yyyy-MM-dd format.\n            var includeOnlyPublished = true;  // bool? | Return only published schedules (optional) \n            var earliestWeekDate = \"earliestWeekDate_example\";  // string | The start date of the earliest week to query in yyyy-MM-dd format (optional) \n            var latestWeekDate = \"latestWeekDate_example\";  // string | The start date of the latest week to query in yyyy-MM-dd format (optional) \n\n            try\n            { \n                // Deprecated.  Use the equivalent business unit resource instead. Get the list of schedules in a week in management unit\n                WeekScheduleListResponse result = apiInstance.GetWorkforcemanagementManagementunitWeekSchedules(managementUnitId, weekId, includeOnlyPublished, earliestWeekDate, latestWeekDate);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWeekSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitweekshifttrades": {
    "operationId": "getworkforcemanagementmanagementunitweekshifttrades",
    "functionName": "GetWorkforcemanagementManagementunitWeekShifttrades",
    "signature": "GetWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, evaluateMatches)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "evaluateMatches",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "WeekShiftTradeListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWeekShifttradesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var evaluateMatches = true;  // bool? | Whether to evaluate the matches for violations (optional)  (default to true)\n\n            try\n            { \n                // Gets all the shift trades for a given week\n                WeekShiftTradeListResponse result = apiInstance.GetWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, evaluateMatches);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWeekShifttrades: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitworkplan": {
    "operationId": "getworkforcemanagementmanagementunitworkplan",
    "functionName": "GetWorkforcemanagementManagementunitWorkplan",
    "signature": "GetWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, includeOnly)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "includeOnly",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWorkplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanId = \"workPlanId_example\";  // string | The ID of the work plan to fetch\n            var includeOnly = new List<string>(); // List<string> | limit response to the specified fields (optional) \n\n            try\n            { \n                // Get a work plan\n                WorkPlan result = apiInstance.GetWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, includeOnly);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWorkplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "getworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "GetWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "GetWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWorkplanrotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanRotationId = \"workPlanRotationId_example\";  // string | The ID of the work plan rotation to fetch\n\n            try\n            { \n                // Get a work plan rotation\n                WorkPlanRotationResponse result = apiInstance.GetWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWorkplanrotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitworkplanrotations": {
    "operationId": "getworkforcemanagementmanagementunitworkplanrotations",
    "functionName": "GetWorkforcemanagementManagementunitWorkplanrotations",
    "signature": "GetWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWorkplanrotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var expand = new List<string>(); // List<string> |  (optional) \n\n            try\n            { \n                // Get work plan rotations\n                WorkPlanRotationListResponse result = apiInstance.GetWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWorkplanrotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitworkplans": {
    "operationId": "getworkforcemanagementmanagementunitworkplans",
    "functionName": "GetWorkforcemanagementManagementunitWorkplans",
    "signature": "GetWorkforcemanagementManagementunitWorkplans(managementUnitId, expand)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "WorkPlanListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitWorkplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var expand = new List<string>(); // List<string> |  (optional) \n\n            try\n            { \n                // Get work plans\n                WorkPlanListResponse result = apiInstance.GetWorkforcemanagementManagementunitWorkplans(managementUnitId, expand);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitWorkplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunits": {
    "operationId": "getworkforcemanagementmanagementunits",
    "functionName": "GetWorkforcemanagementManagementunits",
    "signature": "GetWorkforcemanagementManagementunits(pageSize, pageNumber, expand, feature, divisionId)",
    "parameters": [
      {
        "name": "pageSize",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "pageNumber",
        "type": "int?",
        "required": "false"
      },
      {
        "name": "expand",
        "type": "string",
        "required": "false"
      },
      {
        "name": "feature",
        "type": "string",
        "required": "false"
      },
      {
        "name": "divisionId",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var pageSize = 56;  // int? | Deprecated, paging is not supported (optional) \n            var pageNumber = 56;  // int? | Deprecated, paging is not supported (optional) \n            var expand = \"expand_example\";  // string | Deprecated, expand settings on the single MU route (optional) \n            var feature = \"feature_example\";  // string |  (optional) \n            var divisionId = \"divisionId_example\";  // string |  (optional) \n\n            try\n            { \n                // Get management units\n                ManagementUnitListing result = apiInstance.GetWorkforcemanagementManagementunits(pageSize, pageNumber, expand, feature, divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementmanagementunitsdivisionviews": {
    "operationId": "getworkforcemanagementmanagementunitsdivisionviews",
    "functionName": "GetWorkforcemanagementManagementunitsDivisionviews",
    "signature": "GetWorkforcemanagementManagementunitsDivisionviews(divisionId)",
    "parameters": [
      {
        "name": "divisionId",
        "type": "List<string>",
        "required": "false"
      }
    ],
    "return": "ManagementUnitListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementManagementunitsDivisionviewsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var divisionId = new List<string>(); // List<string> | The divisionIds to filter by. If omitted, will return all divisions (optional) \n\n            try\n            { \n                // Get management units across divisions\n                ManagementUnitListing result = apiInstance.GetWorkforcemanagementManagementunitsDivisionviews(divisionId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementManagementunitsDivisionviews: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementnotifications": {
    "operationId": "getworkforcemanagementnotifications",
    "functionName": "GetWorkforcemanagementNotifications",
    "signature": "GetWorkforcemanagementNotifications()",
    "return": "NotificationsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementNotificationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Get a list of notifications for the current user\n                NotificationsResponse result = apiInstance.GetWorkforcemanagementNotifications();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementNotifications: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementschedulingjob": {
    "operationId": "getworkforcemanagementschedulingjob",
    "functionName": "GetWorkforcemanagementSchedulingjob",
    "signature": "GetWorkforcemanagementSchedulingjob(jobId)",
    "parameters": [
      {
        "name": "jobId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "SchedulingStatusResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementSchedulingjobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var jobId = \"jobId_example\";  // string | The id of the scheduling job\n\n            try\n            { \n                // Get status of the scheduling job\n                SchedulingStatusResponse result = apiInstance.GetWorkforcemanagementSchedulingjob(jobId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementSchedulingjob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementshifttrades": {
    "operationId": "getworkforcemanagementshifttrades",
    "functionName": "GetWorkforcemanagementShifttrades",
    "signature": "GetWorkforcemanagementShifttrades()",
    "return": "ShiftTradeListResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementShifttradesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Gets all of my shift trades\n                ShiftTradeListResponse result = apiInstance.GetWorkforcemanagementShifttrades();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementShifttrades: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementtimeoffrequest": {
    "operationId": "getworkforcemanagementtimeoffrequest",
    "functionName": "GetWorkforcemanagementTimeoffrequest",
    "signature": "GetWorkforcemanagementTimeoffrequest(timeOffRequestId)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementTimeoffrequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The ID of the time off request\n\n            try\n            { \n                // Get a time off request for the current user\n                TimeOffRequestResponse result = apiInstance.GetWorkforcemanagementTimeoffrequest(timeOffRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementTimeoffrequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementtimeoffrequestwaitlistpositions": {
    "operationId": "getworkforcemanagementtimeoffrequestwaitlistpositions",
    "functionName": "GetWorkforcemanagementTimeoffrequestWaitlistpositions",
    "signature": "GetWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "WaitlistPositionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementTimeoffrequestWaitlistpositionsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The ID of the time off request\n\n            try\n            { \n                // Get the daily waitlist positions of a time off request for the current user\n                WaitlistPositionListing result = apiInstance.GetWorkforcemanagementTimeoffrequestWaitlistpositions(timeOffRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementTimeoffrequestWaitlistpositions: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "getworkforcemanagementtimeoffrequests": {
    "operationId": "getworkforcemanagementtimeoffrequests",
    "functionName": "GetWorkforcemanagementTimeoffrequests",
    "signature": "GetWorkforcemanagementTimeoffrequests(recentlyReviewed)",
    "parameters": [
      {
        "name": "recentlyReviewed",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class GetWorkforcemanagementTimeoffrequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var recentlyReviewed = true;  // bool? | Limit results to requests that have been reviewed within the preceding 30 days (optional)  (default to false)\n\n            try\n            { \n                // Get a list of time off requests for the current user\n                TimeOffRequestList result = apiInstance.GetWorkforcemanagementTimeoffrequests(recentlyReviewed);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.GetWorkforcemanagementTimeoffrequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementbusinessunit": {
    "operationId": "patchworkforcemanagementbusinessunit",
    "functionName": "PatchWorkforcemanagementBusinessunit",
    "signature": "PatchWorkforcemanagementBusinessunit(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateBusinessUnitRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementBusinessunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var body = new UpdateBusinessUnitRequest(); // UpdateBusinessUnitRequest | body (optional) \n\n            try\n            { \n                // Update business unit\n                BusinessUnitResponse result = apiInstance.PatchWorkforcemanagementBusinessunit(businessUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementBusinessunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementbusinessunitactivitycode": {
    "operationId": "patchworkforcemanagementbusinessunitactivitycode",
    "functionName": "PatchWorkforcemanagementBusinessunitActivitycode",
    "signature": "PatchWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "activityCodeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateActivityCodeRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementBusinessunitActivitycodeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var activityCodeId = \"activityCodeId_example\";  // string | The ID of the activity code to update\n            var body = new UpdateActivityCodeRequest(); // UpdateActivityCodeRequest | body (optional) \n\n            try\n            { \n                // Update an activity code\n                BusinessUnitActivityCode result = apiInstance.PatchWorkforcemanagementBusinessunitActivitycode(businessUnitId, activityCodeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementBusinessunitActivitycode: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementbusinessunitplanninggroup": {
    "operationId": "patchworkforcemanagementbusinessunitplanninggroup",
    "functionName": "PatchWorkforcemanagementBusinessunitPlanninggroup",
    "signature": "PatchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "planningGroupId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdatePlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "PlanningGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementBusinessunitPlanninggroupExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var planningGroupId = \"planningGroupId_example\";  // string | The ID of a planning group to update\n            var body = new UpdatePlanningGroupRequest(); // UpdatePlanningGroupRequest | body (optional) \n\n            try\n            { \n                // Updates the planning group\n                PlanningGroup result = apiInstance.PatchWorkforcemanagementBusinessunitPlanninggroup(businessUnitId, planningGroupId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementBusinessunitPlanninggroup: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementbusinessunitschedulingrun": {
    "operationId": "patchworkforcemanagementbusinessunitschedulingrun",
    "functionName": "PatchWorkforcemanagementBusinessunitSchedulingRun",
    "signature": "PatchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "runId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchBuScheduleRunRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementBusinessunitSchedulingRunExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var runId = \"runId_example\";  // string | The ID of the schedule run\n            var body = new PatchBuScheduleRunRequest(); // PatchBuScheduleRunRequest | body (optional) \n\n            try\n            { \n                // Mark a schedule run as applied\n                apiInstance.PatchWorkforcemanagementBusinessunitSchedulingRun(businessUnitId, runId, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementBusinessunitSchedulingRun: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementbusinessunitservicegoaltemplate": {
    "operationId": "patchworkforcemanagementbusinessunitservicegoaltemplate",
    "functionName": "PatchWorkforcemanagementBusinessunitServicegoaltemplate",
    "signature": "PatchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "serviceGoalTemplateId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateServiceGoalTemplate",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementBusinessunitServicegoaltemplateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var serviceGoalTemplateId = \"serviceGoalTemplateId_example\";  // string | The ID of a service goal template to update\n            var body = new UpdateServiceGoalTemplate(); // UpdateServiceGoalTemplate | body (optional) \n\n            try\n            { \n                // Updates a service goal template\n                ServiceGoalTemplate result = apiInstance.PatchWorkforcemanagementBusinessunitServicegoaltemplate(businessUnitId, serviceGoalTemplateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementBusinessunitServicegoaltemplate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunit": {
    "operationId": "patchworkforcemanagementmanagementunit",
    "functionName": "PatchWorkforcemanagementManagementunit",
    "signature": "PatchWorkforcemanagementManagementunit(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateManagementUnitRequest",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new UpdateManagementUnitRequest(); // UpdateManagementUnitRequest | body (optional) \n\n            try\n            { \n                // Update the requested management unit\n                ManagementUnit result = apiInstance.PatchWorkforcemanagementManagementunit(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunittimeofflimit": {
    "operationId": "patchworkforcemanagementmanagementunittimeofflimit",
    "functionName": "PatchWorkforcemanagementManagementunitTimeofflimit",
    "signature": "PatchWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTimeOffLimitRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitTimeofflimitExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var timeOffLimitId = \"timeOffLimitId_example\";  // string | The id of time off limit object to update\n            var body = new UpdateTimeOffLimitRequest(); // UpdateTimeOffLimitRequest | body (optional) \n\n            try\n            { \n                // Updates a time off limit object.\n                TimeOffLimit result = apiInstance.PatchWorkforcemanagementManagementunitTimeofflimit(managementUnitId, timeOffLimitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitTimeofflimit: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunittimeoffplan": {
    "operationId": "patchworkforcemanagementmanagementunittimeoffplan",
    "functionName": "PatchWorkforcemanagementManagementunitTimeoffplan",
    "signature": "PatchWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitTimeoffplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var timeOffPlanId = \"timeOffPlanId_example\";  // string | The ID of the time off plan to update\n            var body = new UpdateTimeOffPlanRequest(); // UpdateTimeOffPlanRequest | body (optional) \n\n            try\n            { \n                // Updates a time off plan\n                TimeOffPlan result = apiInstance.PatchWorkforcemanagementManagementunitTimeoffplan(managementUnitId, timeOffPlanId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitTimeoffplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunitusertimeoffrequest": {
    "operationId": "patchworkforcemanagementmanagementunitusertimeoffrequest",
    "functionName": "PatchWorkforcemanagementManagementunitUserTimeoffrequest",
    "signature": "PatchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AdminTimeOffRequestPatch",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitUserTimeoffrequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var userId = \"userId_example\";  // string | The id of the user the requested time off request belongs to\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The id of the time off request to update\n            var body = new AdminTimeOffRequestPatch(); // AdminTimeOffRequestPatch | body (optional) \n\n            try\n            { \n                // Update a time off request\n                TimeOffRequestResponse result = apiInstance.PatchWorkforcemanagementManagementunitUserTimeoffrequest(managementUnitId, userId, timeOffRequestId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitUserTimeoffrequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunitweekshifttrade": {
    "operationId": "patchworkforcemanagementmanagementunitweekshifttrade",
    "functionName": "PatchWorkforcemanagementManagementunitWeekShifttrade",
    "signature": "PatchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId, weekDateId, tradeId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "tradeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "PatchShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "ShiftTradeResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitWeekShifttradeExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var tradeId = \"tradeId_example\";  // string | The ID of the shift trade to update\n            var body = new PatchShiftTradeRequest(); // PatchShiftTradeRequest | body\n\n            try\n            { \n                // Updates a shift trade. This route can only be called by the initiating agent\n                ShiftTradeResponse result = apiInstance.PatchWorkforcemanagementManagementunitWeekShifttrade(managementUnitId, weekDateId, tradeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitWeekShifttrade: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunitworkplan": {
    "operationId": "patchworkforcemanagementmanagementunitworkplan",
    "functionName": "PatchWorkforcemanagementManagementunitWorkplan",
    "signature": "PatchWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, validationMode, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "validationMode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "WorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitWorkplanExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanId = \"workPlanId_example\";  // string | The ID of the work plan to update\n            var validationMode = \"validationMode_example\";  // string | Allows to update work plan even if validation result is invalid (optional) \n            var body = new WorkPlan(); // WorkPlan | body (optional) \n\n            try\n            { \n                // Update a work plan\n                WorkPlan result = apiInstance.PatchWorkforcemanagementManagementunitWorkplan(managementUnitId, workPlanId, validationMode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitWorkplan: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementmanagementunitworkplanrotation": {
    "operationId": "patchworkforcemanagementmanagementunitworkplanrotation",
    "functionName": "PatchWorkforcemanagementManagementunitWorkplanrotation",
    "signature": "PatchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UpdateWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementManagementunitWorkplanrotationExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanRotationId = \"workPlanRotationId_example\";  // string | The ID of the work plan rotation to update\n            var body = new UpdateWorkPlanRotationRequest(); // UpdateWorkPlanRotationRequest | body (optional) \n\n            try\n            { \n                // Update a work plan rotation\n                WorkPlanRotationResponse result = apiInstance.PatchWorkforcemanagementManagementunitWorkplanrotation(managementUnitId, workPlanRotationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementManagementunitWorkplanrotation: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "patchworkforcemanagementtimeoffrequest": {
    "operationId": "patchworkforcemanagementtimeoffrequest",
    "functionName": "PatchWorkforcemanagementTimeoffrequest",
    "signature": "PatchWorkforcemanagementTimeoffrequest(timeOffRequestId, body)",
    "parameters": [
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AgentTimeOffRequestPatch",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PatchWorkforcemanagementTimeoffrequestExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The ID of the time off request\n            var body = new AgentTimeOffRequestPatch(); // AgentTimeOffRequestPatch | body (optional) \n\n            try\n            { \n                // Update a time off request for the current user\n                TimeOffRequestResponse result = apiInstance.PatchWorkforcemanagementTimeoffrequest(timeOffRequestId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PatchWorkforcemanagementTimeoffrequest: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementadherencehistorical": {
    "operationId": "postworkforcemanagementadherencehistorical",
    "functionName": "PostWorkforcemanagementAdherenceHistorical",
    "signature": "PostWorkforcemanagementAdherenceHistorical(body)",
    "parameters": [
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceQueryForUsers",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementAdherenceHistoricalExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new WfmHistoricalAdherenceQueryForUsers(); // WfmHistoricalAdherenceQueryForUsers | body (optional) \n\n            try\n            { \n                // Request a historical adherence report for users across management units\n                WfmHistoricalAdherenceResponse result = apiInstance.PostWorkforcemanagementAdherenceHistorical(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementAdherenceHistorical: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementagentschedulesmine": {
    "operationId": "postworkforcemanagementagentschedulesmine",
    "functionName": "PostWorkforcemanagementAgentschedulesMine",
    "signature": "PostWorkforcemanagementAgentschedulesMine(body)",
    "parameters": [
      {
        "name": "body",
        "type": "BuGetCurrentAgentScheduleRequest",
        "required": "false"
      }
    ],
    "return": "BuCurrentAgentScheduleSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementAgentschedulesMineExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new BuGetCurrentAgentScheduleRequest(); // BuGetCurrentAgentScheduleRequest | body (optional) \n\n            try\n            { \n                // Get published schedule for the current user\n                BuCurrentAgentScheduleSearchResponse result = apiInstance.PostWorkforcemanagementAgentschedulesMine(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementAgentschedulesMine: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitactivitycodes": {
    "operationId": "postworkforcemanagementbusinessunitactivitycodes",
    "functionName": "PostWorkforcemanagementBusinessunitActivitycodes",
    "signature": "PostWorkforcemanagementBusinessunitActivitycodes(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateActivityCodeRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitActivityCode",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitActivitycodesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit, or 'mine' for the business unit of the logged-in user.\n            var body = new CreateActivityCodeRequest(); // CreateActivityCodeRequest | body (optional) \n\n            try\n            { \n                // Create a new activity code\n                BusinessUnitActivityCode result = apiInstance.PostWorkforcemanagementBusinessunitActivitycodes(businessUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitActivitycodes: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitagentschedulessearch": {
    "operationId": "postworkforcemanagementbusinessunitagentschedulessearch",
    "functionName": "PostWorkforcemanagementBusinessunitAgentschedulesSearch",
    "signature": "PostWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId, forceAsync, forceDownloadService, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "body",
        "type": "BuSearchAgentSchedulesRequest",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitAgentschedulesSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional) \n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service. For testing/app development purposes (optional) \n            var body = new BuSearchAgentSchedulesRequest(); // BuSearchAgentSchedulesRequest | body (optional) \n\n            try\n            { \n                // Search published schedules\n                BuAsyncAgentSchedulesSearchResponse result = apiInstance.PostWorkforcemanagementBusinessunitAgentschedulesSearch(businessUnitId, forceAsync, forceDownloadService, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitAgentschedulesSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitintraday": {
    "operationId": "postworkforcemanagementbusinessunitintraday",
    "functionName": "PostWorkforcemanagementBusinessunitIntraday",
    "signature": "PostWorkforcemanagementBusinessunitIntraday(businessUnitId, forceAsync, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "body",
        "type": "IntradayPlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "AsyncIntradayResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitIntradayExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional) \n            var body = new IntradayPlanningGroupRequest(); // IntradayPlanningGroupRequest | body (optional) \n\n            try\n            { \n                // Get intraday data for the given date for the requested planningGroupIds\n                AsyncIntradayResponse result = apiInstance.PostWorkforcemanagementBusinessunitIntraday(businessUnitId, forceAsync, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitIntraday: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitplanninggroups": {
    "operationId": "postworkforcemanagementbusinessunitplanninggroups",
    "functionName": "PostWorkforcemanagementBusinessunitPlanninggroups",
    "signature": "PostWorkforcemanagementBusinessunitPlanninggroups(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreatePlanningGroupRequest",
        "required": "false"
      }
    ],
    "return": "PlanningGroup",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitPlanninggroupsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var body = new CreatePlanningGroupRequest(); // CreatePlanningGroupRequest | body (optional) \n\n            try\n            { \n                // Adds a new planning group\n                PlanningGroup result = apiInstance.PostWorkforcemanagementBusinessunitPlanninggroups(businessUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitPlanninggroups: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitservicegoaltemplates": {
    "operationId": "postworkforcemanagementbusinessunitservicegoaltemplates",
    "functionName": "PostWorkforcemanagementBusinessunitServicegoaltemplates",
    "signature": "PostWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateServiceGoalTemplate",
        "required": "false"
      }
    ],
    "return": "ServiceGoalTemplate",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitServicegoaltemplatesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit.\n            var body = new CreateServiceGoalTemplate(); // CreateServiceGoalTemplate | body (optional) \n\n            try\n            { \n                // Adds a new service goal template\n                ServiceGoalTemplate result = apiInstance.PostWorkforcemanagementBusinessunitServicegoaltemplates(businessUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitServicegoaltemplates: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleagentschedulesquery": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleagentschedulesquery",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId, weekId, scheduleId, body, forceAsync, forceDownloadService)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuQueryAgentSchedulesRequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesQueryResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var body = new BuQueryAgentSchedulesRequest(); // BuQueryAgentSchedulesRequest | body\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional) \n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service. For testing/app development purposes (optional) \n\n            try\n            { \n                // Loads agent schedule data from the schedule. Used in combination with the metadata route\n                BuAsyncAgentSchedulesQueryResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery(businessUnitId, weekId, scheduleId, body, forceAsync, forceDownloadService);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekScheduleAgentschedulesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulecopy": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulecopy",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleCopy",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCopyScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekScheduleCopyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule to copy\n            var body = new BuCopyScheduleRequest(); // BuCopyScheduleRequest | body\n\n            try\n            { \n                // Copy a schedule\n                BuAsyncScheduleResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleCopy(businessUnitId, weekId, scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekScheduleCopy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulereschedule": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulereschedule",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleReschedule",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuRescheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleRunResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekScheduleRescheduleExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var body = new BuRescheduleRequest(); // BuRescheduleRequest | body\n\n            try\n            { \n                // Start a rescheduling run\n                BuAsyncScheduleRunResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleReschedule(businessUnitId, weekId, scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekScheduleReschedule: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleupdate": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleupdate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleUpdate",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "ProcessScheduleUpdateUploadRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekScheduleUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var body = new ProcessScheduleUpdateUploadRequest(); // ProcessScheduleUpdateUploadRequest | body\n\n            try\n            { \n                // Starts processing a schedule update\n                BuAsyncScheduleResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleUpdate(businessUnitId, weekId, scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekScheduleUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekscheduleupdateuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekscheduleupdateuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId, weekId, scheduleId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "scheduleId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "UpdateScheduleUploadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurlExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var scheduleId = \"scheduleId_example\";  // string | The ID of the schedule\n            var body = new UploadUrlRequestBody(); // UploadUrlRequestBody | body\n\n            try\n            { \n                // Creates a signed upload URL for updating a schedule\n                UpdateScheduleUploadResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl(businessUnitId, weekId, scheduleId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekScheduleUpdateUploadurl: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedules": {
    "operationId": "postworkforcemanagementbusinessunitweekschedules",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedules",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuCreateBlankScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuScheduleMetadata",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new BuCreateBlankScheduleRequest(); // BuCreateBlankScheduleRequest | body\n\n            try\n            { \n                // Create a blank schedule\n                BuScheduleMetadata result = apiInstance.PostWorkforcemanagementBusinessunitWeekSchedules(businessUnitId, weekId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesgenerate": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesgenerate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesGenerate",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BuGenerateScheduleRequest",
        "required": "true"
      }
    ],
    "return": "BuAsyncScheduleRunResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekSchedulesGenerateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new BuGenerateScheduleRequest(); // BuGenerateScheduleRequest | body\n\n            try\n            { \n                // Generate a schedule\n                BuAsyncScheduleRunResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesGenerate(businessUnitId, weekId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekSchedulesGenerate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesimport": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesimport",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesImport",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmProcessUploadRequest",
        "required": "true"
      }
    ],
    "return": "ScheduleUploadProcessingResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekSchedulesImportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new WfmProcessUploadRequest(); // WfmProcessUploadRequest | \n\n            try\n            { \n                // Starts processing a schedule import\n                ScheduleUploadProcessingResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesImport(businessUnitId, weekId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekSchedulesImport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekschedulesimportuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekschedulesimportuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId, weekId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "ImportScheduleUploadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurlExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit\n            var weekId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new UploadUrlRequestBody(); // UploadUrlRequestBody | body\n\n            try\n            { \n                // Creates a signed upload URL for importing a schedule\n                ImportScheduleUploadResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl(businessUnitId, weekId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekSchedulesImportUploadurl: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastcopy": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastcopy",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId, weekDateId, forecastId, body, forceAsync)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "forecastId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyBuForecastRequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AsyncForecastOperationResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekShorttermforecastCopyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var forecastId = \"forecastId_example\";  // string | The ID of the forecast to copy\n            var body = new CopyBuForecastRequest(); // CopyBuForecastRequest | body\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Copy a short term forecast\n                AsyncForecastOperationResult result = apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy(businessUnitId, weekDateId, forecastId, body, forceAsync);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekShorttermforecastCopy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsgenerate": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsgenerate",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId, weekDateId, body, forceAsync)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "GenerateBuForecastRequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "AsyncForecastOperationResult",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | The week start date of the forecast in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new GenerateBuForecastRequest(); // GenerateBuForecastRequest | \n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Generate a short term forecast\n                AsyncForecastOperationResult result = apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate(businessUnitId, weekDateId, body, forceAsync);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekShorttermforecastsGenerate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsimport": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsimport",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmProcessUploadRequest",
        "required": "true"
      }
    ],
    "return": "ImportForecastResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new WfmProcessUploadRequest(); // WfmProcessUploadRequest | \n\n            try\n            { \n                // Starts importing the uploaded short term forecast\n                ImportForecastResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport(businessUnitId, weekDateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImport: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunitweekshorttermforecastsimportuploadurl": {
    "operationId": "postworkforcemanagementbusinessunitweekshorttermforecastsimportuploadurl",
    "functionName": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl",
    "signature": "PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "businessUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UploadUrlRequestBody",
        "required": "true"
      }
    ],
    "return": "ImportForecastUploadResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurlExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var businessUnitId = \"businessUnitId_example\";  // string | The ID of the business unit to which the forecast belongs\n            var weekDateId = new Date();  // String | First day of schedule week in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new UploadUrlRequestBody(); // UploadUrlRequestBody | body\n\n            try\n            { \n                // Creates a signed upload URL for importing a short term forecast\n                ImportForecastUploadResponse result = apiInstance.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl(businessUnitId, weekDateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunitWeekShorttermforecastsImportUploadurl: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementbusinessunits": {
    "operationId": "postworkforcemanagementbusinessunits",
    "functionName": "PostWorkforcemanagementBusinessunits",
    "signature": "PostWorkforcemanagementBusinessunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateBusinessUnitRequest",
        "required": "false"
      }
    ],
    "return": "BusinessUnitResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementBusinessunitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new CreateBusinessUnitRequest(); // CreateBusinessUnitRequest | body (optional) \n\n            try\n            { \n                // Add a new business unit\n                BusinessUnitResponse result = apiInstance.PostWorkforcemanagementBusinessunits(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementBusinessunits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementcalendarurlics": {
    "operationId": "postworkforcemanagementcalendarurlics",
    "functionName": "PostWorkforcemanagementCalendarUrlIcs",
    "signature": "PostWorkforcemanagementCalendarUrlIcs(language)",
    "parameters": [
      {
        "name": "language",
        "type": "string",
        "required": "false"
      }
    ],
    "return": "CalendarUrlResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementCalendarUrlIcsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var language = \"en-US\";  // string | A language tag (which is sometimes referred to as a \\\"locale identifier\\\") to use to localize default activity code names in the ics-formatted calendar (optional)  (default to \"en-US\")\n\n            try\n            { \n                // Create a newly generated calendar link for the current user; if the current user has previously generated one, the generated link will be returned\n                CalendarUrlResponse result = apiInstance.PostWorkforcemanagementCalendarUrlIcs(language);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementCalendarUrlIcs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementhistoricaldatadeletejob": {
    "operationId": "postworkforcemanagementhistoricaldatadeletejob",
    "functionName": "PostWorkforcemanagementHistoricaldataDeletejob",
    "signature": "PostWorkforcemanagementHistoricaldataDeletejob()",
    "return": "HistoricalImportDeleteJobResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementHistoricaldataDeletejobExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n\n            try\n            { \n                // Delete the entries of the historical data imports in the organization\n                HistoricalImportDeleteJobResponse result = apiInstance.PostWorkforcemanagementHistoricaldataDeletejob();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementHistoricaldataDeletejob: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementhistoricaldatavalidate": {
    "operationId": "postworkforcemanagementhistoricaldatavalidate",
    "functionName": "PostWorkforcemanagementHistoricaldataValidate",
    "signature": "PostWorkforcemanagementHistoricaldataValidate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "ValidationServiceRequest",
        "required": "false"
      }
    ],
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementHistoricaldataValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new ValidationServiceRequest(); // ValidationServiceRequest | body (optional) \n\n            try\n            { \n                // Trigger validation process for historical import\n                apiInstance.PostWorkforcemanagementHistoricaldataValidate(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementHistoricaldataValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitagentschedulessearch": {
    "operationId": "postworkforcemanagementmanagementunitagentschedulessearch",
    "functionName": "PostWorkforcemanagementManagementunitAgentschedulesSearch",
    "signature": "PostWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId, forceAsync, forceDownloadService, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "forceDownloadService",
        "type": "bool?",
        "required": "false"
      },
      {
        "name": "body",
        "type": "BuSearchAgentSchedulesRequest",
        "required": "false"
      }
    ],
    "return": "BuAsyncAgentSchedulesSearchResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitAgentschedulesSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification. For testing/app development purposes (optional) \n            var forceDownloadService = true;  // bool? | Force the result of this operation to be sent via download service. For testing/app development purposes (optional) \n            var body = new BuSearchAgentSchedulesRequest(); // BuSearchAgentSchedulesRequest | body (optional) \n\n            try\n            { \n                // Query published schedules for given given time range for set of users\n                BuAsyncAgentSchedulesSearchResponse result = apiInstance.PostWorkforcemanagementManagementunitAgentschedulesSearch(managementUnitId, forceAsync, forceDownloadService, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitAgentschedulesSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunithistoricaladherencequery": {
    "operationId": "postworkforcemanagementmanagementunithistoricaladherencequery",
    "functionName": "PostWorkforcemanagementManagementunitHistoricaladherencequery",
    "signature": "PostWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "WfmHistoricalAdherenceQuery",
        "required": "false"
      }
    ],
    "return": "WfmHistoricalAdherenceResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitHistoricaladherencequeryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var body = new WfmHistoricalAdherenceQuery(); // WfmHistoricalAdherenceQuery | body (optional) \n\n            try\n            { \n                // Request a historical adherence report\n                WfmHistoricalAdherenceResponse result = apiInstance.PostWorkforcemanagementManagementunitHistoricaladherencequery(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitHistoricaladherencequery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitmove": {
    "operationId": "postworkforcemanagementmanagementunitmove",
    "functionName": "PostWorkforcemanagementManagementunitMove",
    "signature": "PostWorkforcemanagementManagementunitMove(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MoveManagementUnitRequest",
        "required": "false"
      }
    ],
    "return": "MoveManagementUnitResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitMoveExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new MoveManagementUnitRequest(); // MoveManagementUnitRequest | body (optional) \n\n            try\n            { \n                // Move the requested management unit to a new business unit\n                MoveManagementUnitResponse result = apiInstance.PostWorkforcemanagementManagementunitMove(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitMove: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitschedulessearch": {
    "operationId": "postworkforcemanagementmanagementunitschedulessearch",
    "functionName": "PostWorkforcemanagementManagementunitSchedulesSearch",
    "signature": "PostWorkforcemanagementManagementunitSchedulesSearch(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "UserListScheduleRequestBody",
        "required": "false"
      }
    ],
    "return": "UserScheduleContainer",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitSchedulesSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new UserListScheduleRequestBody(); // UserListScheduleRequestBody | body (optional) \n\n            try\n            { \n                // Query published schedules for given given time range for set of users\n                UserScheduleContainer result = apiInstance.PostWorkforcemanagementManagementunitSchedulesSearch(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitSchedulesSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeofflimits": {
    "operationId": "postworkforcemanagementmanagementunittimeofflimits",
    "functionName": "PostWorkforcemanagementManagementunitTimeofflimits",
    "signature": "PostWorkforcemanagementManagementunitTimeofflimits(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateTimeOffLimitRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeofflimitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var body = new CreateTimeOffLimitRequest(); // CreateTimeOffLimitRequest | body (optional) \n\n            try\n            { \n                // Creates a new time off limit object under management unit.\n                TimeOffLimit result = apiInstance.PostWorkforcemanagementManagementunitTimeofflimits(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeofflimits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeofflimitsvaluesquery": {
    "operationId": "postworkforcemanagementmanagementunittimeofflimitsvaluesquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "QueryTimeOffLimitValuesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeofflimitsValuesQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var body = new QueryTimeOffLimitValuesRequest(); // QueryTimeOffLimitValuesRequest | body (optional) \n\n            try\n            { \n                // Retrieves time off limit related values based on a given set of filters.\n                QueryTimeOffLimitValuesResponse result = apiInstance.PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeofflimitsValuesQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeoffplans": {
    "operationId": "postworkforcemanagementmanagementunittimeoffplans",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffplans",
    "signature": "PostWorkforcemanagementManagementunitTimeoffplans(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateTimeOffPlanRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeoffplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var body = new CreateTimeOffPlanRequest(); // CreateTimeOffPlanRequest | body (optional) \n\n            try\n            { \n                // Creates a new time off plan\n                TimeOffPlan result = apiInstance.PostWorkforcemanagementManagementunitTimeoffplans(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeoffplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequests": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequests",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequests",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequests(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CreateAdminTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestList",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeoffrequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new CreateAdminTimeOffRequest(); // CreateAdminTimeOffRequest | body (optional) \n\n            try\n            { \n                // Create a new time off request\n                TimeOffRequestList result = apiInstance.PostWorkforcemanagementManagementunitTimeoffrequests(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeoffrequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequestsquery": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequestsquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequestsQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TimeOffRequestQueryBody",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeoffrequestsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new TimeOffRequestQueryBody(); // TimeOffRequestQueryBody | body (optional) \n\n            try\n            { \n                // Fetches time off requests matching the conditions specified in the request body\n                TimeOffRequestListing result = apiInstance.PostWorkforcemanagementManagementunitTimeoffrequestsQuery(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeoffrequestsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunittimeoffrequestswaitlistpositionsquery": {
    "operationId": "postworkforcemanagementmanagementunittimeoffrequestswaitlistpositionsquery",
    "functionName": "PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery",
    "signature": "PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "QueryWaitlistPositionsRequest",
        "required": "false"
      }
    ],
    "return": "WaitlistPositionListing",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var body = new QueryWaitlistPositionsRequest(); // QueryWaitlistPositionsRequest | body (optional) \n\n            try\n            { \n                // Retrieves daily waitlist position for a list of time off requests\n                WaitlistPositionListing result = apiInstance.PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitTimeoffrequestsWaitlistpositionsQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitusertimeoffbalancejobs": {
    "operationId": "postworkforcemanagementmanagementunitusertimeoffbalancejobs",
    "functionName": "PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs",
    "signature": "PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId, userId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "TimeOffBalanceRequest",
        "required": "true"
      }
    ],
    "return": "TimeOffBalancesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitUserTimeoffbalanceJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit\n            var userId = \"userId_example\";  // string | The ID of the user\n            var body = new TimeOffBalanceRequest(); // TimeOffBalanceRequest | The request body\n\n            try\n            { \n                // Query time off balances for a given user for specified activity code and dates\n                TimeOffBalancesResponse result = apiInstance.PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs(managementUnitId, userId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitUserTimeoffbalanceJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitusertimeoffrequesttimeoffbalancejobs": {
    "operationId": "postworkforcemanagementmanagementunitusertimeoffrequesttimeoffbalancejobs",
    "functionName": "PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs",
    "signature": "PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId, userId, timeOffRequestId)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "userId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffRequestId",
        "type": "string",
        "required": "true"
      }
    ],
    "return": "TimeOffBalancesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var userId = \"userId_example\";  // string | The userId to whom the time off request applies.\n            var timeOffRequestId = \"timeOffRequestId_example\";  // string | The time off request id.\n\n            try\n            { \n                // Query time off balances for dates spanned by a given time off request\n                TimeOffBalancesResponse result = apiInstance.PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs(managementUnitId, userId, timeOffRequestId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitUserTimeoffrequestTimeoffbalanceJobs: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradematch": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradematch",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradeMatch",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId, weekDateId, tradeId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "tradeId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "MatchShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "MatchShiftTradeResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWeekShifttradeMatchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var tradeId = \"tradeId_example\";  // string | The ID of the shift trade to update\n            var body = new MatchShiftTradeRequest(); // MatchShiftTradeRequest | body\n\n            try\n            { \n                // Matches a shift trade. This route can only be called by the receiving agent\n                MatchShiftTradeResponse result = apiInstance.PostWorkforcemanagementManagementunitWeekShifttradeMatch(managementUnitId, weekDateId, tradeId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWeekShifttradeMatch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttrades": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttrades",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttrades",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddShiftTradeRequest",
        "required": "true"
      }
    ],
    "return": "ShiftTradeResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWeekShifttradesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new AddShiftTradeRequest(); // AddShiftTradeRequest | body\n\n            try\n            { \n                // Adds a shift trade\n                ShiftTradeResponse result = apiInstance.PostWorkforcemanagementManagementunitWeekShifttrades(managementUnitId, weekDateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWeekShifttrades: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradessearch": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradessearch",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradesSearch",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId, weekDateId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SearchShiftTradesRequest",
        "required": "true"
      }
    ],
    "return": "SearchShiftTradesResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWeekShifttradesSearchExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new SearchShiftTradesRequest(); // SearchShiftTradesRequest | body\n\n            try\n            { \n                // Searches for potential shift trade matches for the current agent\n                SearchShiftTradesResponse result = apiInstance.PostWorkforcemanagementManagementunitWeekShifttradesSearch(managementUnitId, weekDateId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWeekShifttradesSearch: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitweekshifttradesstatebulk": {
    "operationId": "postworkforcemanagementmanagementunitweekshifttradesstatebulk",
    "functionName": "PostWorkforcemanagementManagementunitWeekShifttradesStateBulk",
    "signature": "PostWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId, weekDateId, body, forceAsync)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "weekDateId",
        "type": "String",
        "required": "true"
      },
      {
        "name": "body",
        "type": "BulkShiftTradeStateUpdateRequest",
        "required": "true"
      },
      {
        "name": "forceAsync",
        "type": "bool?",
        "required": "false"
      }
    ],
    "return": "BulkUpdateShiftTradeStateResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWeekShifttradesStateBulkExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var weekDateId = new Date();  // String | The start date of the week schedule in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd\n            var body = new BulkShiftTradeStateUpdateRequest(); // BulkShiftTradeStateUpdateRequest | body\n            var forceAsync = true;  // bool? | Force the result of this operation to be sent asynchronously via notification.  For testing/app development purposes (optional) \n\n            try\n            { \n                // Updates the state of a batch of shift trades\n                BulkUpdateShiftTradeStateResponse result = apiInstance.PostWorkforcemanagementManagementunitWeekShifttradesStateBulk(managementUnitId, weekDateId, body, forceAsync);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWeekShifttradesStateBulk: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitworkplancopy": {
    "operationId": "postworkforcemanagementmanagementunitworkplancopy",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanCopy",
    "signature": "PostWorkforcemanagementManagementunitWorkplanCopy(managementUnitId, workPlanId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyWorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWorkplanCopyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanId = \"workPlanId_example\";  // string | The ID of the work plan to create a copy\n            var body = new CopyWorkPlan(); // CopyWorkPlan | body (optional) \n\n            try\n            { \n                // Create a copy of work plan\n                WorkPlan result = apiInstance.PostWorkforcemanagementManagementunitWorkplanCopy(managementUnitId, workPlanId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWorkplanCopy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitworkplanvalidate": {
    "operationId": "postworkforcemanagementmanagementunitworkplanvalidate",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanValidate",
    "signature": "PostWorkforcemanagementManagementunitWorkplanValidate(managementUnitId, workPlanId, expand, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "expand",
        "type": "List<string>",
        "required": "false"
      },
      {
        "name": "body",
        "type": "WorkPlanValidationRequest",
        "required": "false"
      }
    ],
    "return": "ValidateWorkPlanResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWorkplanValidateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanId = \"workPlanId_example\";  // string | The ID of the work plan to validate. For new work plan, use the word 'new' for the ID.\n            var expand = new List<string>(); // List<string> |  (optional) \n            var body = new WorkPlanValidationRequest(); // WorkPlanValidationRequest | body (optional) \n\n            try\n            { \n                // Validate Work Plan\n                ValidateWorkPlanResponse result = apiInstance.PostWorkforcemanagementManagementunitWorkplanValidate(managementUnitId, workPlanId, expand, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWorkplanValidate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitworkplanrotationcopy": {
    "operationId": "postworkforcemanagementmanagementunitworkplanrotationcopy",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanrotationCopy",
    "signature": "PostWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId, workPlanRotationId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "workPlanRotationId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "CopyWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWorkplanrotationCopyExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var workPlanRotationId = \"workPlanRotationId_example\";  // string | The ID of the work plan rotation to create a copy\n            var body = new CopyWorkPlanRotationRequest(); // CopyWorkPlanRotationRequest | body (optional) \n\n            try\n            { \n                // Create a copy of work plan rotation\n                WorkPlanRotationResponse result = apiInstance.PostWorkforcemanagementManagementunitWorkplanrotationCopy(managementUnitId, workPlanRotationId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWorkplanrotationCopy: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitworkplanrotations": {
    "operationId": "postworkforcemanagementmanagementunitworkplanrotations",
    "functionName": "PostWorkforcemanagementManagementunitWorkplanrotations",
    "signature": "PostWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "AddWorkPlanRotationRequest",
        "required": "false"
      }
    ],
    "return": "WorkPlanRotationResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWorkplanrotationsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var body = new AddWorkPlanRotationRequest(); // AddWorkPlanRotationRequest | body (optional) \n\n            try\n            { \n                // Create a new work plan rotation\n                WorkPlanRotationResponse result = apiInstance.PostWorkforcemanagementManagementunitWorkplanrotations(managementUnitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWorkplanrotations: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunitworkplans": {
    "operationId": "postworkforcemanagementmanagementunitworkplans",
    "functionName": "PostWorkforcemanagementManagementunitWorkplans",
    "signature": "PostWorkforcemanagementManagementunitWorkplans(managementUnitId, validationMode, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "validationMode",
        "type": "string",
        "required": "false"
      },
      {
        "name": "body",
        "type": "CreateWorkPlan",
        "required": "false"
      }
    ],
    "return": "WorkPlan",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitWorkplansExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit, or 'mine' for the management unit of the logged-in user.\n            var validationMode = \"validationMode_example\";  // string | Allows to create work plan even if the validation result is invalid (optional) \n            var body = new CreateWorkPlan(); // CreateWorkPlan | body (optional) \n\n            try\n            { \n                // Create a new work plan\n                WorkPlan result = apiInstance.PostWorkforcemanagementManagementunitWorkplans(managementUnitId, validationMode, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunitWorkplans: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementmanagementunits": {
    "operationId": "postworkforcemanagementmanagementunits",
    "functionName": "PostWorkforcemanagementManagementunits",
    "signature": "PostWorkforcemanagementManagementunits(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateManagementUnitApiRequest",
        "required": "false"
      }
    ],
    "return": "ManagementUnit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementManagementunitsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new CreateManagementUnitApiRequest(); // CreateManagementUnitApiRequest | body (optional) \n\n            try\n            { \n                // Add a management unit\n                ManagementUnit result = apiInstance.PostWorkforcemanagementManagementunits(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementManagementunits: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementnotificationsupdate": {
    "operationId": "postworkforcemanagementnotificationsupdate",
    "functionName": "PostWorkforcemanagementNotificationsUpdate",
    "signature": "PostWorkforcemanagementNotificationsUpdate(body)",
    "parameters": [
      {
        "name": "body",
        "type": "UpdateNotificationsRequest",
        "required": "false"
      }
    ],
    "return": "UpdateNotificationsResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementNotificationsUpdateExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new UpdateNotificationsRequest(); // UpdateNotificationsRequest | body (optional) \n\n            try\n            { \n                // Mark a list of notifications as read or unread\n                UpdateNotificationsResponse result = apiInstance.PostWorkforcemanagementNotificationsUpdate(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementNotificationsUpdate: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementschedules": {
    "operationId": "postworkforcemanagementschedules",
    "functionName": "PostWorkforcemanagementSchedules",
    "signature": "PostWorkforcemanagementSchedules(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CurrentUserScheduleRequestBody",
        "required": "false"
      }
    ],
    "return": "UserScheduleContainer",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementSchedulesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new CurrentUserScheduleRequestBody(); // CurrentUserScheduleRequestBody | body (optional) \n\n            try\n            { \n                // Get published schedule for the current user\n                UserScheduleContainer result = apiInstance.PostWorkforcemanagementSchedules(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementSchedules: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementtimeofflimitsavailablequery": {
    "operationId": "postworkforcemanagementtimeofflimitsavailablequery",
    "functionName": "PostWorkforcemanagementTimeofflimitsAvailableQuery",
    "signature": "PostWorkforcemanagementTimeofflimitsAvailableQuery(body)",
    "parameters": [
      {
        "name": "body",
        "type": "AvailableTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "AvailableTimeOffResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementTimeofflimitsAvailableQueryExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new AvailableTimeOffRequest(); // AvailableTimeOffRequest | body (optional) \n\n            try\n            { \n                // Queries available time off for the current user\n                AvailableTimeOffResponse result = apiInstance.PostWorkforcemanagementTimeofflimitsAvailableQuery(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementTimeofflimitsAvailableQuery: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "postworkforcemanagementtimeoffrequests": {
    "operationId": "postworkforcemanagementtimeoffrequests",
    "functionName": "PostWorkforcemanagementTimeoffrequests",
    "signature": "PostWorkforcemanagementTimeoffrequests(body)",
    "parameters": [
      {
        "name": "body",
        "type": "CreateAgentTimeOffRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffRequestResponse",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PostWorkforcemanagementTimeoffrequestsExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var body = new CreateAgentTimeOffRequest(); // CreateAgentTimeOffRequest | body (optional) \n\n            try\n            { \n                // Create a time off request for the current user\n                TimeOffRequestResponse result = apiInstance.PostWorkforcemanagementTimeoffrequests(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PostWorkforcemanagementTimeoffrequests: \" + e.Message );\n            }\n        }\n    }\n}"
  },
  "putworkforcemanagementmanagementunittimeofflimitvalues": {
    "operationId": "putworkforcemanagementmanagementunittimeofflimitvalues",
    "functionName": "PutWorkforcemanagementManagementunitTimeofflimitValues",
    "signature": "PutWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId, timeOffLimitId, body)",
    "parameters": [
      {
        "name": "managementUnitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "timeOffLimitId",
        "type": "string",
        "required": "true"
      },
      {
        "name": "body",
        "type": "SetTimeOffLimitValuesRequest",
        "required": "false"
      }
    ],
    "return": "TimeOffLimit",
    "example": "using System;\nusing System.Diagnostics;\nusing PureCloudPlatform.Client.V2.Api;\nusing PureCloudPlatform.Client.V2.Client;\nusing PureCloudPlatform.Client.V2.Model;\nusing PureCloudPlatform.Client.V2.Extensions;\n\nnamespace Example\n{\n    public class PutWorkforcemanagementManagementunitTimeofflimitValuesExample\n    {\n        static void Main(string[] args)\n        {   \n            PureCloudRegionHosts region = PureCloudRegionHosts.us_east_1; // Genesys Cloud region\n            Configuration.Default.ApiClient.setBasePath(region);\n            \n            // Configure OAuth2 access token for authorization: PureCloud OAuth\n            // The following example is using the Client Credentials Grant\n            var accessTokenInfo = Configuration.Default.ApiClient.PostToken(\"18a4c365-7ea3-4f0g-9fb7-884fb4d2e9c6\", \"M7FfdYQyL5TA6BdbEZ8M9-Wx4uZai1rNQ7jcuFdcJJo\");\n\n            var apiInstance = new WorkforceManagementApi();\n            var managementUnitId = \"managementUnitId_example\";  // string | The ID of the management unit.\n            var timeOffLimitId = \"timeOffLimitId_example\";  // string | The ID of the time off limit object to set values for\n            var body = new SetTimeOffLimitValuesRequest(); // SetTimeOffLimitValuesRequest | body (optional) \n\n            try\n            { \n                // Sets daily values for a date range of time off limit object\n                TimeOffLimit result = apiInstance.PutWorkforcemanagementManagementunitTimeofflimitValues(managementUnitId, timeOffLimitId, body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling WorkforceManagement.PutWorkforcemanagementManagementunitTimeofflimitValues: \" + e.Message );\n            }\n        }\n    }\n}"
  }
}